memberSearchIndex = [{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"AbstractAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"AbstractAgent(AgentProgram)","url":"%3Cinit%3E(aima.core.agent.AgentProgram)"},{"p":"aima.core.probability.domain","c":"AbstractContinuousDomain","l":"AbstractContinuousDomain()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.proposition","c":"AbstractDerivedProposition","l":"AbstractDerivedProposition(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.probability.domain","c":"AbstractDiscreteDomain","l":"AbstractDiscreteDomain()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"AbstractEnvironment()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"AbstractFiniteDomain()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"AbstractFOLVisitor()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"AbstractModulation()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"AbstractNode(RandomVariable, Node...)","url":"%3Cinit%3E(aima.core.probability.RandomVariable,aima.core.probability.bayes.Node...)"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"AbstractNode(RandomVariable)","url":"%3Cinit%3E(aima.core.probability.RandomVariable)"},{"p":"aima.core.logic.propositional.parsing","c":"AbstractPLVisitor","l":"AbstractPLVisitor()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"AbstractProofStep()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"AbstractProposition()","url":"%3Cinit%3E()"},{"p":"aima.core.robotics.impl.datatypes","c":"AbstractRangeReading","l":"AbstractRangeReading(double, Angle)","url":"%3Cinit%3E(double,aima.core.robotics.impl.datatypes.Angle)"},{"p":"aima.core.robotics.impl.datatypes","c":"AbstractRangeReading","l":"AbstractRangeReading(double)","url":"%3Cinit%3E(double)"},{"p":"aima.core.probability.proposition","c":"AbstractTermProposition","l":"AbstractTermProposition(RandomVariable)","url":"%3Cinit%3E(aima.core.probability.RandomVariable)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Inference","l":"AC3"},{"p":"aima.core.search.csp","c":"AC3Strategy","l":"AC3Strategy()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"FOLNode","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"accept(FOLVisitor, Object)","url":"accept(aima.core.logic.fol.parsing.FOLVisitor,java.lang.Object)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"accept(PLVisitor<A, R>, A)","url":"accept(aima.core.logic.propositional.parsing.PLVisitor,A)"},{"p":"aima.core.learning.neural","c":"Layer","l":"acceptNewBiasUpdate(Vector)","url":"acceptNewBiasUpdate(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"Layer","l":"acceptNewWeightUpdate(Matrix)","url":"acceptNewWeightUpdate(aima.core.util.math.Matrix)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"ACTION_FORWARD"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"ACTION_MOVE_LEFT"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"ACTION_MOVE_RIGHT"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"ACTION_SHOOT"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"ACTION_SUCK"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"ACTION_TURN_LEFT"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"ACTION_TURN_RIGHT"},{"p":"aima.core.probability.mdp","c":"Policy","l":"action(S)"},{"p":"aima.core.probability.mdp.impl","c":"LookupPolicy","l":"action(S)"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"actionList"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"actionListener"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"actionPerformed(ActionEvent)","url":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"actions()"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldActions","l":"actions(Object)","url":"actions(java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"ActionsFunction","l":"actions(Object)","url":"actions(java.lang.Object)"},{"p":"aima.core.probability.mdp","c":"ActionsFunction","l":"actions(S)"},{"p":"aima.core.probability.mdp","c":"MarkovDecisionProcess","l":"actions(S)"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"actions(S)"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"actionsFunction"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"actionsFunction"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"actionsFunction"},{"p":"aima.core.environment.connectfour","c":"ActionValuePair","l":"ActionValuePair(ACTION, double)","url":"%3Cinit%3E(ACTION,double)"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"activateSystemStyle()"},{"p":"aima.core.learning.neural","c":"ActivationFunction","l":"activation(double)"},{"p":"aima.core.learning.neural","c":"HardLimitActivationFunction","l":"activation(double)"},{"p":"aima.core.learning.neural","c":"LogSigActivationFunction","l":"activation(double)"},{"p":"aima.core.learning.neural","c":"PureLinearActivationFunction","l":"activation(double)"},{"p":"aima.core.learning.learners","c":"AdaBoostLearner","l":"AdaBoostLearner(List<Learner>, DataSet)","url":"%3Cinit%3E(java.util.List,aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.inductive","c":"DecisionList","l":"add(DLTest, String)","url":"add(aima.core.learning.inductive.DLTest,java.lang.String)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"add(Example)","url":"add(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"add(String, String)","url":"add(java.lang.String,java.lang.String)"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"add(String)","url":"add(java.lang.String)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"add(Vector2D)","url":"add(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"add(Vector2D)","url":"add(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"addAgent()"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"addAgent(Agent, String)","url":"addAgent(aima.core.agent.Agent,java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"addAgent(Agent, String)","url":"addAgent(aima.core.agent.Agent,java.lang.String)"},{"p":"aima.core.agent","c":"Environment","l":"addAgent(Agent)","url":"addAgent(aima.core.agent.Agent)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"addAgent(Agent)","url":"addAgent(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"addAgent(Agent)","url":"addAgent(aima.core.agent.Agent)"},{"p":"aima.core.robotics.datatypes","c":"IMclPose","l":"addAngle(V)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addAnswerLiteral()"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"addBidirectionalLink(String, String, Double)","url":"addBidirectionalLink(java.lang.String,java.lang.String,java.lang.Double)"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"addChild(Node)","url":"addChild(aima.core.probability.bayes.Node)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addConstant(String)","url":"addConstant(java.lang.String)"},{"p":"aima.core.search.csp","c":"CSP","l":"addConstraint(Constraint)","url":"addConstraint(aima.core.search.csp.Constraint)"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"addCSPStateListener(CSPStateListener)","url":"addCSPStateListener(aima.core.search.csp.CSPStateListener)"},{"p":"aima.core.logic.fol.inference.otter","c":"LightestClauseHeuristic","l":"addedClauseToSOS(Clause)","url":"addedClauseToSOS(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultLightestClauseHeuristic","l":"addedClauseToSOS(Clause)","url":"addedClauseToSOS(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"addEntry(String, String, float)","url":"addEntry(java.lang.String,java.lang.String,float)"},{"p":"aima.core.agent","c":"Environment","l":"addEnvironmentObject(EnvironmentObject)","url":"addEnvironmentObject(aima.core.agent.EnvironmentObject)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"addEnvironmentObject(EnvironmentObject)","url":"addEnvironmentObject(aima.core.agent.EnvironmentObject)"},{"p":"aima.core.agent","c":"Environment","l":"addEnvironmentView(EnvironmentView)","url":"addEnvironmentView(aima.core.agent.EnvironmentView)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"addEnvironmentView(EnvironmentView)","url":"addEnvironmentView(aima.core.agent.EnvironmentView)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addFOLDomainListener(FOLDomainListener)","url":"addFOLDomainListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addFunction(String)","url":"addFunction(java.lang.String)"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"addLeaf(String, String)","url":"addLeaf(java.lang.String,java.lang.String)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"addLeaf(String, String)","url":"addLeaf(java.lang.String,java.lang.String)"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"addLexWords(Lexicon)","url":"addLexWords(aima.core.nlp.parsing.Lexicon)"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"addLexWords(String...)","url":"addLexWords(java.lang.String...)"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"addLiteral(Literal)","url":"addLiteral(aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"addLiteral(Literal)","url":"addLiteral(aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"addNegativeLiteral(AtomicSentence)","url":"addNegativeLiteral(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"addNode(String, DecisionTree)","url":"addNode(java.lang.String,aima.core.learning.inductive.DecisionTree)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"addNode(String, DecisionTree)","url":"addNode(java.lang.String,aima.core.learning.inductive.DecisionTree)"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"addNodeListener(NodeExpander.NodeListener)","url":"addNodeListener(aima.core.search.framework.NodeExpander.NodeListener)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"addObjectToLocation(EnvironmentObject, XYLocation)","url":"addObjectToLocation(aima.core.agent.EnvironmentObject,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"addPositiveLiteral(AtomicSentence)","url":"addPositiveLiteral(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addPredicate(String)","url":"addPredicate(java.lang.String)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"addProgressTracer(GeneticAlgorithm.ProgressTracer<A>)","url":"addProgressTracer(aima.core.search.local.GeneticAlgorithm.ProgressTracer)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"addQueenAt(XYLocation)","url":"addQueenAt(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbCNFGrammar","l":"addRule(Rule)","url":"addRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextFreeGrammar","l":"addRule(Rule)","url":"addRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextSensitiveGrammar","l":"addRule(Rule)","url":"addRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"addRule(Rule)","url":"addRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"addRule(Rule)","url":"addRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextSensitiveGrammar","l":"addRules(ArrayList<Rule>)","url":"addRules(java.util.ArrayList)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbCNFGrammar","l":"addRules(List<Rule>)","url":"addRules(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextFreeGrammar","l":"addRules(List<Rule>)","url":"addRules(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"addRules(List<Rule>)","url":"addRules(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"addRules(List<Rule>)","url":"addRules(java.util.List)"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"addScope(Collection<RandomVariable>)","url":"addScope(java.util.Collection)"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"addScope(RandomVariable)","url":"addScope(aima.core.probability.RandomVariable)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"addSearchAlgorithm(String, SearchForActions)","url":"addSearchAlgorithm(java.lang.String,aima.core.search.framework.SearchForActions)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addSkolemConstant()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"addSkolemFunction()"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.search.framework.qsearch","c":"TreeSearch","l":"addToFrontier(Node)","url":"addToFrontier(aima.core.search.framework.Node)"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"addUnboundScope(Collection<RandomVariable>)","url":"addUnboundScope(java.util.Collection)"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"addUnboundScope(RandomVariable)","url":"addUnboundScope(aima.core.probability.RandomVariable)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"addUnidirectionalLink(String, String, Double)","url":"addUnidirectionalLink(java.lang.String,java.lang.String,java.lang.Double)"},{"p":"aima.core.search.csp","c":"CSP","l":"addVariable(Variable)","url":"addVariable(aima.core.search.csp.Variable)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"addVertex(VertexLabelType)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"ADELAIDE"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"adjustTransformation(double, double, double, double)","url":"adjustTransformation(double,double,double,double)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"agent"},{"p":"aima.core.environment.map","c":"DynAttributeNames","l":"AGENT_LOCATION"},{"p":"aima.core.agent","c":"EnvironmentView","l":"agentActed(Agent, Action, Environment)","url":"agentActed(aima.core.agent.Agent,aima.core.agent.Action,aima.core.agent.Environment)"},{"p":"aima.core.agent.impl","c":"SimpleEnvironmentView","l":"agentActed(Agent, Action, Environment)","url":"agentActed(aima.core.agent.Agent,aima.core.agent.Action,aima.core.agent.Environment)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentViewActionTracker","l":"agentActed(Agent, Action, Environment)","url":"agentActed(aima.core.agent.Agent,aima.core.agent.Action,aima.core.agent.Environment)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"agentActed(Agent, Action, Environment)","url":"agentActed(aima.core.agent.Agent,aima.core.agent.Action,aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"agentActed(Agent, Action, Environment)","url":"agentActed(aima.core.agent.Agent,aima.core.agent.Action,aima.core.agent.Environment)"},{"p":"aima.core.agent","c":"EnvironmentView","l":"agentAdded(Agent, Environment)","url":"agentAdded(aima.core.agent.Agent,aima.core.agent.Environment)"},{"p":"aima.core.agent.impl","c":"SimpleEnvironmentView","l":"agentAdded(Agent, Environment)","url":"agentAdded(aima.core.agent.Agent,aima.core.agent.Environment)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentViewActionTracker","l":"agentAdded(Agent, Environment)","url":"agentAdded(aima.core.agent.Agent,aima.core.agent.Environment)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"agentAdded(Agent, Environment)","url":"agentAdded(aima.core.agent.Agent,aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"agentAdded(Agent, Environment)","url":"agentAdded(aima.core.agent.Agent,aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"AgentAppController()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"AgentAppEnvironmentView()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"AgentAppFrame()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"AgentPercept()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"AgentPercept(boolean, boolean, boolean, boolean, boolean)","url":"%3Cinit%3E(boolean,boolean,boolean,boolean,boolean)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"AgentPosition(int, int, AgentPosition.Orientation)","url":"%3Cinit%3E(int,int,aima.core.environment.wumpusworld.AgentPosition.Orientation)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"AgentPosition(Room, AgentPosition.Orientation)","url":"%3Cinit%3E(aima.core.environment.wumpusworld.Room,aima.core.environment.wumpusworld.AgentPosition.Orientation)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"agents"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"ALARM_RV"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"ALBANY"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"ALICE_SPRINGS"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"alpha(FrequencyCounter<Pair<S, A>>, S, A)","url":"alpha(aima.core.util.FrequencyCounter,S,A)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveTDAgent","l":"alpha(FrequencyCounter<S>, S)","url":"alpha(aima.core.util.FrequencyCounter,S)"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"AlphaBetaSearch(Game<STATE, ACTION, PLAYER>)","url":"%3Cinit%3E(aima.core.search.adversarial.Game)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"analyzePotentialWinPositions(Integer)","url":"analyzePotentialWinPositions(java.lang.Integer)"},{"p":"aima.core.logic.fol","c":"Connectors","l":"AND"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"AND"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ANDCondition","l":"ANDCondition(Condition, Condition)","url":"%3Cinit%3E(aima.core.agent.impl.aprog.simplerule.Condition,aima.core.agent.impl.aprog.simplerule.Condition)"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"AndOrSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"andSearch(Set<Object>, NondeterministicProblem, Path)","url":"andSearch(java.util.Set,aima.core.search.nondeterministic.NondeterministicProblem,aima.core.search.nondeterministic.Path)"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"Angle(double)","url":"%3Cinit%3E(double)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"angleTo(Vector2D)","url":"angleTo(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainListener","l":"answerLiteralNameAdded(FOLDomainAnswerLiteralAddedEvent)","url":"answerLiteralNameAdded(aima.core.logic.fol.domain.FOLDomainAnswerLiteralAddedEvent)"},{"p":"aima.core.search.nondeterministic","c":"Path","l":"append(Object...)","url":"append(java.lang.Object...)"},{"p":"aima.core.logic.fol.inference","c":"Paramodulation","l":"apply(Clause, Clause, boolean)","url":"apply(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,boolean)"},{"p":"aima.core.logic.fol.inference","c":"Paramodulation","l":"apply(Clause, Clause)","url":"apply(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.search.local","c":"FitnessFunction","l":"apply(Individual<A>)","url":"apply(aima.core.search.local.Individual)"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil.NQueensFitnessFunction","l":"apply(Individual<Integer>)","url":"apply(aima.core.search.local.Individual)"},{"p":"aima.core.logic.fol.inference","c":"Demodulation","l":"apply(TermEquality, AtomicSentence)","url":"apply(aima.core.logic.fol.parsing.ast.TermEquality,aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.fol.inference","c":"Demodulation","l":"apply(TermEquality, Clause)","url":"apply(aima.core.logic.fol.parsing.ast.TermEquality,aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"applyMove(Set<P>, M)","url":"applyMove(java.util.Set,M)"},{"p":"aima.core.robotics.datatypes","c":"IMclPose","l":"applyMovement(M)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"ARAD"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"ArbitraryTokenDomain(boolean, Object...)","url":"%3Cinit%3E(boolean,java.lang.Object...)"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"ArbitraryTokenDomain(Object...)","url":"%3Cinit%3E(java.lang.Object...)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"AREA_ID"},{"p":"aima.core.util","c":"ArrayIterator","l":"ArrayIterator(T[])","url":"%3Cinit%3E(T[])"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayLeftDivide(Matrix)","url":"arrayLeftDivide(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayLeftDivideEquals(Matrix)","url":"arrayLeftDivideEquals(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayRightDivide(Matrix)","url":"arrayRightDivide(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayRightDivideEquals(Matrix)","url":"arrayRightDivideEquals(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayTimes(Matrix)","url":"arrayTimes(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"arrayTimesEquals(Matrix)","url":"arrayTimesEquals(aima.core.util.math.Matrix)"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"asCNF()"},{"p":"aima.core.logic.fol.inference","c":"FOLBCAsk","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"FOLFCAsk","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"InferenceProcedure","l":"ask(FOLKnowledgeBase, Sentence)","url":"ask(aima.core.logic.fol.kb.FOLKnowledgeBase,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"ask(KnowledgeBase, Sentence)","url":"ask(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.probability.bayes.approx","c":"BayesSampleInference","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.probability.bayes.approx","c":"GibbsAsk","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.probability.bayes.approx","c":"LikelihoodWeighting","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.probability.bayes.approx","c":"RejectionSampling","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.probability.bayes","c":"BayesInference","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.probability.bayes.exact","c":"EliminationAsk","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk","l":"ask(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"ask(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"ask(Sentence)","url":"ask(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"ask(Sentence)","url":"ask(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"ask(String)","url":"ask(java.lang.String)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askCurrentPosition(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askGlitter(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askHaveArrow(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askNotUnsafeRooms(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askOK(int, int, int)","url":"askOK(int,int,int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askPossibleWumpusRooms(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askSafeRooms(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"askUnvisitedRooms(int)"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"askWithTTEntails(String)","url":"askWithTTEntails(java.lang.String)"},{"p":"aima.core.search.csp","c":"Domain","l":"asList()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"asSentence()"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"assertLegalProbability(double)"},{"p":"aima.core.search.csp","c":"Assignment","l":"Assignment()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.proposition","c":"AssignmentProposition","l":"AssignmentProposition(RandomVariable, Object)","url":"%3Cinit%3E(aima.core.probability.RandomVariable,java.lang.Object)"},{"p":"aima.core.search.informed","c":"AStarEvaluationFunction","l":"AStarEvaluationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.search.informed","c":"AStarEvaluationFunction","l":"AStarEvaluationFunction(HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.search.informed","c":"AStarSearch","l":"AStarSearch(QueueSearch, HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch,aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"AtomicSentence","l":"AtomicSentence()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"AttackingPairsHeuristic","l":"AttackingPairsHeuristic()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"ATTRIBUTE_AGENT_LOCATION"},{"p":"aima.core.environment.map","c":"MoveToAction","l":"ATTRIBUTE_MOVE_TO_LOCATION"},{"p":"aima.core.agent.impl","c":"DynamicAction","l":"ATTRIBUTE_NAME"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"ATTRIBUTE_QUEEN_LOC"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"ATTRIBUTE_STATE"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnLeft","l":"ATTRIBUTE_TO_ORIENTATION"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnRight","l":"ATTRIBUTE_TO_ORIENTATION"},{"p":"aima.core.environment.wumpusworld.action","c":"Forward","l":"ATTRIBUTE_TO_POSITION"},{"p":"aima.core.nlp.ranking","c":"Page","l":"authority"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"BackPropLearning(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"aima.core.search.csp","c":"BacktrackingStrategy","l":"BacktrackingStrategy()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"backward(CategoricalDistribution, List<AssignmentProposition>)","url":"backward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.temporal","c":"BackwardStepInference","l":"backward(CategoricalDistribution, List<AssignmentProposition>)","url":"backward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.temporal.generic","c":"ForwardBackward","l":"backward(CategoricalDistribution, List<AssignmentProposition>)","url":"backward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"backward(Matrix, Matrix)","url":"backward(aima.core.util.math.Matrix,aima.core.util.math.Matrix)"},{"p":"aima.core.logic.propositional.visitors","c":"BasicGatherer","l":"BasicGatherer()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"BayesInferenceApproxAdapter(BayesSampleInference, int)","url":"%3Cinit%3E(aima.core.probability.bayes.approx.BayesSampleInference,int)"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"BayesInferenceApproxAdapter(BayesSampleInference)","url":"%3Cinit%3E(aima.core.probability.bayes.approx.BayesSampleInference)"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"BayesNet(Node...)","url":"%3Cinit%3E(aima.core.probability.bayes.Node...)"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"BayesNetExampleFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.search.informed","c":"BestFirstSearch","l":"BestFirstSearch(QueueSearch, EvaluationFunction)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch,aima.core.search.framework.evalfunc.EvaluationFunction)"},{"p":"aima.core.logic.fol","c":"Connectors","l":"BICOND"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"BICONDITIONAL"},{"p":"aima.core.logic.propositional.visitors","c":"BiconditionalElimination","l":"BiconditionalElimination()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.eightpuzzle","c":"BidirectionalEightPuzzleProblem","l":"BidirectionalEightPuzzleProblem(EightPuzzleBoard)","url":"%3Cinit%3E(aima.core.environment.eightpuzzle.EightPuzzleBoard)"},{"p":"aima.core.environment.fifteenpuzzle","c":"BidirectionalFifteenPuzzleProblem","l":"BidirectionalFifteenPuzzleProblem(FifteenPuzzleBoard)","url":"%3Cinit%3E(aima.core.environment.fifteenpuzzle.FifteenPuzzleBoard)"},{"p":"aima.core.environment.map","c":"BidirectionalMapProblem","l":"BidirectionalMapProblem(Map, String, String, GoalTest)","url":"%3Cinit%3E(aima.core.environment.map.Map,java.lang.String,java.lang.String,aima.core.search.framework.problem.GoalTest)"},{"p":"aima.core.environment.map","c":"BidirectionalMapProblem","l":"BidirectionalMapProblem(Map, String, String)","url":"%3Cinit%3E(aima.core.environment.map.Map,java.lang.String,java.lang.String)"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"BidirectionalSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"BidirectionalSearch(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"binaryResolvents(Clause)","url":"binaryResolvents(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"BLUE"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"BooleanDomain()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"bracketSentenceIfNecessary(Connective, Sentence)","url":"bracketSentenceIfNecessary(aima.core.logic.propositional.parsing.ast.Connective,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"BreadthFirstSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"BreadthFirstSearch(QueueSearch)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"BREEZE"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"BRISBANE"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"BROKEN_HILL"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"BROOME"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"BUCHAREST"},{"p":"aima.core.nlp.data.grammars","c":"ProbCNFGrammarExamples","l":"buildExampleGrammarOne()"},{"p":"aima.core.nlp.data.lexicons","c":"LexiconExamples","l":"buildNameLexicon()"},{"p":"aima.core.nlp.data.grammars","c":"ProbCNFGrammarExamples","l":"buildTrivialGrammar()"},{"p":"aima.core.nlp.data.lexicons","c":"LexiconExamples","l":"buildTrivialLexicon()"},{"p":"aima.core.nlp.data.grammars","c":"ProbContextFreeExamples","l":"buildWumpusGrammar()"},{"p":"aima.core.nlp.data.lexicons","c":"LexiconExamples","l":"buildWumpusLex()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"BURGLARY_RV"},{"p":"aima.core.environment.map","c":"MapStepCostFunction","l":"c(Object, Action, Object)","url":"c(java.lang.Object,aima.core.agent.Action,java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"DefaultStepCostFunction","l":"c(Object, Action, Object)","url":"c(java.lang.Object,aima.core.agent.Action,java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"StepCostFunction","l":"c(Object, Action, Object)","url":"c(java.lang.Object,aima.core.agent.Action,java.lang.Object)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"CAIRNS"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"calculateBiasUpdates(LayerSensitivity, double, double)","url":"calculateBiasUpdates(aima.core.learning.neural.LayerSensitivity,double,double)"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"calculateBiasUpdates(LayerSensitivity, double)","url":"calculateBiasUpdates(aima.core.learning.neural.LayerSensitivity,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"calculateFromPolar(double, double)","url":"calculateFromPolar(double,double)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"calculateGainFor(String)","url":"calculateGainFor(java.lang.String)"},{"p":"aima.core.util","c":"Util","l":"calculateMean(List<Double>)","url":"calculateMean(java.util.List)"},{"p":"aima.core.util","c":"Util","l":"calculateStDev(List<Double>, double)","url":"calculateStDev(java.util.List,double)"},{"p":"aima.core.probability.bayes.exact","c":"EliminationAsk","l":"calculateVariables(RandomVariable[], AssignmentProposition[], BayesianNetwork, Set<RandomVariable>, Collection<RandomVariable>)","url":"calculateVariables(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,java.util.Set,java.util.Collection)"},{"p":"aima.core.robotics.datatypes","c":"IMclRangeReading","l":"calculateWeight(R)"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"calculateWeightUpdates(LayerSensitivity, Vector, double, double)","url":"calculateWeightUpdates(aima.core.learning.neural.LayerSensitivity,aima.core.util.math.Vector,double,double)"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"calculateWeightUpdates(LayerSensitivity, Vector, double)","url":"calculateWeightUpdates(aima.core.learning.neural.LayerSensitivity,aima.core.util.math.Vector,double)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"callDPLL(Set<Clause>, List<PropositionSymbol>, Model, PropositionSymbol, boolean)","url":"callDPLL(java.util.Set,java.util.List,aima.core.logic.propositional.kb.data.Model,aima.core.logic.propositional.parsing.ast.PropositionSymbol,boolean)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"CAMARVON"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"CANBERRA"},{"p":"aima.core.util","c":"CancelableThread","l":"cancel()"},{"p":"aima.core.util","c":"CancelableThread","l":"CancelableThread()","url":"%3Cinit%3E()"},{"p":"aima.core.util","c":"CancelableThread","l":"CancelableThread(Runnable)","url":"%3Cinit%3E(java.lang.Runnable)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"canMoveGap(Action)","url":"canMoveGap(aima.core.agent.Action)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"canMoveGap(Action)","url":"canMoveGap(aima.core.agent.Action)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"CartesianPlot2D(IGroupParser)","url":"%3Cinit%3E(aima.core.util.math.geom.IGroupParser)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"CATCH_RV"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"CAVITY_RV"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"Cell(int, int, C)","url":"%3Cinit%3E(int,int,C)"},{"p":"aima.core.environment.cellworld","c":"CellWorld","l":"CellWorld(int, int, C)","url":"%3Cinit%3E(int,int,C)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironment","l":"CellWorldEnvironment(Cell<Double>, Set<Cell<Double>>, TransitionProbabilityFunction<Cell<Double>, CellWorldAction>, Randomizer)","url":"%3Cinit%3E(aima.core.environment.cellworld.Cell,java.util.Set,aima.core.probability.mdp.TransitionProbabilityFunction,aima.core.util.Randomizer)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironmentState","l":"CellWorldEnvironmentState()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.cellworld","c":"CellWorldFactory","l":"CellWorldFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldPercept","l":"CellWorldPercept(Cell<Double>)","url":"%3Cinit%3E(aima.core.environment.cellworld.Cell)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"centerPane"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"Chain()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"Chain(List<Literal>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"Chain(Set<Literal>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"CHARLEVILLE"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"checkDistanceOfPoses(Set<P>, double)","url":"checkDistanceOfPoses(java.util.Set,double)"},{"p":"aima.core.util","c":"Util","l":"checkForNanOrInfinity(double)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"checkValidRandomVariableName(String)","url":"checkValidRandomVariableName(java.lang.String)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"Circle2D(double, double, double)","url":"%3Cinit%3E(double,double,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"Circle2D(Point2D, double)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,double)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"Clause()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"Clause()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"Clause(Collection<Literal>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"Clause(List<Literal>, List<Literal>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"Clause(List<Literal>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"Clause(Literal...)","url":"%3Cinit%3E(aima.core.logic.propositional.kb.data.Literal...)"},{"p":"aima.core.logic.propositional.visitors","c":"ClauseCollector","l":"ClauseCollector()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment.LocationState","l":"Clean"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"clear()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"clear()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"clear()"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"clear()"},{"p":"aima.core.util","c":"DisjointSets","l":"clear()"},{"p":"aima.core.util","c":"FrequencyCounter","l":"clear()"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"clear()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"clear()"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"clear()"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"clear()"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"clear()"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"clear()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"clearInstrumentation()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"clearInstrumentation()"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"clearLinks()"},{"p":"aima.core.environment.wumpusworld.action","c":"Climb","l":"CLIMB_ACTION_NAME"},{"p":"aima.core.environment.wumpusworld.action","c":"Climb","l":"Climb()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"clone()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"clone()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"clone()"},{"p":"aima.core.robotics.datatypes","c":"IMclPose","l":"clone()"},{"p":"aima.core.util.math","c":"Matrix","l":"clone()"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"clone()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"CLOUDY_RV"},{"p":"aima.core.logic.fol.kb.data","c":"CNF","l":"CNF(List<Clause>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.logic.fol","c":"CNFConverter","l":"CNFConverter(FOLParser)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.FOLParser)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"CNFGRAMMAR"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"collectAllVariables(Chain)","url":"collectAllVariables(aima.core.logic.fol.kb.data.Chain)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"collectAllVariables(Clause)","url":"collectAllVariables(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"collectAllVariables(Sentence)","url":"collectAllVariables(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"collectAllVariables(Sentence)","url":"collectAllVariables(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"collectAllVariables(Term)","url":"collectAllVariables(aima.core.logic.fol.parsing.ast.Term)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"COMMA"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"compactify()"},{"p":"aima.core.util","c":"Util","l":"compareDoubles(double, double)","url":"compareDoubles(double,double)"},{"p":"aima.core.util","c":"Util","l":"compareFloats(float, float)","url":"compareFloats(float,float)"},{"p":"aima.core.environment.connectfour","c":"ActionValuePair","l":"compareTo(ActionValuePair<ACTION>)","url":"compareTo(aima.core.environment.connectfour.ActionValuePair)"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"compareTo(Angle)","url":"compareTo(aima.core.robotics.impl.datatypes.Angle)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"ComplexSentence(Connective, Sentence...)","url":"%3Cinit%3E(aima.core.logic.propositional.parsing.ast.Connective,aima.core.logic.propositional.parsing.ast.Sentence...)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"ComplexSentence(Sentence, Connective, Sentence)","url":"%3Cinit%3E(aima.core.logic.propositional.parsing.ast.Sentence,aima.core.logic.propositional.parsing.ast.Connective,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"conclusion(Clause)","url":"conclusion(aima.core.logic.propositional.kb.data.Clause)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Condition","l":"Condition()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"ConjunctionOfClauses(Collection<Clause>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"aima.core.probability.proposition","c":"ConjunctiveProposition","l":"ConjunctiveProposition(Proposition, Proposition)","url":"%3Cinit%3E(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition)"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"ConnectedSentence(String, Sentence, Sentence)","url":"%3Cinit%3E(java.lang.String,aima.core.logic.fol.parsing.ast.Sentence,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourAIPlayer","l":"ConnectFourAIPlayer(Game<ConnectFourState, Integer, String>, int)","url":"%3Cinit%3E(aima.core.search.adversarial.Game,int)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"ConnectFourGame()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"ConnectFourState(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"CONNECTIVE"},{"p":"aima.core.logic.fol","c":"Connectors","l":"Connectors()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"CONSTANT"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"Constant(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"ConstantDecisonTree(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"construct2FairDiceNetwor()"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"constructApplicationFrame()"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"constructBurglaryAlarmNetwork()"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"constructCloudySprinklerRainWetGrassNetwork()"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"constructConjunction(Proposition[])","url":"constructConjunction(aima.core.probability.proposition.Proposition[])"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"constructMeningitisStiffNeckNetwork()"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"constructToothacheCavityCatchNetwork()"},{"p":"aima.core.probability.example","c":"BayesNetExampleFactory","l":"constructToothacheCavityCatchWeatherNetwork()"},{"p":"aima.core.util.math","c":"Matrix","l":"constructWithCopy(double[][])"},{"p":"aima.core.logic.common","c":"Lexer","l":"consume()"},{"p":"aima.core.logic.common","c":"Parser","l":"consume()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"consume()"},{"p":"aima.core.search.csp","c":"Domain","l":"contains(Object)","url":"contains(java.lang.Object)"},{"p":"aima.core.probability","c":"Factor","l":"contains(RandomVariable)","url":"contains(aima.core.probability.RandomVariable)"},{"p":"aima.core.probability","c":"ProbabilityDistribution","l":"contains(RandomVariable)","url":"contains(aima.core.probability.RandomVariable)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"contains(RandomVariable)","url":"contains(aima.core.probability.RandomVariable)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"contains(RandomVariable)","url":"contains(aima.core.probability.RandomVariable)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"contains(RandomVariable)","url":"contains(aima.core.probability.RandomVariable)"},{"p":"aima.core.util.datastructure","c":"TwoKeyHashMap","l":"containsKey(K1, K2)","url":"containsKey(K1,K2)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk.ObservedEvidence","l":"containsValue(RandomVariable)","url":"containsValue(aima.core.probability.RandomVariable)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"CONTEXT_FREE"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"CONTEXT_SENSITIVE"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"controller"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"convert(CategoricalDistribution)","url":"convert(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"convert(CategoricalDistribution)","url":"convert(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"convert(List<Matrix>)","url":"convert(java.util.List)"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"convert(List<Matrix>)","url":"convert(java.util.List)"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"convert(Matrix)","url":"convert(aima.core.util.math.Matrix)"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"convert(Matrix)","url":"convert(aima.core.util.math.Matrix)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToCNF","l":"convert(Sentence)","url":"convert(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToConjunctionOfClauses","l":"convert(Sentence)","url":"convert(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToDNF","l":"convert(Sentence)","url":"convert(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToNNF","l":"convert(Sentence)","url":"convert(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"convertToClauses(Sentence)","url":"convertToClauses(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToCNF","l":"ConvertToCNF()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"CNFConverter","l":"convertToCNF(Sentence)","url":"convertToCNF(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"convertToCNF(Sentence)","url":"convertToCNF(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToConjunctionOfClauses","l":"ConvertToConjunctionOfClauses()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToDNF","l":"ConvertToDNF()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.visitors","c":"ConvertToNNF","l":"ConvertToNNF()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"COOBER_PEDY"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"copy()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"AtomicSentence","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"FOLNode","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Sentence","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Term","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"copy()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"copy()"},{"p":"aima.core.search.csp","c":"Assignment","l":"copy()"},{"p":"aima.core.util.math","c":"Matrix","l":"copy()"},{"p":"aima.core.search.csp","c":"CSP","l":"copyDomains()"},{"p":"aima.core.learning.neural","c":"NNExample","l":"copyExample()"},{"p":"aima.core.util.math","c":"Vector","l":"copyVector()"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"counter"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"CPT(RandomVariable, double[], RandomVariable...)","url":"%3Cinit%3E(aima.core.probability.RandomVariable,double[],aima.core.probability.RandomVariable...)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"CRAIOVA"},{"p":"aima.core.util","c":"Util","l":"create(Collection<K>, V)","url":"create(java.util.Collection,V)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createABCDEqualityAndSubstitutionKnowledgeBase(InferenceProcedure, boolean)","url":"createABCDEqualityAndSubstitutionKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure,boolean)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createABCEqualityKnowledgeBase(InferenceProcedure, boolean)","url":"createABCEqualityKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure,boolean)"},{"p":"aima.core.probability.example","c":"MDPFactory","l":"createActionsFunctionForFigure17_1(CellWorld<Double>)","url":"createActionsFunctionForFigure17_1(aima.core.environment.cellworld.CellWorld)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"createAnswerLiteral(Sentence)","url":"createAnswerLiteral(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.learning.framework","c":"AttributeSpecification","l":"createAttribute(String)","url":"createAttribute(java.lang.String)"},{"p":"aima.core.learning.framework","c":"NumericAttributeSpecification","l":"createAttribute(String)","url":"createAttribute(java.lang.String)"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"createAttribute(String)","url":"createAttribute(java.lang.String)"},{"p":"aima.core.environment.cellworld","c":"CellWorldFactory","l":"createCellWorldForFig17_1()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"createController()"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"createController()"},{"p":"aima.core.util.math","c":"Matrix","l":"createDiagonalMatrix(List<Double>)","url":"createDiagonalMatrix(java.util.List)"},{"p":"aima.core.learning.inductive","c":"DLTestFactory","l":"createDLTestsWithAttributeCount(DataSet, int)","url":"createDLTestsWithAttributeCount(aima.core.learning.framework.DataSet,int)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"createEnvironmentView()"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"createEnvironmentView()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"createExamplesFromDataSet(DataSet, Numerizer)","url":"createExamplesFromDataSet(aima.core.learning.framework.DataSet,aima.core.learning.neural.Numerizer)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"createExamplesFromFile(String)","url":"createExamplesFromFile(java.lang.String)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"createExogenousChange()"},{"p":"aima.core.search.framework","c":"QueueFactory","l":"createFifoQueue()"},{"p":"aima.core.environment.connectfour","c":"ActionValuePair","l":"createFor(ACTION, double)","url":"createFor(ACTION,double)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"createFor(Game<STATE, ACTION, PLAYER>, double, double, int)","url":"createFor(aima.core.search.adversarial.Game,double,double,int)"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"createFor(Game<STATE, ACTION, PLAYER>)","url":"createFor(aima.core.search.adversarial.Game)"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"createFor(Game<STATE, ACTION, PLAYER>)","url":"createFor(aima.core.search.adversarial.Game)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"createFrame()"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"createFrame()"},{"p":"aima.core.search.framework.evalfunc","c":"HeuristicFunctionFactory","l":"createHeuristicFunction(Object)","url":"createHeuristicFunction(java.lang.Object)"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"createIrisDataSetSpec()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createKingsKnowledgeBase(InferenceProcedure)","url":"createKingsKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.search.framework","c":"QueueFactory","l":"createLifoQueue()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createLovesAnimalKnowledgeBase(InferenceProcedure)","url":"createLovesAnimalKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.probability.example","c":"MDPFactory","l":"createMDPForFigure17_3(CellWorld<Double>)","url":"createMDPForFigure17_3(aima.core.environment.cellworld.CellWorld)"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"createNode(Object, Node, Action, double)","url":"createNode(java.lang.Object,aima.core.search.framework.Node,aima.core.agent.Action,double)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"createNormalizedDataFromDataSet(DataSet, Numerizer)","url":"createNormalizedDataFromDataSet(aima.core.learning.framework.DataSet,aima.core.learning.neural.Numerizer)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"createNormalizedDataFromFile(String)","url":"createNormalizedDataFromFile(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"createPopupMenu()"},{"p":"aima.core.search.framework","c":"QueueFactory","l":"createPriorityQueue(Comparator<? super E>)","url":"createPriorityQueue(java.util.Comparator)"},{"p":"aima.core.search.local","c":"GeneticAlgorithmForNumbers","l":"createRandomIndividual()"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"createRestaurantDataSetSpec()"},{"p":"aima.core.probability.example","c":"MDPFactory","l":"createRewardFunctionForFigure17_1()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createRingOfThievesKnowledgeBase(InferenceProcedure)","url":"createRingOfThievesKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"createRootNode(Object)","url":"createRootNode(java.lang.Object)"},{"p":"aima.core.util","c":"Util","l":"createSet(V...)"},{"p":"aima.core.probability.example","c":"MDPFactory","l":"createTransitionProbabilityFunctionForFigure17_1(CellWorld<Double>)","url":"createTransitionProbabilityFunctionForFigure17_1(aima.core.environment.cellworld.CellWorld)"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"createUnitMessage()"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"createUnitMessage()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"createWeaponsKnowledgeBase(InferenceProcedure)","url":"createWeaponsKnowledgeBase(aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"crusadesDomain()"},{"p":"aima.core.search.csp","c":"CSP","l":"CSP()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"CSP","l":"CSP(List<Variable>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"currDepthLimit"},{"p":"aima.core.learning.learners","c":"CurrentBestLearner","l":"CurrentBestLearner(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.learning.knowledge","c":"CurrentBestLearning","l":"CurrentBestLearning(FOLDataSetDomain, FOLKnowledgeBase)","url":"%3Cinit%3E(aima.core.learning.knowledge.FOLDataSetDomain,aima.core.logic.fol.kb.FOLKnowledgeBase)"},{"p":"aima.core.learning.knowledge","c":"CurrentBestLearning","l":"currentBestLearning(List<FOLExample>)","url":"currentBestLearning(java.util.List)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"currGoalIdx"},{"p":"aima.core.util","c":"CancelableThread","l":"currIsCanceled()"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"CUTOFF_NODE"},{"p":"aima.core.nlp.parsing","c":"CYK","l":"CYK()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"DARWIN"},{"p":"aima.core.learning.data","c":"DataResource","l":"DataResource()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"DataSet()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"DataSet(DataSetSpecification)","url":"%3Cinit%3E(aima.core.learning.framework.DataSetSpecification)"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"DataSetFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"DataSetSpecification()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.inductive","c":"DecisionList","l":"DecisionList(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"DecisionListLearner(String, String, DLTestFactory)","url":"%3Cinit%3E(java.lang.String,java.lang.String,aima.core.learning.inductive.DLTestFactory)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"DecisionTree()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"DecisionTree(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"DecisionTreeLearner()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"DecisionTreeLearner(DecisionTree, String)","url":"%3Cinit%3E(aima.core.learning.inductive.DecisionTree,java.lang.String)"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"decrement()"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"decrement(Map<Clause, Integer>, Clause)","url":"decrement(java.util.Map,aima.core.logic.propositional.kb.data.Clause)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Selection","l":"DEFAULT_ORDER"},{"p":"aima.core.probability","c":"ProbabilityModel","l":"DEFAULT_ROUNDING_THRESHOLD"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultClauseFilter","l":"DefaultClauseFilter()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultClauseSimplifier","l":"DefaultClauseSimplifier()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultClauseSimplifier","l":"DefaultClauseSimplifier(List<TermEquality>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.search.framework.problem","c":"DefaultGoalTest","l":"DefaultGoalTest(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultLightestClauseHeuristic","l":"DefaultLightestClauseHeuristic()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.problem","c":"DefaultStepCostFunction","l":"DefaultStepCostFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"defineNumericAttribute(String)","url":"defineNumericAttribute(java.lang.String)"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"defineStringAttribute(String, String[])","url":"defineStringAttribute(java.lang.String,java.lang.String[])"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"degreeAngle(double)"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"DemoController()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference","c":"Demodulation","l":"Demodulation()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"IrisDataSetNumerizer","l":"denumerize(List<Double>)","url":"denumerize(java.util.List)"},{"p":"aima.core.learning.neural","c":"Numerizer","l":"denumerize(List<Double>)","url":"denumerize(java.util.List)"},{"p":"aima.core.search.uninformed","c":"DepthFirstSearch","l":"DepthFirstSearch(QueueSearch)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch)"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"DepthLimitedSearch(int, NodeExpander)","url":"%3Cinit%3E(int,aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"DepthLimitedSearch(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.learning.neural","c":"ActivationFunction","l":"deriv(double)"},{"p":"aima.core.learning.neural","c":"HardLimitActivationFunction","l":"deriv(double)"},{"p":"aima.core.learning.neural","c":"LogSigActivationFunction","l":"deriv(double)"},{"p":"aima.core.learning.neural","c":"PureLinearActivationFunction","l":"deriv(double)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"derives(List<String>)","url":"derives(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"derives(String)","url":"derives(java.lang.String)"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"describeAttributes()"},{"p":"aima.core.agent.impl","c":"DynamicAction","l":"describeType()"},{"p":"aima.core.agent.impl","c":"DynamicEnvironmentState","l":"describeType()"},{"p":"aima.core.agent.impl","c":"DynamicPercept","l":"describeType()"},{"p":"aima.core.agent.impl","c":"DynamicState","l":"describeType()"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"describeType()"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"det()"},{"p":"aima.core.util.math","c":"Matrix","l":"det()"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"determinant()"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"determineAllInlinks(Map<String, Page>)","url":"determineAllInlinks(java.util.Map)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"determineValue(Clause)","url":"determineValue(aima.core.logic.propositional.kb.data.Clause)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"DICE_1_RV"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"DICE_2_RV"},{"p":"aima.core.util","c":"SetOps","l":"difference(Set<T>, Set<T>)","url":"difference(java.util.Set,java.util.Set)"},{"p":"aima.core.search.csp.examples","c":"DiffNotEqualConstraint","l":"DiffNotEqualConstraint(Variable, Variable, int)","url":"%3Cinit%3E(aima.core.search.csp.Variable,aima.core.search.csp.Variable,int)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"dirty"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment.LocationState","l":"Dirty"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"discardTautologies(Set<Clause>)","url":"discardTautologies(java.util.Set)"},{"p":"aima.core.util","c":"DisjointSets","l":"DisjointSets()","url":"%3Cinit%3E()"},{"p":"aima.core.util","c":"DisjointSets","l":"DisjointSets(Collection<E>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"aima.core.util","c":"DisjointSets","l":"DisjointSets(E...)","url":"%3Cinit%3E(E...)"},{"p":"aima.core.probability.proposition","c":"DisjunctiveProposition","l":"DisjunctiveProposition(Proposition, Proposition)","url":"%3Cinit%3E(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"distance(Point2D)","url":"distance(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.robotics.datatypes","c":"IMclPose","l":"distanceTo(P)"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeAndOverOr","l":"distribute(Sentence)","url":"distribute(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeOrOverAnd","l":"distribute(Sentence)","url":"distribute(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeAndOverOr","l":"DistributeAndOverOr()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeOrOverAnd","l":"DistributeOrOverAnd()","url":"%3Cinit%3E()"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"divideBy(CategoricalDistribution)","url":"divideBy(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"divideBy(CategoricalDistribution)","url":"divideBy(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"divideBy(ProbabilityTable)","url":"divideBy(aima.core.probability.util.ProbabilityTable)"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"DLTest()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.inductive","c":"DLTestFactory","l":"DLTestFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"DOBRETA"},{"p":"aima.core.search.csp","c":"Domain","l":"Domain(List<?>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.search.csp","c":"Domain","l":"Domain(Object[])","url":"%3Cinit%3E(java.lang.Object[])"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"DomainFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"DomainRestoreInfo()","url":"%3Cinit%3E()"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"doubleValue()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"Down"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"DOWN"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"DOWN"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"down()"},{"p":"aima.core.logic.propositional.inference","c":"DPLL","l":"dpll(Set<Clause>, List<PropositionSymbol>, Model)","url":"dpll(java.util.Set,java.util.List,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"dpll(Set<Clause>, List<PropositionSymbol>, Model)","url":"dpll(java.util.Set,java.util.List,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"dpll(Set<Clause>, List<PropositionSymbol>, Model)","url":"dpll(java.util.Set,java.util.List,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"DPLLSatisfiable()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"DPLL","l":"dpllSatisfiable(Sentence)","url":"dpllSatisfiable(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"dpllSatisfiable(Sentence)","url":"dpllSatisfiable(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"dpllSatisfiable(Sentence)","url":"dpllSatisfiable(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"dropDisk(int)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"DUBBO"},{"p":"aima.core.agent.impl","c":"DynamicAction","l":"DynamicAction(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"DynamicBayesNet(BayesianNetwork, Map<RandomVariable, RandomVariable>, Set<RandomVariable>, Node...)","url":"%3Cinit%3E(aima.core.probability.bayes.BayesianNetwork,java.util.Map,java.util.Set,aima.core.probability.bayes.Node...)"},{"p":"aima.core.probability.example","c":"DynamicBayesNetExampleFactory","l":"DynamicBayesNetExampleFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"DynamicEnvironmentState","l":"DynamicEnvironmentState()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"DynamicPercept","l":"DynamicPercept()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"DynamicPercept","l":"DynamicPercept(Object, Object, Object, Object)","url":"%3Cinit%3E(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"aima.core.agent.impl","c":"DynamicPercept","l":"DynamicPercept(Object, Object)","url":"%3Cinit%3E(java.lang.Object,java.lang.Object)"},{"p":"aima.core.agent.impl","c":"DynamicPercept","l":"DynamicPercept(Object[], Object[])","url":"%3Cinit%3E(java.lang.Object[],java.lang.Object[])"},{"p":"aima.core.agent.impl","c":"DynamicState","l":"DynamicState()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"DynAttributeNames","l":"DynAttributeNames()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"earlyGoalTest"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"EARTHQUAKE_RV"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"East"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"east()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"EFORIE"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"EightPuzzleBoard()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"EightPuzzleBoard(EightPuzzleBoard)","url":"%3Cinit%3E(aima.core.environment.eightpuzzle.EightPuzzleBoard)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"EightPuzzleBoard(int[])","url":"%3Cinit%3E(int[])"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleFunctionFactory","l":"EightPuzzleFunctionFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleGoalTest","l":"EightPuzzleGoalTest()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.visitors","c":"BiconditionalElimination","l":"eliminate(Sentence)","url":"eliminate(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.visitors","c":"ImplicationElimination","l":"eliminate(Sentence)","url":"eliminate(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.probability.bayes.exact","c":"EliminationAsk","l":"EliminationAsk()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.exact","c":"EliminationAsk","l":"eliminationAsk(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"eliminationAsk(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"Ellipse2D(Point2D, double, double)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,double,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"Ellipse2D(Point2D, Vector2D, Vector2D)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,aima.core.util.math.geom.shapes.Vector2D,aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard.Config","l":"EMPTY"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"EMPTY"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"EMPTY"},{"p":"aima.core.learning.framework","c":"DataSet","l":"emptyDataSet()"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"EmptyEnvironmentView()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"enableLCV(boolean)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk","l":"enumerateAll(List<RandomVariable>, EnumerationAsk.ObservedEvidence)","url":"enumerateAll(java.util.List,aima.core.probability.bayes.exact.EnumerationAsk.ObservedEvidence)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk","l":"EnumerationAsk()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk","l":"enumerationAsk(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"enumerationAsk(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"env"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"env"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleFrame","l":"ENV_SEL"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"envObjects"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"envState"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"EOI"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"EQUALCondition","l":"EQUALCondition(Object, Object)","url":"%3Cinit%3E(java.lang.Object,java.lang.Object)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"EQUALS"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Condition","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.learning.framework","c":"Example","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.common","c":"Token","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.probability.util","c":"RandVar","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.search.csp","c":"Domain","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.search.csp","c":"Variable","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.datastructure","c":"Pair","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"equals(Point2D)","url":"equals(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"equals(TransformMatrix2D)","url":"equals(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"equals(Vector2D)","url":"equals(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.probability.proposition","c":"EquivalentProposition","l":"EquivalentProposition(String, RandomVariable...)","url":"%3Cinit%3E(java.lang.String,aima.core.probability.RandomVariable...)"},{"p":"aima.core.learning.neural","c":"Layer","l":"errorVectorFrom(Vector)","url":"errorVectorFrom(aima.core.util.math.Vector)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"ESPERANCE"},{"p":"aima.core.environment.connectfour","c":"ConnectFourAIPlayer","l":"eval(ConnectFourState, String)","url":"eval(aima.core.environment.connectfour.ConnectFourState,java.lang.String)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"eval(STATE, PLAYER)","url":"eval(STATE,PLAYER)"},{"p":"aima.core.probability.mdp","c":"PolicyEvaluation","l":"evaluate(Map<S, A>, Map<S, Double>, MarkovDecisionProcess<S, A>)","url":"evaluate(java.util.Map,java.util.Map,aima.core.probability.mdp.MarkovDecisionProcess)"},{"p":"aima.core.probability.mdp.impl","c":"ModifiedPolicyEvaluation","l":"evaluate(Map<S, A>, Map<S, Double>, MarkovDecisionProcess<S, A>)","url":"evaluate(java.util.Map,java.util.Map,aima.core.probability.mdp.MarkovDecisionProcess)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ANDCondition","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Condition","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"EQUALCondition","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"NOTCondition","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ORCondition","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"evaluate(ObjectWithDynamicAttributes)","url":"evaluate(aima.core.agent.impl.ObjectWithDynamicAttributes)"},{"p":"aima.core.environment.eightpuzzle","c":"ManhattanHeuristicFunction","l":"evaluateManhattanDistanceOf(int, XYLocation)","url":"evaluateManhattanDistanceOf(int,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.fifteenpuzzle","c":"ManhattanHeuristicFunction","l":"evaluateManhattanDistanceOf(int, XYLocation)","url":"evaluateManhattanDistanceOf(int,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"everyClauseTrue(Set<Clause>, Model)","url":"everyClauseTrue(java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.learning.framework","c":"Example","l":"Example(Hashtable<String, Attribute>, Attribute)","url":"%3Cinit%3E(java.util.Hashtable,aima.core.learning.framework.Attribute)"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"exampleFromString(String, DataSetSpecification, String)","url":"exampleFromString(java.lang.String,aima.core.learning.framework.DataSetSpecification,java.lang.String)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"ExampleRV()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"examples"},{"p":"aima.core.agent","c":"Agent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.agent","c":"AgentProgram","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.agent.impl.aprog","c":"SimpleReflexAgentProgram","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.agent.impl.aprog","c":"TableDrivenAgentProgram","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.environment.wumpusworld","c":"HybridWumpusAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.learning.reinforcement.agent","c":"ReinforcementAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"execute(Percept)","url":"execute(aima.core.agent.Percept)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveADPAgent","l":"execute(PerceptStateReward<S>)","url":"execute(aima.core.learning.reinforcement.PerceptStateReward)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveTDAgent","l":"execute(PerceptStateReward<S>)","url":"execute(aima.core.learning.reinforcement.PerceptStateReward)"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"execute(PerceptStateReward<S>)","url":"execute(aima.core.learning.reinforcement.PerceptStateReward)"},{"p":"aima.core.learning.reinforcement.agent","c":"ReinforcementAgent","l":"execute(PerceptStateReward<S>)","url":"execute(aima.core.learning.reinforcement.PerceptStateReward)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleEnvironment","l":"executeAction(Agent, Action)","url":"executeAction(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironment","l":"executeTrial()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironment","l":"executeTrials(int)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"executeUserAction(Action)","url":"executeUserAction(aima.core.agent.Action)"},{"p":"aima.core.logic.fol","c":"Quantifiers","l":"EXISTS"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"expand(Node, Problem)","url":"expand(aima.core.search.framework.Node,aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"expandedNodes"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"expandPages(List<Page>)","url":"expandPages(java.util.List)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"expectedSizeOfCategoricalDistribution(RandomVariable...)","url":"expectedSizeOfCategoricalDistribution(aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"expectedSizeOfProbabilityTable(RandomVariable...)","url":"expectedSizeOfProbabilityTable(aima.core.probability.RandomVariable...)"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"extend(Collection<Clause>)","url":"extend(java.util.Collection)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"ExtendableMap()","url":"%3Cinit%3E()"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"extendedWeightedSampleWithReplacement(Set<P>, double[])","url":"extendedWeightedSampleWithReplacement(java.util.Set,double[])"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"f(Double, int)","url":"f(java.lang.Double,int)"},{"p":"aima.core.search.framework.evalfunc","c":"EvaluationFunction","l":"f(Node)","url":"f(aima.core.search.framework.Node)"},{"p":"aima.core.search.informed","c":"AStarEvaluationFunction","l":"f(Node)","url":"f(aima.core.search.framework.Node)"},{"p":"aima.core.search.informed","c":"GreedyBestFirstEvaluationFunction","l":"f(Node)","url":"f(aima.core.search.framework.Node)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"FACING_EAST"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"FACING_EAST"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"FACING_NORTH"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"FACING_NORTH"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"FACING_SOUTH"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"FACING_SOUTH"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"FACING_WEST"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"FACING_WEST"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"FAGARAS"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"FAILURE"},{"p":"aima.core.search.local","c":"HillClimbingSearch.SearchOutcome","l":"FAILURE"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch.SearchOutcome","l":"FAILURE"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"failure()"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"FALSE"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"FALSE"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"FALSE_SYMBOL"},{"p":"aima.core.learning.neural","c":"Layer","l":"feedForward(Vector)","url":"feedForward(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"FeedForwardNeuralNetwork(Matrix, Vector, Matrix, Vector)","url":"%3Cinit%3E(aima.core.util.math.Matrix,aima.core.util.math.Vector,aima.core.util.math.Matrix,aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"FeedForwardNeuralNetwork(NNConfig)","url":"%3Cinit%3E(aima.core.learning.neural.NNConfig)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"fetch(List<Literal>)","url":"fetch(java.util.List)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"fetch(Literal)","url":"fetch(aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"FifteenPuzzleApp()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"FifteenPuzzleBoard()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"FifteenPuzzleBoard(FifteenPuzzleBoard)","url":"%3Cinit%3E(aima.core.environment.fifteenpuzzle.FifteenPuzzleBoard)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"FifteenPuzzleBoard(int[])","url":"%3Cinit%3E(int[])"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"FifteenPuzzleController()","url":"%3Cinit%3E()"},{"p":"aima.demo.search","c":"FifteenPuzzleDemo","l":"FifteenPuzzleDemo()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleEnvironment","l":"FifteenPuzzleEnvironment(FifteenPuzzleBoard)","url":"%3Cinit%3E(aima.core.environment.fifteenpuzzle.FifteenPuzzleBoard)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleFrame","l":"FifteenPuzzleFrame()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleFunctionFactory","l":"FifteenPuzzleFunctionFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleGoalTest","l":"FifteenPuzzleGoalTest()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"FifteenPuzzleView()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"fillLookAheadBuffer()"},{"p":"aima.core.logic.fol.inference.otter","c":"ClauseFilter","l":"filter(Set<Clause>)","url":"filter(java.util.Set)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultClauseFilter","l":"filter(Set<Clause>)","url":"filter(java.util.Set)"},{"p":"aima.core.util","c":"DisjointSets","l":"find(E)"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"SearchForActions","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"DepthFirstSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"findActions(Problem)","url":"findActions(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"findNode(Problem, Queue<Node>)","url":"findNode(aima.core.search.framework.problem.Problem,java.util.Queue)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"findNode(Problem, Queue<Node>)","url":"findNode(aima.core.search.framework.problem.Problem,java.util.Queue)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"findNode(Problem, Queue<Node>)","url":"findNode(aima.core.search.framework.problem.Problem,java.util.Queue)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"findNode(Problem, Queue<Node>)","url":"findNode(aima.core.search.framework.problem.Problem,java.util.Queue)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"findNode(Problem, Queue<Node>)","url":"findNode(aima.core.search.framework.problem.Problem,java.util.Queue)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"findNode(Problem)","url":"findNode(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"findNode(Problem)","url":"findNode(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"findPureSymbol(List<PropositionSymbol>, Set<Clause>, Model)","url":"findPureSymbol(java.util.List,java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"findPureSymbol(List<PropositionSymbol>, Set<Clause>, Model)","url":"findPureSymbol(java.util.List,java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"SearchForStates","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"DepthFirstSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"findState(Problem)","url":"findState(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.logic.fol","c":"SubsumptionElimination","l":"findSubsumedClauses(Set<Clause>)","url":"findSubsumedClauses(java.util.Set)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"findUnitClause(Set<Clause>, Model)","url":"findUnitClause(java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"findUnitClause(Set<Clause>, Model)","url":"findUnitClause(java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"finiteAlphabet"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"FiniteBayesModel(BayesianNetwork, BayesInference)","url":"%3Cinit%3E(aima.core.probability.bayes.BayesianNetwork,aima.core.probability.bayes.BayesInference)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"FiniteBayesModel(BayesianNetwork)","url":"%3Cinit%3E(aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"FiniteIntegerDomain(Integer...)","url":"%3Cinit%3E(java.lang.Integer...)"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"fireStateChanged(Assignment, CSP)","url":"fireStateChanged(aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"fireStateChanged(CSP)","url":"fireStateChanged(aima.core.search.csp.CSP)"},{"p":"aima.core.util","c":"Util","l":"first(List<T>)","url":"first(java.util.List)"},{"p":"aima.core.probability.hmm.exact","c":"FixedLagSmoothing","l":"FixedLagSmoothing(HiddenMarkovModel, int)","url":"%3Cinit%3E(aima.core.probability.hmm.HiddenMarkovModel,int)"},{"p":"aima.core.probability.hmm.exact","c":"FixedLagSmoothing","l":"fixedLagSmoothing(List<AssignmentProposition>)","url":"fixedLagSmoothing(java.util.List)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"flip(PropositionSymbol)","url":"flip(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"flipSymbolInClauseMaximizesNumberSatisfiedClauses(Clause, Set<Clause>, Model)","url":"flipSymbolInClauseMaximizesNumberSatisfiedClauses(aima.core.logic.propositional.kb.data.Clause,java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"floatValue()"},{"p":"aima.core.logic.fol","c":"StandardizeApartIndexicalFactory","l":"flush()"},{"p":"aima.core.logic.fol.inference","c":"FOLBCAsk","l":"FOLBCAsk()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"FOLDataSetDomain(DataSetSpecification, String)","url":"%3Cinit%3E(aima.core.learning.framework.DataSetSpecification,java.lang.String)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"FOLDomain()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"FOLDomain(FOLDomain)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"FOLDomain(Set<String>, Set<String>, Set<String>)","url":"%3Cinit%3E(java.util.Set,java.util.Set,java.util.Set)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainAnswerLiteralAddedEvent","l":"FOLDomainAnswerLiteralAddedEvent(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainEvent","l":"FOLDomainEvent(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemConstantAddedEvent","l":"FOLDomainSkolemConstantAddedEvent(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemFunctionAddedEvent","l":"FOLDomainSkolemFunctionAddedEvent(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"aima.core.learning.knowledge","c":"FOLExample","l":"FOLExample(FOLDataSetDomain, Example, int)","url":"%3Cinit%3E(aima.core.learning.knowledge.FOLDataSetDomain,aima.core.learning.framework.Example,int)"},{"p":"aima.core.logic.fol.inference","c":"FOLFCAsk","l":"FOLFCAsk()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"FOLKnowledgeBase(FOLDomain, InferenceProcedure, Unifier)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain,aima.core.logic.fol.inference.InferenceProcedure,aima.core.logic.fol.Unifier)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"FOLKnowledgeBase(FOLDomain, InferenceProcedure)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain,aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"FOLKnowledgeBase(FOLDomain)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBaseFactory","l":"FOLKnowledgeBaseFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.parsing","c":"FOLLexer","l":"FOLLexer(FOLDomain)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"FOLModelElimination()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"FOLModelElimination(FOLModelEliminationTracer, long)","url":"%3Cinit%3E(aima.core.logic.fol.inference.trace.FOLModelEliminationTracer,long)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"FOLModelElimination(FOLModelEliminationTracer)","url":"%3Cinit%3E(aima.core.logic.fol.inference.trace.FOLModelEliminationTracer)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"FOLModelElimination(long)","url":"%3Cinit%3E(long)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"FOLOTTERLikeTheoremProver()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"FOLOTTERLikeTheoremProver(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"FOLOTTERLikeTheoremProver(long, boolean)","url":"%3Cinit%3E(long,boolean)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"FOLOTTERLikeTheoremProver(long)","url":"%3Cinit%3E(long)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"FOLParser(FOLDomain)","url":"%3Cinit%3E(aima.core.logic.fol.domain.FOLDomain)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"FOLParser(FOLLexer)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.FOLLexer)"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"FOLTFMResolution()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"FOLTFMResolution(FOLTFMResolutionTracer)","url":"%3Cinit%3E(aima.core.logic.fol.inference.trace.FOLTFMResolutionTracer)"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"FOLTFMResolution(long)","url":"%3Cinit%3E(long)"},{"p":"aima.core.logic.fol","c":"Quantifiers","l":"FORALL"},{"p":"aima.core.environment.map","c":"MapAgent","l":"formulateGoal()"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"formulateGoal()"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"formulateGoal()"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"formulateGoal()"},{"p":"aima.core.environment.map","c":"MapAgent","l":"formulateProblem(Object)","url":"formulateProblem(java.lang.Object)"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"formulateProblem(Object)","url":"formulateProblem(java.lang.Object)"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"formulateProblem(Object)","url":"formulateProblem(java.lang.Object)"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"formulateProblem(Object)","url":"formulateProblem(java.lang.Object)"},{"p":"aima.core.environment.wumpusworld.action","c":"Forward","l":"FORWARD_ACTION_NAME"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Inference","l":"FORWARD_CHECKING"},{"p":"aima.core.environment.wumpusworld.action","c":"Forward","l":"Forward(AgentPosition)","url":"%3Cinit%3E(aima.core.environment.wumpusworld.AgentPosition)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"forward(CategoricalDistribution, List<AssignmentProposition>)","url":"forward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.temporal","c":"ForwardStepInference","l":"forward(CategoricalDistribution, List<AssignmentProposition>)","url":"forward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.temporal.generic","c":"ForwardBackward","l":"forward(CategoricalDistribution, List<AssignmentProposition>)","url":"forward(aima.core.probability.CategoricalDistribution,java.util.List)"},{"p":"aima.core.probability.hmm.exact","c":"FixedLagSmoothing","l":"forward(Matrix, Matrix)","url":"forward(aima.core.util.math.Matrix,aima.core.util.math.Matrix)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"forward(Matrix, Matrix)","url":"forward(aima.core.util.math.Matrix,aima.core.util.math.Matrix)"},{"p":"aima.core.probability.temporal.generic","c":"ForwardBackward","l":"ForwardBackward(FiniteProbabilityModel, Map<RandomVariable, RandomVariable>, FiniteProbabilityModel)","url":"%3Cinit%3E(aima.core.probability.FiniteProbabilityModel,java.util.Map,aima.core.probability.FiniteProbabilityModel)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"forwardBackward(List<List<AssignmentProposition>>, CategoricalDistribution)","url":"forwardBackward(java.util.List,aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackwardConstantSpace","l":"forwardBackward(List<List<AssignmentProposition>>, CategoricalDistribution)","url":"forwardBackward(java.util.List,aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.temporal","c":"ForwardBackwardInference","l":"forwardBackward(List<List<AssignmentProposition>>, CategoricalDistribution)","url":"forwardBackward(java.util.List,aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.temporal.generic","c":"ForwardBackward","l":"forwardBackward(List<List<AssignmentProposition>>, CategoricalDistribution)","url":"forwardBackward(java.util.List,aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackwardConstantSpace","l":"forwardRecover(Matrix, Matrix)","url":"forwardRecover(aima.core.util.math.Matrix,aima.core.util.math.Matrix)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"frame"},{"p":"aima.core.util","c":"FrequencyCounter","l":"FrequencyCounter()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"fromFile(String, DataSetSpecification, String)","url":"fromFile(java.lang.String,aima.core.learning.framework.DataSetSpecification,java.lang.String)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"frontier"},{"p":"aima.core.probability.bayes.impl","c":"FullCPTNode","l":"FullCPTNode(RandomVariable, double[], Node...)","url":"%3Cinit%3E(aima.core.probability.RandomVariable,double[],aima.core.probability.bayes.Node...)"},{"p":"aima.core.probability.bayes.impl","c":"FullCPTNode","l":"FullCPTNode(RandomVariable, double[])","url":"%3Cinit%3E(aima.core.probability.RandomVariable,double[])"},{"p":"aima.core.probability.example","c":"FullJointDistributionBurglaryAlarmModel","l":"FullJointDistributionBurglaryAlarmModel()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.example","c":"FullJointDistributionMeningitisStiffNeckModel","l":"FullJointDistributionMeningitisStiffNeckModel()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"FullJointDistributionModel(double[], RandomVariable...)","url":"%3Cinit%3E(double[],aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.example","c":"FullJointDistributionPairFairDiceModel","l":"FullJointDistributionPairFairDiceModel()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.example","c":"FullJointDistributionToothacheCavityCatchModel","l":"FullJointDistributionToothacheCavityCatchModel()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.example","c":"FullJointDistributionToothacheCavityCatchWeatherModel","l":"FullJointDistributionToothacheCavityCatchWeatherModel()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"FullyObservableVacuumEnvironmentPerceptToStateFunction","l":"FullyObservableVacuumEnvironmentPerceptToStateFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"FUNCTION"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"Function(String, List<Term>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"aima.core.search.framework.evalfunc","c":"PathCostFunction","l":"g(Node)","url":"g(aima.core.search.framework.Node)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"game"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"generateCloud(int)"},{"p":"aima.core.robotics.datatypes","c":"IMclMove","l":"generateNoise()"},{"p":"aima.core.util","c":"Util","l":"generateRandomDoubleBetween(double, double)","url":"generateRandomDoubleBetween(double,double)"},{"p":"aima.core.util","c":"Util","l":"generateRandomFloatBetween(float, float)","url":"generateRandomFloatBetween(float,float)"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"generateRandomIndividual(int)"},{"p":"aima.core.probability.example","c":"GenericTemporalModelFactory","l":"GenericTemporalModelFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"geneticAlgorithm(Collection<Individual<A>>, FitnessFunction<A>, GoalTest, long)","url":"geneticAlgorithm(java.util.Collection,aima.core.search.local.FitnessFunction,aima.core.search.framework.problem.GoalTest,long)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"geneticAlgorithm(Collection<Individual<A>>, FitnessFunction<A>, int)","url":"geneticAlgorithm(java.util.Collection,aima.core.search.local.FitnessFunction,int)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"GeneticAlgorithm(int, Collection<A>, double, Random)","url":"%3Cinit%3E(int,java.util.Collection,double,java.util.Random)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"GeneticAlgorithm(int, Collection<A>, double)","url":"%3Cinit%3E(int,java.util.Collection,double)"},{"p":"aima.core.search.local","c":"GeneticAlgorithmForNumbers","l":"GeneticAlgorithmForNumbers(int, double, double, double)","url":"%3Cinit%3E(int,double,double,double)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"GERALDTON"},{"p":"aima.core.util.math","c":"Matrix","l":"get(int, int)","url":"get(int,int)"},{"p":"aima.core.search.csp","c":"Domain","l":"get(int)"},{"p":"aima.core.util.datastructure","c":"TwoKeyHashMap","l":"get(K1, K2)","url":"get(K1,K2)"},{"p":"aima.core.util.datastructure","c":"Table","l":"get(RowHeaderType, ColumnHeaderType)","url":"get(RowHeaderType,ColumnHeaderType)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"get(String)","url":"get(java.lang.String)"},{"p":"aima.core.search.framework","c":"Metrics","l":"get(String)","url":"get(java.lang.String)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"get(VertexLabelType, VertexLabelType)","url":"get(VertexLabelType,VertexLabelType)"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"getAction()"},{"p":"aima.core.environment.connectfour","c":"ActionValuePair","l":"getAction()"},{"p":"aima.core.search.framework","c":"Node","l":"getAction()"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"getActions()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getActions(ConnectFourState)","url":"getActions(aima.core.environment.connectfour.ConnectFourState)"},{"p":"aima.core.search.adversarial","c":"Game","l":"getActions(STATE)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getActions(TicTacToeState)","url":"getActions(aima.core.environment.tictactoe.TicTacToeState)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleFunctionFactory","l":"getActionsFunction()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleFunctionFactory","l":"getActionsFunction()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"getActionsFunction()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"getActionsFunction()"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"getActionsFunction()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getActionsFunction(Map)","url":"getActionsFunction(aima.core.environment.map.Map)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusFunctionFactory","l":"getActionsFunction(WumpusCave)","url":"getActionsFunction(aima.core.environment.wumpusworld.WumpusCave)"},{"p":"aima.core.learning.neural","c":"Layer","l":"getActivationFunction()"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"getAdaptee()"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"getAgentLocation()"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.environment.map","c":"MapEnvironmentState","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"FullyObservableVacuumEnvironmentPercept","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironmentState","l":"getAgentLocation(Agent)","url":"getAgentLocation(aima.core.agent.Agent)"},{"p":"aima.core.environment.map","c":"Scenario","l":"getAgentMap()"},{"p":"aima.core.agent","c":"Environment","l":"getAgents()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"getAgents()"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"getAgentTravelDistance(Agent)","url":"getAgentTravelDistance(aima.core.agent.Agent)"},{"p":"aima.core.environment.map","c":"MapEnvironmentState","l":"getAgentTravelDistance(Agent)","url":"getAgentTravelDistance(aima.core.agent.Agent)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getAllClauses()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getAllDefiniteClauseImplications()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getAllDefiniteClauses()"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"getAllTerminalRules()"},{"p":"aima.core.robotics.datatypes","c":"IMclRangeReading","l":"getAngle()"},{"p":"aima.core.robotics.impl.datatypes","c":"AbstractRangeReading","l":"getAngle()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"getAngle()"},{"p":"aima.core.logic.fol.inference.proof","c":"Proof","l":"getAnswerBindings()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofFinal","l":"getAnswerBindings()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainAnswerLiteralAddedEvent","l":"getAnswerLiteralNameName()"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"getAreaBoundaries()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getAreaColor()"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"getAreas()"},{"p":"aima.core.logic.fol.parsing.ast","c":"AtomicSentence","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"FOLNode","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Term","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"getArgs()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"getArgs()"},{"p":"aima.core.probability","c":"Factor","l":"getArgumentVariables()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getArgumentVariables()"},{"p":"aima.core.util.math","c":"Matrix","l":"getArray()"},{"p":"aima.core.util.math","c":"Matrix","l":"getArrayCopy()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"getAssignedSymbols()"},{"p":"aima.core.search.csp","c":"Assignment","l":"getAssignment(Variable)","url":"getAssignment(aima.core.search.csp.Variable)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"getAtomicSentence()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"getAtomicSentence()"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"getAttribute(Object)","url":"getAttribute(java.lang.Object)"},{"p":"aima.core.learning.framework","c":"AttributeSpecification","l":"getAttributeName()"},{"p":"aima.core.learning.framework","c":"NumericAttributeSpecification","l":"getAttributeName()"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"getAttributeName()"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"getAttributeName()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getAttributeNames()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"getAttributeNames()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"getAttributeSpecFor(String)","url":"getAttributeSpecFor(java.lang.String)"},{"p":"aima.core.learning.framework","c":"Example","l":"getAttributeValueAsDouble(String)","url":"getAttributeValueAsDouble(java.lang.String)"},{"p":"aima.core.learning.framework","c":"Example","l":"getAttributeValueAsString(String)","url":"getAttributeValueAsString(java.lang.String)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"getAveDelta(double[], double[])","url":"getAveDelta(double[],double[])"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getBackgroundColor()"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"getBayesInference()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getBiasVector()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"getBindings()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleEnvironment","l":"getBoard()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"getBoardForIndividual(Individual<Integer>)","url":"getBoardForIndividual(aima.core.search.local.Individual)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getBoardPic()"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"getBoundaries()"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"getBounds()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"getBounds()"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"getBounds()"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"getBounds()"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"getBounds()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"getBounds()"},{"p":"aima.core.environment.nqueens","c":"NQueensFunctionFactory","l":"getCActionsFunction()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"getCaveXDimension()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"getCaveXDimension()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"getCaveYDimension()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"getCaveYDimension()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldPercept","l":"getCell()"},{"p":"aima.core.environment.cellworld","c":"CellWorld","l":"getCellAt(int, int)","url":"getCellAt(int,int)"},{"p":"aima.core.environment.cellworld","c":"CellWorld","l":"getCells()"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"getCenter()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"getCenter()"},{"p":"aima.core.probability.bayes","c":"Node","l":"getChildren()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"getChildren()"},{"p":"aima.core.learning.knowledge","c":"FOLExample","l":"getClassification()"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"getClauseFilter()"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"getClauses()"},{"p":"aima.core.logic.propositional.visitors","c":"ClauseCollector","l":"getClausesFrom(Sentence...)","url":"getClausesFrom(aima.core.logic.propositional.parsing.ast.Sentence...)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"getClauseSimplifier()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getClearance()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getClearanceBorder()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getClearanceComp()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getCols()"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"getColumnCount()"},{"p":"aima.core.util.math","c":"Matrix","l":"getColumnDimension()"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"getColumnName(int)"},{"p":"aima.core.util.math","c":"Matrix","l":"getColumnPackedCopy()"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"getComparator()"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getConditioningCase(AssignmentProposition...)","url":"getConditioningCase(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityTable","l":"getConditioningCase(AssignmentProposition...)","url":"getConditioningCase(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getConditioningCase(AssignmentProposition...)","url":"getConditioningCase(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getConditioningCase(Object...)","url":"getConditioningCase(java.lang.Object...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityTable","l":"getConditioningCase(Object...)","url":"getConditioningCase(java.lang.Object...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getConditioningCase(Object...)","url":"getConditioningCase(java.lang.Object...)"},{"p":"aima.core.logic.fol.kb.data","c":"CNF","l":"getConjunctionOfClauses()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"getConnective()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"getConnective()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"getConnector()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"getConstants()"},{"p":"aima.core.search.csp","c":"CSP","l":"getConstraints()"},{"p":"aima.core.search.csp","c":"CSP","l":"getConstraints(Variable)","url":"getConstraints(aima.core.search.csp.Variable)"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"getContent()"},{"p":"aima.core.nlp.ranking","c":"Page","l":"getContent()"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"getContingencyPlan()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getContrapositives()"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"getController()"},{"p":"aima.core.util","c":"FrequencyCounter","l":"getCount(T)"},{"p":"aima.core.probability.bayes","c":"Node","l":"getCPD()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"getCPD()"},{"p":"aima.core.probability.bayes.impl","c":"FullCPTNode","l":"getCPD()"},{"p":"aima.core.probability.bayes","c":"FiniteNode","l":"getCPT()"},{"p":"aima.core.probability.bayes.impl","c":"FullCPTNode","l":"getCPT()"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"getCurrentLocationFor(EnvironmentObject)","url":"getCurrentLocationFor(aima.core.agent.EnvironmentObject)"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"getCurrentNumeralValue(int)"},{"p":"aima.core.logic.common","c":"Lexer","l":"getCurrentPositionInInput()"},{"p":"aima.core.logic.common","c":"LexerException","l":"getCurrentPositionInInputExceptionThrown()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"getCurrentState()"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"getCurrentValueFor(int[])"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getDataSetTargetName()"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"getDecisionList()"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"getDecisionTree()"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"getDegreeValue()"},{"p":"aima.core.probability.proposition","c":"AbstractDerivedProposition","l":"getDerivedName()"},{"p":"aima.core.probability.proposition","c":"DerivedProposition","l":"getDerivedName()"},{"p":"aima.core.search.local","c":"Individual","l":"getDescendants()"},{"p":"aima.core.learning.knowledge","c":"FOLExample","l":"getDescription()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getDescriptionDataSetNames()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getDescriptionPredicateNames()"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"getDirection()"},{"p":"aima.core.util.math.geom.shapes","c":"Ray2D","l":"getDirection()"},{"p":"aima.core.util","c":"DisjointSets","l":"getDisjointSets()"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"getDistance(String, String)","url":"getDistance(java.lang.String,java.lang.String)"},{"p":"aima.core.environment.map","c":"Map","l":"getDistance(String, String)","url":"getDistance(java.lang.String,java.lang.String)"},{"p":"aima.core.probability","c":"RandomVariable","l":"getDomain()"},{"p":"aima.core.probability.util","c":"RandVar","l":"getDomain()"},{"p":"aima.core.search.csp","c":"CSP","l":"getDomain(Variable)","url":"getDomain(aima.core.search.csp.Variable)"},{"p":"aima.core.search.framework","c":"Metrics","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"getDoublePivot()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getE_1()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getE_1()"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"getEdges()"},{"p":"aima.core.util","c":"DisjointSets","l":"getElementToDisjointSet()"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"getEnd()"},{"p":"aima.core.environment.map","c":"Scenario","l":"getEnv()"},{"p":"aima.core.agent","c":"Environment","l":"getEnvironmentObjects()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"getEnvironmentObjects()"},{"p":"aima.core.environment.map","c":"Scenario","l":"getEnvMap()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"getEnvView()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getEqualityIdentity()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"getEqualitySynbol()"},{"p":"aima.core.search.informed","c":"BestFirstSearch","l":"getEvaluationFunction()"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"getEvaluationFunction()"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"getEventValuesForParents(Node, Map<RandomVariable, Object>)","url":"getEventValuesForParents(aima.core.probability.bayes.Node,java.util.Map)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"getEventValuesForXiGivenParents(Node, Map<RandomVariable, Object>)","url":"getEventValuesForXiGivenParents(aima.core.probability.bayes.Node,java.util.Map)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"getEventValuesForXiGivenParents(Node, Object, Map<RandomVariable, Object>)","url":"getEventValuesForXiGivenParents(aima.core.probability.bayes.Node,java.lang.Object,java.util.Map)"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"getEvidence(List<AssignmentProposition>)","url":"getEvidence(java.util.List)"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"getEvidence(List<AssignmentProposition>)","url":"getEvidence(java.util.List)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getExample(int)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"getExample(int)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"getExampleAtRandom()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getExampleConstant(int)"},{"p":"aima.core.learning.knowledge","c":"FOLExample","l":"getExampleNumber()"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityTable","l":"getFactorFor(AssignmentProposition...)","url":"getFactorFor(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getFactorFor(AssignmentProposition...)","url":"getFactorFor(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getFactors()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"getFiniteAlphabetForBoardOfSize(int)"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"getFirst()"},{"p":"aima.core.util.datastructure","c":"Pair","l":"getFirst()"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"getFirst()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"getFirstRightAngledAction()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"getFitnessFunction()"},{"p":"aima.core.logic.fol.parsing","c":"FOLLexer","l":"getFOLDomain()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"getFOLDomain()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getFOLName(String)","url":"getFOLName(java.lang.String)"},{"p":"aima.core.probability","c":"ProbabilityDistribution","l":"getFor()"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getFor()"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getFor()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getFor()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getFormat()"},{"p":"aima.core.logic.fol","c":"StandardizeApartResult","l":"getForwardSubstitution()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"getFunctionName()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"getFunctions()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleGoalTest","l":"getGoalBoard()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getGoalPredicateName()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"getGoalTest()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"getGoalTest()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"getGoalTest()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getHead()"},{"p":"aima.core.robotics.impl.datatypes","c":"IPose2D","l":"getHeading()"},{"p":"aima.core.search.informed","c":"HeuristicEvaluationFunction","l":"getHeuristicFunction()"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"getHeuristicFunction()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getHiddenLayer()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getHiddenLayerBias()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getHiddenLayerWeights()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"getHorizontalLength()"},{"p":"aima.core.learning.knowledge","c":"Hypothesis","l":"getHypothesis()"},{"p":"aima.core.environment.nqueens","c":"NQueensFunctionFactory","l":"getIActionsFunction()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"getIndex(int)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"getIndex(Object...)","url":"getIndex(java.lang.Object...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getIndex(Object...)","url":"getIndex(java.lang.Object...)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"getIndex(String)","url":"getIndex(java.lang.String)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"getIndexedValue()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"getIndexical()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getInferenceProcedure()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getInformationFor()"},{"p":"aima.core.environment.map","c":"Scenario","l":"getInitAgentLocation()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getInitialState()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getInitialState()"},{"p":"aima.core.probability.mdp","c":"MarkovDecisionProcess","l":"getInitialState()"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"getInitialState()"},{"p":"aima.core.search.adversarial","c":"Game","l":"getInitialState()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"getInitialState()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"getInitialState()"},{"p":"aima.core.nlp.ranking","c":"Page","l":"getInlinks()"},{"p":"aima.core.nlp.ranking","c":"LinkFinder","l":"getInlinks(Page, Map<String, Page>)","url":"getInlinks(aima.core.nlp.ranking.Page,java.util.Map)"},{"p":"aima.core.nlp.ranking","c":"WikiLinkFinder","l":"getInlinks(Page, Map<String, Page>)","url":"getInlinks(aima.core.nlp.ranking.Page,java.util.Map)"},{"p":"aima.core.learning.neural","c":"NNExample","l":"getInput()"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"getInstrumentation()"},{"p":"aima.core.search.framework","c":"Metrics","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"getIrisDataSet()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"getIterations()"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStep","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainCancellation","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainContrapositive","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainDropped","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainFromClause","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainReduction","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseBinaryResolvent","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseClausifySentence","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseDemodulation","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseFactor","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseParamodulation","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAlreadyAFact","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAssertFact","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepGoal","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepPremise","l":"getJustification()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepRenaming","l":"getJustification()"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"getKeySet()"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"getL()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getLastActivationValues()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getLastBiasUpdateVector()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getLastInducedField()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getLastInputValues()"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"getLastSearchState()"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"getLastSearchState()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getLastWeightUpdateMatrix()"},{"p":"aima.core.learning.neural","c":"LayerSensitivity","l":"getLayer()"},{"p":"aima.core.logic.common","c":"Parser","l":"getLexer()"},{"p":"aima.core.logic.propositional.parsing","c":"PLParser","l":"getLexer()"},{"p":"aima.core.logic.fol.inference.otter","c":"LightestClauseHeuristic","l":"getLightestClause()"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultLightestClauseHeuristic","l":"getLightestClause()"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"getLightestClauseHeuristic()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getLiterals()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getLiterals()"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"getLocation()"},{"p":"aima.core.nlp.ranking","c":"Page","l":"getLocation()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"getLocationOf(int)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"getLocationOf(int)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"getLocations()"},{"p":"aima.core.environment.map","c":"Map","l":"getLocations()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"getLocations()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"getLocationsLinkedTo(AgentPosition)","url":"getLocationsLinkedTo(aima.core.environment.wumpusworld.AgentPosition)"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"getLocationState()"},{"p":"aima.core.environment.vacuum","c":"FullyObservableVacuumEnvironmentPercept","l":"getLocationState(String)","url":"getLocationState(java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"getLocationState(String)","url":"getLocationState(java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"getLocationState(String)","url":"getLocationState(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"getLogger()"},{"p":"aima.core.search.framework","c":"Metrics","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"aima.core.util.math","c":"Interval","l":"getLower()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"getLowerLeft()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"getLowerRight()"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"getMap()"},{"p":"aima.core.probability.bayes","c":"Node","l":"getMarkovBlanket()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"getMarkovBlanket()"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"getMatchingSubstitution()"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"getMatchingSubstitution(Term, AtomicSentence)","url":"getMatchingSubstitution(aima.core.logic.fol.parsing.ast.Term,aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"getMatchingTerm()"},{"p":"aima.core.util.math","c":"Matrix","l":"getMatrix(int, int, int, int)","url":"getMatrix(int,int,int,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"getMatrix(int, int, int[])","url":"getMatrix(int,int,int[])"},{"p":"aima.core.util.math","c":"Matrix","l":"getMatrix(int[], int, int)","url":"getMatrix(int[],int,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"getMatrix(int[], int[])","url":"getMatrix(int[],int[])"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"getMaxAllowedValue()"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"getMaxAuthority(List<Page>)","url":"getMaxAuthority(java.util.List)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"getMaxHub(List<Page>)","url":"getMaxHub(java.util.List)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"getMaxQueryTime()"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"getMaxQueryTime()"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"getMaxQueryTime()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"getMeans()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"getMessageLogger()"},{"p":"aima.core.search.adversarial","c":"AdversarialSearch","l":"getMetrics()"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"getMetrics()"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"getMetrics()"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"getMetrics()"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"getMetrics()"},{"p":"aima.core.search.framework","c":"SearchForActions","l":"getMetrics()"},{"p":"aima.core.search.framework","c":"SearchForStates","l":"getMetrics()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"getMetrics()"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"getMetrics()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"getMetrics()"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"getMetrics()"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"getMetrics()"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"getMetrics()"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"getMetrics()"},{"p":"aima.core.search.uninformed","c":"DepthFirstSearch","l":"getMetrics()"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"getMetrics()"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"getMetrics()"},{"p":"aima.core.nlp.parsing","c":"CYK","l":"getMostProbableDerivation(float[][][], ProbUnrestrictedGrammar)","url":"getMostProbableDerivation(float[][][],aima.core.nlp.parsing.grammars.ProbUnrestrictedGrammar)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getMoves()"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"getN()"},{"p":"aima.core.agent.impl","c":"DynamicAction","l":"getName()"},{"p":"aima.core.probability","c":"RandomVariable","l":"getName()"},{"p":"aima.core.probability.util","c":"RandVar","l":"getName()"},{"p":"aima.core.search.csp","c":"Variable","l":"getName()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"getNamesOfStringAttributes()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"getNegated()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getNegativeLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getNegativeSymbols()"},{"p":"aima.core.search.csp","c":"CSP","l":"getNeighbor(Variable, Constraint)","url":"getNeighbor(aima.core.search.csp.Variable,aima.core.search.csp.Constraint)"},{"p":"aima.core.logic.fol","c":"StandardizeApartIndexical","l":"getNextIndex()"},{"p":"aima.core.probability.bayes","c":"BayesianNetwork","l":"getNode(RandomVariable)","url":"getNode(aima.core.probability.RandomVariable)"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"getNode(RandomVariable)","url":"getNode(aima.core.probability.RandomVariable)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"getNodeComparator()"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"getNodeExpander()"},{"p":"aima.core.search.framework","c":"SearchForActions","l":"getNodeExpander()"},{"p":"aima.core.search.framework","c":"SearchForStates","l":"getNodeExpander()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"getNodeExpander()"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"getNodeExpander()"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"getNodeExpander()"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"getNodeExpander()"},{"p":"aima.core.search.uninformed","c":"BreadthFirstSearch","l":"getNodeExpander()"},{"p":"aima.core.search.uninformed","c":"DepthFirstSearch","l":"getNodeExpander()"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"getNodeExpander()"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"getNodeExpander()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getNonTargetAttributes()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getNonTrivialFactors()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"getNormalizedData()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getNumberFacts()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getNumberLiterals()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getNumberLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getNumberLiterals()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getNumberNegativeLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getNumberNegativeLiterals()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getNumberOfAttackingPairs()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getNumberOfAttacksOn(XYLocation)","url":"getNumberOfAttacksOn(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.logic.fol.kb.data","c":"CNF","l":"getNumberOfClauses()"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"getNumberOfClauses()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"getNumberOfMarkedPositions()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getNumberOfQueensOnBoard()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getNumberPositiveLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getNumberPositiveLiterals()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getNumberRules()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"getNumberSimplerSentences()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"getNumberSimplerSentences()"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"getNumOfExpandCalls()"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"getObjectsAt(XYLocation)","url":"getObjectsAt(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"getObjectsNear(Agent, int)","url":"getObjectsNear(aima.core.agent.Agent,int)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"getObstacleBoundaries()"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"getObstacles()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"getOffset(Object)","url":"getOffset(java.lang.Object)"},{"p":"aima.core.probability.domain","c":"FiniteDomain","l":"getOffset(Object)","url":"getOffset(java.lang.Object)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getOn()"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getOn()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"getOrientation()"},{"p":"aima.core.environment.eightpuzzle","c":"BidirectionalEightPuzzleProblem","l":"getOriginalProblem()"},{"p":"aima.core.environment.fifteenpuzzle","c":"BidirectionalFifteenPuzzleProblem","l":"getOriginalProblem()"},{"p":"aima.core.environment.map","c":"BidirectionalMapProblem","l":"getOriginalProblem()"},{"p":"aima.core.search.framework.problem","c":"BidirectionalProblem","l":"getOriginalProblem()"},{"p":"aima.core.logic.fol","c":"StandardizeApartResult","l":"getOriginalSentence()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getOriginalSentences()"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"getOutcome()"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"getOutcome()"},{"p":"aima.core.nlp.ranking","c":"Page","l":"getOutlinks()"},{"p":"aima.core.nlp.ranking","c":"LinkFinder","l":"getOutlinks(Page)","url":"getOutlinks(aima.core.nlp.ranking.Page)"},{"p":"aima.core.nlp.ranking","c":"WikiLinkFinder","l":"getOutlinks(Page)","url":"getOutlinks(aima.core.nlp.ranking.Page)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getOutputLayer()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getOutputLayerBias()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"getOutputLayerWeights()"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"getPageName(File)","url":"getPageName(java.io.File)"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"getParameterAsDouble(String)","url":"getParameterAsDouble(java.lang.String)"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"getParameterAsInteger(String)","url":"getParameterAsInteger(java.lang.String)"},{"p":"aima.core.search.framework","c":"Node","l":"getParent()"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getParents()"},{"p":"aima.core.probability.bayes","c":"Node","l":"getParents()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"getParents()"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getParents()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"getParser()"},{"p":"aima.core.search.framework","c":"Node","l":"getPathCost()"},{"p":"aima.core.search.framework","c":"Node","l":"getPathFromRoot()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getPenultimateBiasUpdateVector()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getPenultimateWeightUpdateMatrix()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironmentState","l":"getPerceptFor(Agent)","url":"getPerceptFor(aima.core.agent.Agent)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleEnvironment","l":"getPerceptSeenBy(Agent)","url":"getPerceptSeenBy(aima.core.agent.Agent)"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getPerceptToStateFunction()"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"getPerceptToStateFunction()"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"getPerceptToStateFunction()"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"getPerceptToStateFunction()"},{"p":"aima.core.agent","c":"Environment","l":"getPerformanceMeasure(Agent)","url":"getPerformanceMeasure(aima.core.agent.Agent)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"getPerformanceMeasure(Agent)","url":"getPerformanceMeasure(aima.core.agent.Agent)"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"getPivot()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getPlayer(ConnectFourState)","url":"getPlayer(aima.core.environment.connectfour.ConnectFourState)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getPlayer(int)"},{"p":"aima.core.search.adversarial","c":"Game","l":"getPlayer(STATE)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getPlayer(TicTacToeState)","url":"getPlayer(aima.core.environment.tictactoe.TicTacToeState)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getPlayerNum(int, int)","url":"getPlayerNum(int,int)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getPlayerNum(String)","url":"getPlayerNum(java.lang.String)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getPlayers()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getPlayers()"},{"p":"aima.core.search.adversarial","c":"Game","l":"getPlayers()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getPlayerToMove()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"getPlayerToMove()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"getPopulationSize()"},{"p":"aima.core.robotics.impl.map","c":"IPoseFactory","l":"getPose(Point2D, double)","url":"getPose(aima.core.util.math.geom.shapes.Point2D,double)"},{"p":"aima.core.robotics.impl.map","c":"IPoseFactory","l":"getPose(Point2D)","url":"getPose(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"getPosition(String)","url":"getPosition(java.lang.String)"},{"p":"aima.core.environment.map","c":"Map","l":"getPosition(String)","url":"getPosition(java.lang.String)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"getPositions()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"getPositions()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getPositiveLiterals()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getPositiveSymbols()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getPossibleAttributeValues(String)","url":"getPossibleAttributeValues(java.lang.String)"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"getPossibleAttributeValues(String)","url":"getPossibleAttributeValues(java.lang.String)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"getPossibleNextLocations(String)","url":"getPossibleNextLocations(java.lang.String)"},{"p":"aima.core.environment.map","c":"Map","l":"getPossibleNextLocations(String)","url":"getPossibleNextLocations(java.lang.String)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"getPossiblePrevLocations(String)","url":"getPossiblePrevLocations(java.lang.String)"},{"p":"aima.core.environment.map","c":"Map","l":"getPossiblePrevLocations(String)","url":"getPossiblePrevLocations(java.lang.String)"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"getPossibleValues()"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"getPossibleValues()"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"getPossibleValues()"},{"p":"aima.core.probability.domain","c":"FiniteDomain","l":"getPossibleValues()"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"getPossibleValues()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"getPrecedence()"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStep","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainCancellation","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainContrapositive","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainDropped","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainFromClause","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainReduction","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseBinaryResolvent","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseClausifySentence","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseDemodulation","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseFactor","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseParamodulation","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAlreadyAFact","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAssertFact","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepGoal","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepPremise","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepRenaming","l":"getPredecessorSteps()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"getPredicateName()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"getPredicates()"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"getPredicates(Sentence)","url":"getPredicates(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol","c":"StandardizeApartIndexical","l":"getPrefix()"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"getPrintStream()"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"getPrior()"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"getPrior()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getPriorNetwork()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getPriorNetwork()"},{"p":"aima.core.nlp.parsing","c":"LexWord","l":"getProb()"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"getProblem()"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"getProblem()"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"getProblem()"},{"p":"aima.core.logic.common","c":"ParserException","l":"getProblematicTokens()"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStep","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainCancellation","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainContrapositive","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainDropped","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainFromClause","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainReduction","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseBinaryResolvent","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseClausifySentence","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseDemodulation","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseFactor","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseParamodulation","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAlreadyAFact","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAssertFact","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepGoal","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepPremise","l":"getProof()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepRenaming","l":"getProof()"},{"p":"aima.core.logic.fol.inference","c":"InferenceResult","l":"getProofs()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getProofStep()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"getProofStep()"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"getPropositionSymbolsInSentence(Sentence)","url":"getPropositionSymbolsInSentence(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"getPropositionSymbolsInSentence(Sentence)","url":"getPropositionSymbolsInSentence(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"getQuantified()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"getQuantifier()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getQueenPositions()"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"getRadius()"},{"p":"aima.core.probability.bayes","c":"Node","l":"getRandomVariable()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"getRandomVariable()"},{"p":"aima.core.robotics.impl.map","c":"IRangeReadingFactory","l":"getRangeReading(double)"},{"p":"aima.core.robotics","c":"IMclRobot","l":"getRangeReadings()"},{"p":"aima.core.probability","c":"ProbabilityModel","l":"getRepresentation()"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"getRepresentation()"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"getRepresentation()"},{"p":"aima.core.search.local","c":"Individual","l":"getRepresentation()"},{"p":"aima.core.learning.framework","c":"DataSetFactory","l":"getRestaurantDataSet()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getResult(ConnectFourState, Integer)","url":"getResult(aima.core.environment.connectfour.ConnectFourState,java.lang.Integer)"},{"p":"aima.core.search.adversarial","c":"Game","l":"getResult(STATE, ACTION)","url":"getResult(STATE,ACTION)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getResult(TicTacToeState, XYLocation)","url":"getResult(aima.core.environment.tictactoe.TicTacToeState,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleFunctionFactory","l":"getResultFunction()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleFunctionFactory","l":"getResultFunction()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getResultFunction()"},{"p":"aima.core.environment.nqueens","c":"NQueensFunctionFactory","l":"getResultFunction()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusFunctionFactory","l":"getResultFunction()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"getResultFunction()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"getResultsFunction()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getReverseActionsFunction(Map)","url":"getReverseActionsFunction(aima.core.environment.map.Map)"},{"p":"aima.core.environment.eightpuzzle","c":"BidirectionalEightPuzzleProblem","l":"getReverseProblem()"},{"p":"aima.core.environment.fifteenpuzzle","c":"BidirectionalFifteenPuzzleProblem","l":"getReverseProblem()"},{"p":"aima.core.environment.map","c":"BidirectionalMapProblem","l":"getReverseProblem()"},{"p":"aima.core.search.framework.problem","c":"BidirectionalProblem","l":"getReverseProblem()"},{"p":"aima.core.logic.fol","c":"StandardizeApartResult","l":"getReverseSubstitution()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"getRoom()"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"getRowCount()"},{"p":"aima.core.util.math","c":"Matrix","l":"getRowDimension()"},{"p":"aima.core.util.math","c":"Matrix","l":"getRowPackedCopy()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getRows()"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getSample(double, AssignmentProposition...)","url":"getSample(double,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getSample(double, AssignmentProposition...)","url":"getSample(double,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getSample(double, Object...)","url":"getSample(double,java.lang.Object...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getSample(double, Object...)","url":"getSample(double,java.lang.Object...)"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"getSavedDomains()"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"getScope()"},{"p":"aima.core.probability.proposition","c":"Proposition","l":"getScope()"},{"p":"aima.core.probability.util","c":"RandVar","l":"getScope()"},{"p":"aima.core.search.csp","c":"Constraint","l":"getScope()"},{"p":"aima.core.search.csp.examples","c":"DiffNotEqualConstraint","l":"getScope()"},{"p":"aima.core.search.csp.examples","c":"NotEqualConstraint","l":"getScope()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"getSecond()"},{"p":"aima.core.util.datastructure","c":"Pair","l":"getSecond()"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"getSecond()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"getSecondRightAngledAction()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"getSelection()"},{"p":"aima.core.learning.neural","c":"LayerSensitivity","l":"getSensitivityMatrix()"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"getSensorModel()"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"getSensorModel()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"getSentences()"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"getSequenceOfActions(Node)","url":"getSequenceOfActions(aima.core.search.framework.Node)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"getShapes()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"getSimplerSentence(int)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"getSimplerSentence(int)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"getSimulationThread()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"getSize()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemConstantAddedEvent","l":"getSkolemConstantName()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemFunctionAddedEvent","l":"getSkolemConstantName()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getSLDHeuristicFunction(Object, Map)","url":"getSLDHeuristicFunction(java.lang.Object,aima.core.environment.map.Map)"},{"p":"aima.core.logic.fol","c":"StandardizeApartResult","l":"getStandardized()"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"getStart()"},{"p":"aima.core.util.math.geom.shapes","c":"Ray2D","l":"getStart()"},{"p":"aima.core.logic.common","c":"Token","l":"getStartCharPositionInInput()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"getState()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"getState()"},{"p":"aima.core.search.framework","c":"Node","l":"getState()"},{"p":"aima.core.environment.vacuum","c":"FullyObservableVacuumEnvironmentPerceptToStateFunction","l":"getState(Percept)","url":"getState(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"PerceptToStateFunction","l":"getState(Percept)","url":"getState(aima.core.agent.Percept)"},{"p":"aima.core.util","c":"FrequencyCounter","l":"getStates()"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"getStateVariable()"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"getStateVariable()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"getStdevs()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"getStepCostFunction()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"getStepCostFunction()"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"getStepCostFunction()"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"getStepNumber()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStep","l":"getStepNumber()"},{"p":"aima.core.logic.fol.inference.proof","c":"Proof","l":"getSteps()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofFinal","l":"getSteps()"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"getStumpFor(DataSet, String, String, String, List<String>, String)","url":"getStumpFor(aima.core.learning.framework.DataSet,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"getStumpsFor(DataSet, String, String)","url":"getStumpsFor(aima.core.learning.framework.DataSet,java.lang.String,java.lang.String)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"getSuccessors(VertexLabelType)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"getSum()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getSum()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"getSymbol()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"getSymbol()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"FOLNode","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"getSymbolicName()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"getSymbolicName()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"getSymbols()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"getSymbols()"},{"p":"aima.core.logic.propositional.visitors","c":"SymbolCollector","l":"getSymbolsFrom(Sentence...)","url":"getSymbolsFrom(aima.core.logic.propositional.parsing.ast.Sentence...)"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"getTail()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"getTarget()"},{"p":"aima.core.learning.neural","c":"NNExample","l":"getTarget()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"getTargetAttributeName()"},{"p":"aima.core.search.local","c":"Scheduler","l":"getTemp(int)"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"getTerm1()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"getTerm2()"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"getTerminalRules(String)","url":"getTerminalRules(java.lang.String)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"getTerms()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"getTerms()"},{"p":"aima.core.probability.proposition","c":"AbstractTermProposition","l":"getTermVariable()"},{"p":"aima.core.probability.proposition","c":"TermProposition","l":"getTermVariable()"},{"p":"aima.core.probability.util","c":"RandVar","l":"getTermVariable()"},{"p":"aima.core.logic.common","c":"Token","l":"getText()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"getTextColor()"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"getThird()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"getTimeInMilliseconds()"},{"p":"aima.core.environment.map","c":"MoveToAction","l":"getToLocation()"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnLeft","l":"getToOrientation()"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnRight","l":"getToOrientation()"},{"p":"aima.core.environment.wumpusworld.action","c":"Forward","l":"getToPosition()"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"getTracer()"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"getTransitionModel()"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"getTransitionModel()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"getTrueGoalValue()"},{"p":"aima.core.logic.common","c":"Token","l":"getType()"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"getU()"},{"p":"aima.core.probability.example","c":"GenericTemporalModelFactory","l":"getUmbrellaWorld_Xt_to_Xtm1_Map()"},{"p":"aima.core.probability.example","c":"GenericTemporalModelFactory","l":"getUmbrellaWorldModel()"},{"p":"aima.core.probability.example","c":"HMMExampleFactory","l":"getUmbrellaWorldModel()"},{"p":"aima.core.probability.example","c":"DynamicBayesNetExampleFactory","l":"getUmbrellaWorldNetwork()"},{"p":"aima.core.probability.example","c":"GenericTemporalModelFactory","l":"getUmbrellaWorldSensorModel()"},{"p":"aima.core.probability.example","c":"GenericTemporalModelFactory","l":"getUmbrellaWorldTransitionModel()"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"getUnboundScope()"},{"p":"aima.core.probability.proposition","c":"Proposition","l":"getUnboundScope()"},{"p":"aima.core.probability.util","c":"RandVar","l":"getUnboundScope()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"getUnMarkedPositions()"},{"p":"aima.core.util.math","c":"Interval","l":"getUpper()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"getUpperLeft()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"getUpperRight()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"getUtility()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"getUtility()"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveADPAgent","l":"getUtility()"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveTDAgent","l":"getUtility()"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"getUtility()"},{"p":"aima.core.learning.reinforcement.agent","c":"ReinforcementAgent","l":"getUtility()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"getUtility(ConnectFourState, String)","url":"getUtility(aima.core.environment.connectfour.ConnectFourState,java.lang.String)"},{"p":"aima.core.search.adversarial","c":"Game","l":"getUtility(STATE, PLAYER)","url":"getUtility(STATE,PLAYER)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"getUtility(TicTacToeState, String)","url":"getUtility(aima.core.environment.tictactoe.TicTacToeState,java.lang.String)"},{"p":"aima.core.environment.connectfour","c":"ActionValuePair","l":"getValue()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"getValue()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"getValue()"},{"p":"aima.core.probability.proposition","c":"AssignmentProposition","l":"getValue()"},{"p":"aima.core.robotics.impl.datatypes","c":"AbstractRangeReading","l":"getValue()"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"getValue()"},{"p":"aima.core.probability","c":"ProbabilityDistribution","l":"getValue(AssignmentProposition...)","url":"getValue(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getValue(AssignmentProposition...)","url":"getValue(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getValue(AssignmentProposition...)","url":"getValue(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getValue(AssignmentProposition...)","url":"getValue(aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"getValue(int, int)","url":"getValue(int,int)"},{"p":"aima.core.util.math","c":"Vector","l":"getValue(int)"},{"p":"aima.core.probability","c":"ProbabilityDistribution","l":"getValue(Object...)","url":"getValue(java.lang.Object...)"},{"p":"aima.core.probability.bayes","c":"ConditionalProbabilityDistribution","l":"getValue(Object...)","url":"getValue(java.lang.Object...)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"getValue(Object...)","url":"getValue(java.lang.Object...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getValue(Object...)","url":"getValue(java.lang.Object...)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"getValue(PropositionSymbol)","url":"getValue(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"getValue(String)","url":"getValue(java.lang.String)"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"getValueAt(int, int)","url":"getValueAt(int,int)"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"getValueAt(int)"},{"p":"aima.core.probability.domain","c":"FiniteDomain","l":"getValueAt(int)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"getValueAt(XYLocation)","url":"getValueAt(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"getValueAt(XYLocation)","url":"getValueAt(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"getValues()"},{"p":"aima.core.probability","c":"Factor","l":"getValues()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"getValues()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"getVariables()"},{"p":"aima.core.search.csp","c":"Assignment","l":"getVariables()"},{"p":"aima.core.search.csp","c":"CSP","l":"getVariables()"},{"p":"aima.core.probability.bayes","c":"BayesianNetwork","l":"getVariablesInTopologicalOrder()"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"getVariablesInTopologicalOrder()"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"getVertexes()"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"getVertexLabels()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"getVerticalLength()"},{"p":"aima.core.learning.neural","c":"Layer","l":"getWeightMatrix()"},{"p":"aima.core.nlp.parsing","c":"LexWord","l":"getWord()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getX_0_to_X_1()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getX_0_to_X_1()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getX_0()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getX_0()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getX_1_to_X_0()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getX_1_to_X_0()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getX_1_VariablesInTopologicalOrder()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getX_1_VariablesInTopologicalOrder()"},{"p":"aima.core.probability.bayes","c":"DynamicBayesianNetwork","l":"getX_1()"},{"p":"aima.core.probability.bayes.impl","c":"DynamicBayesNet","l":"getX_1()"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"getX()"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"getX()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"getX()"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"getX()"},{"p":"aima.core.robotics.impl.datatypes","c":"IPose2D","l":"getX()"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"getX()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"getX()"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"getXCoOrdinate()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"getXResult(int)"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"getY()"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"getY()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"getY()"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"getY()"},{"p":"aima.core.robotics.impl.datatypes","c":"IPose2D","l":"getY()"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"getY()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"getY()"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"getYCoOrdinate()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"getYResult(int)"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"getZeroHeuristic()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"getZeroHeuristicFunction()"},{"p":"aima.core.probability.bayes.approx","c":"GibbsAsk","l":"GibbsAsk()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"GibbsAsk","l":"GibbsAsk(Randomizer)","url":"%3Cinit%3E(aima.core.util.Randomizer)"},{"p":"aima.core.probability.bayes.approx","c":"GibbsAsk","l":"gibbsAsk(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"gibbsAsk(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"GIURGIU"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"GoalReachable(FifteenPuzzleBoard)","url":"GoalReachable(aima.core.environment.fifteenpuzzle.FifteenPuzzleBoard)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"goals"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"goalTest"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"goalTest"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"goalTest"},{"p":"aima.core.environment.wumpusworld.action","c":"Grab","l":"GRAB_ACTION_NAME"},{"p":"aima.core.environment.wumpusworld.action","c":"Grab","l":"Grab()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework.util","c":"GraphicsTransfer2D","l":"GraphicsTransfer2D()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"GraphSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"GraphSearch(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"GraphSearchBFS()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"GraphSearchBFS(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"GraphSearchReducedFrontier()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"GraphSearchReducedFrontier(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.informed","c":"GreedyBestFirstEvaluationFunction","l":"GreedyBestFirstEvaluationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.search.informed","c":"GreedyBestFirstEvaluationFunction","l":"GreedyBestFirstEvaluationFunction(HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.search.informed","c":"GreedyBestFirstSearch","l":"GreedyBestFirstSearch(QueueSearch, HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch,aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"GREEN"},{"p":"aima.core.environment.eightpuzzle","c":"ManhattanHeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.eightpuzzle","c":"MisplacedTilleHeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.fifteenpuzzle","c":"ManhattanHeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.fifteenpuzzle","c":"MisplacedTilleHeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.nqueens","c":"AttackingPairsHeuristic","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.wumpusworld","c":"ManhattanHeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.search.framework.evalfunc","c":"HeuristicFunction","l":"h(Object)","url":"h(java.lang.Object)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"HALLS_CREEK"},{"p":"aima.core.learning.neural","c":"HardLimitActivationFunction","l":"HardLimitActivationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"Assignment","l":"hasAssignmentFor(Variable)","url":"hasAssignmentFor(aima.core.search.csp.Variable)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"hasConnective(Connective)","url":"hasConnective(aima.core.logic.propositional.parsing.ast.Connective)"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"hashCode()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Condition","l":"hashCode()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"hashCode()"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"hashCode()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"hashCode()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"hashCode()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"hashCode()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"hashCode()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"hashCode()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"hashCode()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"hashCode()"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"hashCode()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"hashCode()"},{"p":"aima.core.learning.framework","c":"Example","l":"hashCode()"},{"p":"aima.core.logic.common","c":"Token","l":"hashCode()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"hashCode()"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"hashCode()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"hashCode()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"hashCode()"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"hashCode()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"hashCode()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"hashCode()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"hashCode()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"hashCode()"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"hashCode()"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"hashCode()"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"hashCode()"},{"p":"aima.core.probability.util","c":"RandVar","l":"hashCode()"},{"p":"aima.core.search.csp","c":"Domain","l":"hashCode()"},{"p":"aima.core.search.csp","c":"Variable","l":"hashCode()"},{"p":"aima.core.util.datastructure","c":"Pair","l":"hashCode()"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"hashCode()"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"hashCode()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"hasMoreExamples()"},{"p":"aima.core.util","c":"ArrayIterator","l":"hasNext()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourAIPlayer","l":"hasSafeWinner(double)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"hasSafeWinner(double)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"HAVE_ARROW"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"HAY"},{"p":"aima.core.search.informed","c":"HeuristicEvaluationFunction","l":"HeuristicEvaluationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.search.informed","c":"HeuristicEvaluationFunction","l":"hf"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"hideMessageBox()"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"HillClimbingSearch(HeuristicFunction, NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction,aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"HillClimbingSearch(HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"HIRSOVA"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"HITS(Map<String, Page>, int, double)","url":"%3Cinit%3E(java.util.Map,int,double)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"HITS(Map<String, Page>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"hits(String)","url":"hits(java.lang.String)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"hmm"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"HMM(RandomVariable, Matrix, Map<Object, Matrix>, Matrix)","url":"%3Cinit%3E(aima.core.probability.RandomVariable,aima.core.util.math.Matrix,java.util.Map,aima.core.util.math.Matrix)"},{"p":"aima.core.probability.example","c":"HMMExampleFactory","l":"HMMExampleFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackward","l":"HMMForwardBackward(HiddenMarkovModel)","url":"%3Cinit%3E(aima.core.probability.hmm.HiddenMarkovModel)"},{"p":"aima.core.probability.hmm.exact","c":"HMMForwardBackwardConstantSpace","l":"HMMForwardBackwardConstantSpace(HiddenMarkovModel)","url":"%3Cinit%3E(aima.core.probability.hmm.HiddenMarkovModel)"},{"p":"aima.core.probability.proposition","c":"AbstractProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"AssignmentProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"ConjunctiveProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"DisjunctiveProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"EquivalentProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"IntegerSumProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"NotProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"Proposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.proposition","c":"SubsetProposition","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.probability.util","c":"RandVar","l":"holds(Map<RandomVariable, Object>)","url":"holds(java.util.Map)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"howManyExamplesLeft()"},{"p":"aima.core.nlp.ranking","c":"Page","l":"hub"},{"p":"aima.core.environment.wumpusworld","c":"HybridWumpusAgent","l":"HybridWumpusAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"HybridWumpusAgent","l":"HybridWumpusAgent(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.learning.knowledge","c":"Hypothesis","l":"Hypothesis(Sentence)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"IASI"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"IdentifyCandidateMatchingTerm(Term, AtomicSentence)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.Term,aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.util.math","c":"Matrix","l":"identity(int, int)","url":"identity(int,int)"},{"p":"aima.core.search.nondeterministic","c":"IfStateThenPlan","l":"ifStateMatches(Object)","url":"ifStateMatches(java.lang.Object)"},{"p":"aima.core.search.nondeterministic","c":"IfStateThenPlan","l":"IfStateThenPlan(Object, Plan)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.nondeterministic.Plan)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"IMPLICATION"},{"p":"aima.core.logic.propositional.visitors","c":"ImplicationElimination","l":"ImplicationElimination()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"IMPLIES"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"ImprovedBacktrackingStrategy()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"ImprovedBacktrackingStrategy(boolean, boolean, boolean, boolean)","url":"%3Cinit%3E(boolean,boolean,boolean,boolean)"},{"p":"aima.core.search.local","c":"Individual","l":"incDescendants()"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"increment()"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLModelEliminationTracer","l":"increment(int, int)","url":"increment(int,int)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"incrementDepthLimit()"},{"p":"aima.core.util","c":"FrequencyCounter","l":"incrementFor(T)"},{"p":"aima.core.search.framework","c":"Metrics","l":"incrementInt(String)","url":"incrementInt(java.lang.String)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"indexesOfValue(RandomVariable[], int, Map<RandomVariable, Object>)","url":"indexesOfValue(aima.core.probability.RandomVariable[],int,java.util.Map)"},{"p":"aima.core.util.math","c":"Vector","l":"indexHavingMaxValue()"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"indexOf(RandomVariable[], Map<RandomVariable, Object>)","url":"indexOf(aima.core.probability.RandomVariable[],java.util.Map)"},{"p":"aima.core.search.csp","c":"CSP","l":"indexOf(Variable)","url":"indexOf(aima.core.search.csp.Variable)"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"indexPossibleValues(Set<? extends Object>)","url":"indexPossibleValues(java.util.Set)"},{"p":"aima.core.search.local","c":"Individual","l":"Individual(List<A>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"individualLength"},{"p":"aima.core.search.csp","c":"BacktrackingStrategy","l":"inference(Variable, Assignment, CSP)","url":"inference(aima.core.search.csp.Variable,aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"inference(Variable, Assignment, CSP)","url":"inference(aima.core.search.csp.Variable,aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.logic.fol.inference","c":"InferenceResultPrinter","l":"InferenceResultPrinter()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"inferenceStrategy"},{"p":"aima.core.util","c":"Util","l":"information(double[])"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"init()"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"initializeAgenda(Map<Clause, Integer>)","url":"initializeAgenda(java.util.Map)"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"initializeCount(KnowledgeBase)","url":"initializeCount(aima.core.logic.propositional.kb.KnowledgeBase)"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"initializeIndex(Map<Clause, Integer>, Map<PropositionSymbol, Boolean>)","url":"initializeIndex(java.util.Map,java.util.Map)"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"initializeInferred(KnowledgeBase)","url":"initializeInferred(aima.core.logic.propositional.kb.KnowledgeBase)"},{"p":"aima.core.probability.mdp.search","c":"PolicyIteration","l":"initialPolicyVector(MarkovDecisionProcess<S, A>)","url":"initialPolicyVector(aima.core.probability.mdp.MarkovDecisionProcess)"},{"p":"aima.core.logic.fol.inference.otter","c":"LightestClauseHeuristic","l":"initialSOS(Set<Clause>)","url":"initialSOS(java.util.Set)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultLightestClauseHeuristic","l":"initialSOS(Set<Clause>)","url":"initialSOS(java.util.Set)"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"initialState"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"initialState"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"initMap(ExtendableMap)","url":"initMap(aima.core.environment.map.ExtendableMap)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"initMap(ExtendableMap)","url":"initMap(aima.core.environment.map.ExtendableMap)"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"initMessageBox()"},{"p":"aima.core.probability.bayes.approx","c":"ParticleFiltering","l":"initPersistent(int, DynamicBayesianNetwork)","url":"initPersistent(int,aima.core.probability.bayes.DynamicBayesianNetwork)"},{"p":"aima.core.probability.proposition","c":"IntegerSumProposition","l":"IntegerSumProposition(String, FiniteIntegerDomain, RandomVariable...)","url":"%3Cinit%3E(java.lang.String,aima.core.probability.domain.FiniteIntegerDomain,aima.core.probability.RandomVariable...)"},{"p":"aima.core.agent.impl.aprog","c":"SimpleReflexAgentProgram","l":"interpretInput(Percept)","url":"interpretInput(aima.core.agent.Percept)"},{"p":"aima.gui.swing.framework","c":"SimulationThread","l":"interrupt()"},{"p":"aima.core.util","c":"SetOps","l":"intersection(Set<T>, Set<T>)","url":"intersection(java.util.Set,java.util.Set)"},{"p":"aima.core.util.math","c":"Interval","l":"Interval()","url":"%3Cinit%3E()"},{"p":"aima.core.util.math","c":"Interval","l":"Interval(Comparable<C>, boolean, Comparable<C>, boolean)","url":"%3Cinit%3E(java.lang.Comparable,boolean,java.lang.Comparable,boolean)"},{"p":"aima.core.util.math","c":"Interval","l":"Interval(Comparable<C>, Comparable<C>)","url":"%3Cinit%3E(java.lang.Comparable,java.lang.Comparable)"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"intValue()"},{"p":"aima.core.util.math","c":"Matrix","l":"inverse()"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"inverse()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"invert()"},{"p":"aima.core.learning.neural","c":"IrisDataSetNumerizer","l":"IrisDataSetNumerizer()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"IrisNNDataSet","l":"IrisNNDataSet()","url":"%3Cinit%3E()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"isAbsoluteParallel(Vector2D)","url":"isAbsoluteParallel(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.search.framework","c":"SolutionChecker","l":"isAcceptableSolution(List<Action>, Object)","url":"isAcceptableSolution(java.util.List,java.lang.Object)"},{"p":"aima.core.agent","c":"Agent","l":"isAlive()"},{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"isAlive()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"isAlwaysFalse()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isAlwaysFalse()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isAlwaysFalseSymbol(String)","url":"isAlwaysFalseSymbol(java.lang.String)"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"isAlwaysTrue()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isAlwaysTrue()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isAlwaysTrueSymbol(String)","url":"isAlwaysTrueSymbol(java.lang.String)"},{"p":"aima.core.logic.fol","c":"Connectors","l":"isAND(String)","url":"isAND(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isAndSentence()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"isBICOND(String)","url":"isBICOND(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isBiconditionalSentence()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isBinarySentence()"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"isBlocked(XYLocation)","url":"isBlocked(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"isBreeze()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"isBump()"},{"p":"aima.core.util","c":"CancelableThread","l":"isCanceled()"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"isClosed()"},{"p":"aima.core.search.csp","c":"Assignment","l":"isComplete(List<Variable>)","url":"isComplete(java.util.List)"},{"p":"aima.core.search.csp","c":"Assignment","l":"isComplete(Variable[])","url":"isComplete(aima.core.search.csp.Variable[])"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"FOLNode","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"isCompound()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"isCompound()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"isConnective(String)","url":"isConnective(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"isConnectiveIdentifierPart(char)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"isConnectiveIdentifierStart(char)"},{"p":"aima.core.search.csp","c":"Assignment","l":"isConsistent(List<Constraint>)","url":"isConsistent(java.util.List)"},{"p":"aima.core.learning.neural","c":"NNExample","l":"isCorrect(Vector)","url":"isCorrect(aima.core.util.math.Vector)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isDefiniteClause()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isDefiniteClause()"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"isDiscardTautologies()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"isDone"},{"p":"aima.core.agent","c":"Environment","l":"isDone()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"isDone()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"isDone()"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"isDone()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"isEmpty()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isEmpty()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isEmpty()"},{"p":"aima.core.search.csp","c":"Domain","l":"isEmpty()"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"isEmpty()"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"isEmpty()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"isEmpty(int, int)","url":"isEmpty(int,int)"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"isEmptyDomainFound()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"isEndOfInput(Token)","url":"isEndOfInput(aima.core.logic.common.Token)"},{"p":"aima.core.logic.propositional.inference","c":"DPLL","l":"isEntailed(KnowledgeBase, Sentence)","url":"isEntailed(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"isEntailed(KnowledgeBase, Sentence)","url":"isEntailed(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"isEntailed(KnowledgeBase, Sentence)","url":"isEntailed(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol","c":"Quantifiers","l":"isEXISTS(String)","url":"isEXISTS(java.lang.String)"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"isFailure(List<Action>)","url":"isFailure(java.util.List)"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isFalse()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"isFalse(PropositionSymbol)","url":"isFalse(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"isFalse(Sentence)","url":"isFalse(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.probability.domain","c":"AbstractContinuousDomain","l":"isFinite()"},{"p":"aima.core.probability.domain","c":"AbstractDiscreteDomain","l":"isFinite()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"isFinite()"},{"p":"aima.core.probability.domain","c":"Domain","l":"isFinite()"},{"p":"aima.core.logic.fol","c":"Quantifiers","l":"isFORALL(String)","url":"isFORALL(java.lang.String)"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"isFrontierEmpty()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"isFrontierEmpty()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"isFrontierEmpty()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"isFrontierEmpty()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"isFrontierEmpty()"},{"p":"aima.core.search.framework.qsearch","c":"TreeSearch","l":"isFrontierEmpty()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"isGlitter()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isGoalClause()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil.NQueensGenAlgoGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.environment.nqueens","c":"NQueensGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"DefaultGoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"GoalTest","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"isGoalState(Object)","url":"isGoalState(java.lang.Object)"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"isGoalState(Problem, Node)","url":"isGoalState(aima.core.search.framework.problem.Problem,aima.core.search.framework.Node)"},{"p":"aima.core.robotics.impl.map","c":"IPoseFactory","l":"isHeadingValid(P)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isHornClause()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isHornClause()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isImmutable()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isImplicationDefiniteClause()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isImplicationDefiniteClause()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isImplicationSentence()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"isIMPLIES(String)","url":"isIMPLIES(java.lang.String)"},{"p":"aima.core.probability.domain","c":"AbstractContinuousDomain","l":"isInfinite()"},{"p":"aima.core.probability.domain","c":"AbstractDiscreteDomain","l":"isInfinite()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"isInfinite()"},{"p":"aima.core.probability.domain","c":"Domain","l":"isInfinite()"},{"p":"aima.core.util.math","c":"Interval","l":"isInInterval(C)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"isInside(Point2D)","url":"isInside(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"isInsideBorder(Point2D)","url":"isInsideBorder(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"isLCVHeuristicEnabled"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"isLoaded()"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"isLocation(String)","url":"isLocation(java.lang.String)"},{"p":"aima.core.util.math","c":"Interval","l":"isLowerExclusive()"},{"p":"aima.core.util.math","c":"Interval","l":"isLowerInclusive()"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"isMatch()"},{"p":"aima.core.learning.knowledge","c":"FOLDataSetDomain","l":"isMultivalued(String)","url":"isMultivalued(java.lang.String)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"isNegativeLiteral()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"isNegativeLiteral()"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"isNonsingular()"},{"p":"aima.core.agent","c":"Action","l":"isNoOp()"},{"p":"aima.core.agent.impl","c":"DynamicAction","l":"isNoOp()"},{"p":"aima.core.agent.impl","c":"NoOpAction","l":"isNoOp()"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"isNoOp()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"isNOT(String)","url":"isNOT(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isNotSentence()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"isOR(String)","url":"isOR(java.lang.String)"},{"p":"aima.core.probability.domain","c":"AbstractContinuousDomain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"AbstractDiscreteDomain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"Domain","l":"isOrdered()"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"isOrdered()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isOrSentence()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"isParallel(Vector2D)","url":"isParallel(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.logic.fol.inference","c":"InferenceResult","l":"isPartialResultDueToTimeout()"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"isPointInsideBorderShape(Point2D)","url":"isPointInsideBorderShape(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"isPointInsideShape(Point2D)","url":"isPointInsideShape(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.robotics","c":"IMclMap","l":"isPoseValid(P)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"isPoseValid(P)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"isPositiveLiteral()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"isPositiveLiteral()"},{"p":"aima.core.logic.fol.inference","c":"InferenceResult","l":"isPossiblyFalse()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"isPrepared()"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"isPrepared()"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"isPrepared()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isPropositionSymbol()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isPropositionSymbol(String)","url":"isPropositionSymbol(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isPropositionSymbolIdentifierPart(char)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"isPropositionSymbolIdentifierStart(char)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"isRenaming(Literal, List<Literal>)","url":"isRenaming(aima.core.logic.fol.kb.data.Literal,java.util.List)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"isRenaming(Literal)","url":"isRenaming(aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.probability.bayes","c":"Node","l":"isRoot()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"isRoot()"},{"p":"aima.core.search.framework","c":"Node","l":"isRootNode()"},{"p":"aima.core.search.csp","c":"Constraint","l":"isSatisfiedWith(Assignment)","url":"isSatisfiedWith(aima.core.search.csp.Assignment)"},{"p":"aima.core.search.csp.examples","c":"DiffNotEqualConstraint","l":"isSatisfiedWith(Assignment)","url":"isSatisfiedWith(aima.core.search.csp.Assignment)"},{"p":"aima.core.search.csp.examples","c":"NotEqualConstraint","l":"isSatisfiedWith(Assignment)","url":"isSatisfiedWith(aima.core.search.csp.Assignment)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"isScream()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourAIPlayer","l":"isSignificantlyBetter(double, double)","url":"isSignificantlyBetter(double,double)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"isSignificantlyBetter(double, double)","url":"isSignificantlyBetter(double,double)"},{"p":"aima.core.search.csp","c":"Assignment","l":"isSolution(CSP)","url":"isSolution(aima.core.search.csp.CSP)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"isSquareUnderAttack(XYLocation)","url":"isSquareUnderAttack(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isStandardizedApartCheckRequired()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"isStench()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isTautology()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isTautology()"},{"p":"aima.core.environment.connectfour","c":"ConnectFourGame","l":"isTerminal(ConnectFourState)","url":"isTerminal(aima.core.environment.connectfour.ConnectFourState)"},{"p":"aima.core.search.adversarial","c":"Game","l":"isTerminal(STATE)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"isTerminal(String)","url":"isTerminal(java.lang.String)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"isTerminal(TicTacToeState)","url":"isTerminal(aima.core.environment.tictactoe.TicTacToeState)"},{"p":"aima.core.logic.fol.inference","c":"InferenceResult","l":"isTrue()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"isTrue(PropositionSymbol)","url":"isTrue(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"isTrue(Sentence)","url":"isTrue(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"isUnarySentence()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"isUnitClause()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"isUnitClause()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"isUnknown(Sentence)","url":"isUnknown(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference","c":"InferenceResult","l":"isUnknownDueToTimeout()"},{"p":"aima.core.util.math","c":"Interval","l":"isUpperExclusive()"},{"p":"aima.core.util.math","c":"Interval","l":"isUpperInclusive()"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"isUseParamodulation()"},{"p":"aima.core.probability","c":"ProbabilityModel","l":"isValid()"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"isValid()"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"isValid()"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"isValid(List<String>)","url":"isValid(java.util.List)"},{"p":"aima.core.learning.framework","c":"AttributeSpecification","l":"isValid(String)","url":"isValid(java.lang.String)"},{"p":"aima.core.learning.framework","c":"NumericAttributeSpecification","l":"isValid(String)","url":"isValid(java.lang.String)"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"isValid(String)","url":"isValid(java.lang.String)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"isValidMatch(Term, Set<Variable>, Term, Map<Variable, Term>)","url":"isValidMatch(aima.core.logic.fol.parsing.ast.Term,java.util.Set,aima.core.logic.fol.parsing.ast.Term,java.util.Map)"},{"p":"aima.core.logic.fol.inference","c":"Demodulation","l":"isValidMatch(Term, Set<Variable>, Term, Map<Variable, Term>)","url":"isValidMatch(aima.core.logic.fol.parsing.ast.Term,java.util.Set,aima.core.logic.fol.parsing.ast.Term,java.util.Map)"},{"p":"aima.core.logic.fol.inference","c":"Paramodulation","l":"isValidMatch(Term, Set<Variable>, Term, Map<Variable, Term>)","url":"isValidMatch(aima.core.logic.fol.parsing.ast.Term,java.util.Set,aima.core.logic.fol.parsing.ast.Term,java.util.Map)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"isVariable(String)","url":"isVariable(java.lang.String)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"isVertexLabel(VertexLabelType)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"isWinMoveFor(int, int)","url":"isWinMoveFor(int,int)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"isWinPositionFor(int, int, int)","url":"isWinPositionFor(int,int,int)"},{"p":"aima.core.probability","c":"CategoricalDistribution.Iterator","l":"iterate(Map<RandomVariable, Object>, double)","url":"iterate(java.util.Map,double)"},{"p":"aima.core.probability","c":"Factor.Iterator","l":"iterate(Map<RandomVariable, Object>, double)","url":"iterate(java.util.Map,double)"},{"p":"aima.core.probability.util","c":"ProbabilityTable.Iterator","l":"iterate(Map<RandomVariable, Object>, double)","url":"iterate(java.util.Map,double)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"iterateOver(CategoricalDistribution.Iterator, AssignmentProposition...)","url":"iterateOver(aima.core.probability.CategoricalDistribution.Iterator,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOver(CategoricalDistribution.Iterator, AssignmentProposition...)","url":"iterateOver(aima.core.probability.CategoricalDistribution.Iterator,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"iterateOver(CategoricalDistribution.Iterator)","url":"iterateOver(aima.core.probability.CategoricalDistribution.Iterator)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOver(CategoricalDistribution.Iterator)","url":"iterateOver(aima.core.probability.CategoricalDistribution.Iterator)"},{"p":"aima.core.probability","c":"Factor","l":"iterateOver(Factor.Iterator, AssignmentProposition...)","url":"iterateOver(aima.core.probability.Factor.Iterator,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOver(Factor.Iterator, AssignmentProposition...)","url":"iterateOver(aima.core.probability.Factor.Iterator,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability","c":"Factor","l":"iterateOver(Factor.Iterator)","url":"iterateOver(aima.core.probability.Factor.Iterator)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOver(Factor.Iterator)","url":"iterateOver(aima.core.probability.Factor.Iterator)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOverTable(ProbabilityTable.Iterator, AssignmentProposition...)","url":"iterateOverTable(aima.core.probability.util.ProbabilityTable.Iterator,aima.core.probability.proposition.AssignmentProposition...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"iterateOverTable(ProbabilityTable.Iterator)","url":"iterateOverTable(aima.core.probability.util.ProbabilityTable.Iterator)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"ITERATIONS"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"IterativeDeepeningAlphaBetaSearch(Game<STATE, ACTION, PLAYER>, double, double, int)","url":"%3Cinit%3E(aima.core.search.adversarial.Game,double,double,int)"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"IterativeDeepeningSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"IterativeDeepeningSearch(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"iterator()"},{"p":"aima.core.search.csp","c":"Domain","l":"iterator()"},{"p":"aima.core.util","c":"JavaRandomizer","l":"JavaRandomizer()","url":"%3Cinit%3E()"},{"p":"aima.core.util","c":"JavaRandomizer","l":"JavaRandomizer(Random)","url":"%3Cinit%3E(java.util.Random)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"JOHN_CALLS_RV"},{"p":"aima.core.probability","c":"FiniteProbabilityModel","l":"jointDistribution(Proposition...)","url":"jointDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"jointDistribution(Proposition...)","url":"jointDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"jointDistribution(Proposition...)","url":"jointDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"KALGOORLIE"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"KATHERINE"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"KB"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"KBAgent(KnowledgeBase)","url":"%3Cinit%3E(aima.core.logic.propositional.kb.KnowledgeBase)"},{"p":"aima.core.search.framework","c":"Metrics","l":"keySet()"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"kingsDomain()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"KnowledgeBase()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"knowsDomain()"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"LabeledGraph()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"LAKES_ENTRANCE"},{"p":"aima.core.learning.neural","c":"Layer","l":"Layer(int, int, double, double, ActivationFunction)","url":"%3Cinit%3E(int,int,double,double,aima.core.learning.neural.ActivationFunction)"},{"p":"aima.core.learning.neural","c":"Layer","l":"Layer(Matrix, Vector, ActivationFunction)","url":"%3Cinit%3E(aima.core.util.math.Matrix,aima.core.util.math.Vector,aima.core.learning.neural.ActivationFunction)"},{"p":"aima.core.learning.neural","c":"LayerSensitivity","l":"LayerSensitivity(Layer)","url":"%3Cinit%3E(aima.core.learning.neural.Layer)"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"Left"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"LEFT"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"LEFT"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"left()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextFreeGrammar","l":"leftDerivesRight(ArrayList<String>, ArrayList<String>)","url":"leftDerivesRight(java.util.ArrayList,java.util.ArrayList)"},{"p":"aima.core.search.local","c":"Individual","l":"length()"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"length()"},{"p":"aima.core.nlp.parsing","c":"CYK","l":"length(List<String>)","url":"length(java.util.List)"},{"p":"aima.core.logic.common","c":"Lexer","l":"Lexer()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.common","c":"LexerException","l":"LexerException(String, int, Throwable)","url":"%3Cinit%3E(java.lang.String,int,java.lang.Throwable)"},{"p":"aima.core.logic.common","c":"LexerException","l":"LexerException(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"aima.core.nlp.parsing","c":"Lexicon","l":"Lexicon()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.data.lexicons","c":"LexiconExamples","l":"LexiconExamples()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing","c":"LexWord","l":"LexWord(String, Float)","url":"%3Cinit%3E(java.lang.String,java.lang.Float)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"lhs"},{"p":"aima.core.probability.bayes.approx","c":"LikelihoodWeighting","l":"LikelihoodWeighting()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"LikelihoodWeighting","l":"LikelihoodWeighting(Randomizer)","url":"%3Cinit%3E(aima.core.util.Randomizer)"},{"p":"aima.core.probability.bayes.approx","c":"LikelihoodWeighting","l":"likelihoodWeighting(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"likelihoodWeighting(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"Line2D(double, double, double, double)","url":"%3Cinit%3E(double,double,double,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"Line2D(Point2D, Point2D)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"Line2D(Point2D, Vector2D)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"lineThroughBoard()"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"ListTableModel(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"Literal(AtomicSentence, boolean)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.AtomicSentence,boolean)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"Literal(AtomicSentence)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"Literal(PropositionSymbol, boolean)","url":"%3Cinit%3E(aima.core.logic.propositional.parsing.ast.PropositionSymbol,boolean)"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"Literal(PropositionSymbol)","url":"%3Cinit%3E(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"loadDefaultPages()"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"loadFileText(File, File)","url":"loadFileText(java.io.File,java.io.File)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"loadMap(InputStream, InputStream)","url":"loadMap(java.io.InputStream,java.io.InputStream)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"loadMap(InputStream, String)","url":"loadMap(java.io.InputStream,java.lang.String)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"loadNextTokenFromInput()"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"loadPages(String)","url":"loadPages(java.lang.String)"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"loadTestPages()"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"localize(Set<P>, M, R[])","url":"localize(java.util.Set,M,R[])"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"LocalVacuumEnvironmentPercept(String, VacuumEnvironment.LocationState)","url":"%3Cinit%3E(java.lang.String,aima.core.environment.vacuum.VacuumEnvironment.LocationState)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"LOCATION"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"LOCATION_A"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"LOCATION_B"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"locationAt(XYLocation.Direction)","url":"locationAt(aima.core.util.datastructure.XYLocation.Direction)"},{"p":"aima.gui.swing.framework","c":"MessageLogger","l":"log(String)","url":"log(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"log(String)","url":"log(java.lang.String)"},{"p":"aima.core.util","c":"Util","l":"log2(double)"},{"p":"aima.core.learning.neural","c":"LogSigActivationFunction","l":"LogSigActivationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"LONGREACH"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"longValue()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"lookAhead"},{"p":"aima.core.logic.common","c":"Lexer","l":"lookAhead(int)"},{"p":"aima.core.logic.common","c":"Parser","l":"lookAhead(int)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"lookAhead(int)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"lookAheadBuffer"},{"p":"aima.core.logic.common","c":"Lexer","l":"lookAheadBufferSize"},{"p":"aima.core.logic.common","c":"Parser","l":"lookAheadBufferSize"},{"p":"aima.core.probability.mdp.impl","c":"LookupPolicy","l":"LookupPolicy(Map<S, A>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"lovesAnimalDomain()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"LOWER_LIMIT_WEIGHTS"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"LPAREN"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"LRTAStarAgent(OnlineSearchProblem, PerceptToStateFunction, HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.online.OnlineSearchProblem,aima.core.search.framework.PerceptToStateFunction,aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"LSQRBRACKET"},{"p":"aima.core.util.math","c":"Matrix","l":"lu()"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"LUDecomposition(Matrix)","url":"%3Cinit%3E(aima.core.util.math.Matrix)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"LUGOJ"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"MACKAY"},{"p":"aima.core.nlp.parsing","c":"RunCYK","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"aima.core.nlp.ranking","c":"RunHITS","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"aima.demo.search","c":"FifteenPuzzleDemo","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"aima.core.learning.learners","c":"MajorityLearner","l":"MajorityLearner()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"makeActionQuery(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"makeActionSentence(Action, int)","url":"makeActionSentence(aima.core.agent.Action,int)"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"makeActionSentence(Action, int)","url":"makeActionSentence(aima.core.agent.Action,int)"},{"p":"aima.core.search.csp","c":"TreeCSPSolver","l":"makeArcConsistent(Variable, Variable, Constraint, CSP, DomainRestoreInfo)","url":"makeArcConsistent(aima.core.search.csp.Variable,aima.core.search.csp.Variable,aima.core.search.csp.Constraint,aima.core.search.csp.CSP,aima.core.search.csp.DomainRestoreInfo)"},{"p":"aima.core.search.adversarial","c":"AdversarialSearch","l":"makeDecision(STATE)"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"makeDecision(STATE)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"makeDecision(STATE)"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"makeDecision(STATE)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"makePerceptSentence(AgentPercept, int)","url":"makePerceptSentence(aima.core.environment.wumpusworld.AgentPercept,int)"},{"p":"aima.core.logic.propositional.agent","c":"KBAgent","l":"makePerceptSentence(Percept, int)","url":"makePerceptSentence(aima.core.agent.Percept,int)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"makePerimeter()"},{"p":"aima.core.util","c":"DisjointSets","l":"makeSet(E)"},{"p":"aima.core.environment.eightpuzzle","c":"ManhattanHeuristicFunction","l":"ManhattanHeuristicFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"ManhattanHeuristicFunction","l":"ManhattanHeuristicFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"ManhattanHeuristicFunction","l":"ManhattanHeuristicFunction(Set<Room>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"map"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"map"},{"p":"aima.core.environment.map","c":"MapAgent","l":"MapAgent(Map, SearchForActions, List<String>, EnvironmentViewNotifier, HeuristicFunctionFactory)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.util.List,aima.core.agent.EnvironmentViewNotifier,aima.core.search.framework.evalfunc.HeuristicFunctionFactory)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"MapAgent(Map, SearchForActions, List<String>, EnvironmentViewNotifier)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.util.List,aima.core.agent.EnvironmentViewNotifier)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"MapAgent(Map, SearchForActions, List<String>)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.util.List)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"MapAgent(Map, SearchForActions, String, EnvironmentViewNotifier)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.lang.String,aima.core.agent.EnvironmentViewNotifier)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"MapAgent(Map, SearchForActions, String)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.lang.String)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"MapCSP()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"MapEnvironment","l":"MapEnvironment(Map)","url":"%3Cinit%3E(aima.core.environment.map.Map)"},{"p":"aima.core.environment.map","c":"MapEnvironmentState","l":"MapEnvironmentState()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"MapFunctionFactory","l":"MapFunctionFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"MapStepCostFunction","l":"MapStepCostFunction(Map)","url":"%3Cinit%3E(aima.core.environment.map.Map)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"marginal(RandomVariable...)","url":"marginal(aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"marginal(RandomVariable...)","url":"marginal(aima.core.probability.RandomVariable...)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"mark(int, int)","url":"mark(int,int)"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"mark(XYLocation)","url":"mark(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"MARY_CALLS_RV"},{"p":"aima.core.logic.common","c":"Parser","l":"match(String)","url":"match(java.lang.String)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"match(String)","url":"match(java.lang.String)"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"matchedExamples(DataSet)","url":"matchedExamples(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"matches(Example)","url":"matches(aima.core.learning.framework.Example)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"matches(String, String)","url":"matches(java.lang.String,java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"matches(VacuumEnvironmentState, Agent)","url":"matches(aima.core.environment.vacuum.VacuumEnvironmentState,aima.core.agent.Agent)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"matchingDataSet(String, String)","url":"matchingDataSet(java.lang.String,java.lang.String)"},{"p":"aima.core.util.math","c":"Matrix","l":"Matrix(double[], int)","url":"%3Cinit%3E(double[],int)"},{"p":"aima.core.util.math","c":"Matrix","l":"Matrix(double[][], int, int)","url":"%3Cinit%3E(double[][],int,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"Matrix(double[][])","url":"%3Cinit%3E(double[][])"},{"p":"aima.core.util.math","c":"Matrix","l":"Matrix(int, int, double)","url":"%3Cinit%3E(int,int,double)"},{"p":"aima.core.util.math","c":"Matrix","l":"Matrix(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.util","c":"Util","l":"max(int, int, int)","url":"max(int,int,int)"},{"p":"aima.core.util","c":"Util","l":"max(int, int)","url":"max(int,int)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"maxValue(STATE, PLAYER, double, double, int)","url":"maxValue(STATE,PLAYER,double,double,int)"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"maxValue(STATE, PLAYER, double, double)","url":"maxValue(STATE,PLAYER,double,double)"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"maxValue(STATE, PLAYER)","url":"maxValue(STATE,PLAYER)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"mbDistribution(Node, Map<RandomVariable, Object>)","url":"mbDistribution(aima.core.probability.bayes.Node,java.util.Map)"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"mbRandomSample(Node, Map<RandomVariable, Object>, Randomizer)","url":"mbRandomSample(aima.core.probability.bayes.Node,java.util.Map,aima.core.util.Randomizer)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"MclCartesianPlot2D(IGroupParser, IGroupParser, IPoseFactory<P, M>, IRangeReadingFactory<R>)","url":"%3Cinit%3E(aima.core.util.math.geom.IGroupParser,aima.core.util.math.geom.IGroupParser,aima.core.robotics.impl.map.IPoseFactory,aima.core.robotics.impl.map.IRangeReadingFactory)"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"MDP(Set<S>, S, ActionsFunction<S, A>, TransitionProbabilityFunction<S, A>, RewardFunction<S>)","url":"%3Cinit%3E(java.util.Set,S,aima.core.probability.mdp.ActionsFunction,aima.core.probability.mdp.TransitionProbabilityFunction,aima.core.probability.mdp.RewardFunction)"},{"p":"aima.core.probability.example","c":"MDPFactory","l":"MDPFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"MEHADIA"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"MELBOURNE"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"MENINGITIS_RV"},{"p":"aima.core.learning.inductive","c":"DecisionList","l":"mergeWith(DecisionList)","url":"mergeWith(aima.core.learning.inductive.DecisionList)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"MessageLoggerPanel()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"METRIC_MAX_QUEUE_SIZE"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"METRIC_MAX_RECURSIVE_DEPTH"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"METRIC_NODE_VALUE"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"METRIC_NODE_VALUE"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"METRIC_NODES_EXPANDED"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"METRIC_PATH_COST"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"METRIC_PATH_COST"},{"p":"aima.core.search.uninformed","c":"DepthLimitedSearch","l":"METRIC_PATH_COST"},{"p":"aima.core.search.uninformed","c":"IterativeDeepeningSearch","l":"METRIC_PATH_COST"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"METRIC_QUEUE_SIZE"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"METRIC_TEMPERATURE"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"metrics"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"metrics"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"METRICS_MAX_DEPTH"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"METRICS_NODES_EXPANDED"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"METRICS_NODES_EXPANDED"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"METRICS_NODES_EXPANDED"},{"p":"aima.core.search.framework","c":"Metrics","l":"Metrics()","url":"%3Cinit%3E()"},{"p":"aima.core.util","c":"Util","l":"min(int, int, int)","url":"min(int,int,int)"},{"p":"aima.core.util","c":"Util","l":"min(int, int)","url":"min(int,int)"},{"p":"aima.core.search.csp","c":"MinConflictsStrategy","l":"MinConflictsStrategy(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"MinimaxSearch(Game<STATE, ACTION, PLAYER>)","url":"%3Cinit%3E(aima.core.search.adversarial.Game)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"minus(List<PropositionSymbol>, PropositionSymbol)","url":"minus(java.util.List,aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"minus(List<PropositionSymbol>, PropositionSymbol)","url":"minus(java.util.List,aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.util.math","c":"Matrix","l":"minus(Matrix)","url":"minus(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Vector","l":"minus(Vector)","url":"minus(aima.core.util.math.Vector)"},{"p":"aima.core.util.math","c":"Matrix","l":"minusEquals(Matrix)","url":"minusEquals(aima.core.util.math.Matrix)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"minValue(STATE, PLAYER, double, double, int)","url":"minValue(STATE,PLAYER,double,double,int)"},{"p":"aima.core.search.adversarial","c":"AlphaBetaSearch","l":"minValue(STATE, PLAYER, double, double)","url":"minValue(STATE,PLAYER,double,double)"},{"p":"aima.core.search.adversarial","c":"MinimaxSearch","l":"minValue(STATE, PLAYER)","url":"minValue(STATE,PLAYER)"},{"p":"aima.core.environment.eightpuzzle","c":"MisplacedTilleHeuristicFunction","l":"MisplacedTilleHeuristicFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.fifteenpuzzle","c":"MisplacedTilleHeuristicFunction","l":"MisplacedTilleHeuristicFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"MixedRadixNumber(int[], int[])","url":"%3Cinit%3E(int[],int[])"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"MixedRadixNumber(long, int[])","url":"%3Cinit%3E(long,int[])"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"MixedRadixNumber(long, List<Integer>)","url":"%3Cinit%3E(long,java.util.List)"},{"p":"aima.core.util","c":"MockRandomizer","l":"MockRandomizer(double[])","url":"%3Cinit%3E(double[])"},{"p":"aima.core.util","c":"Util","l":"mode(List<T>)","url":"mode(java.util.List)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"Model()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"Model(Map<PropositionSymbol, Boolean>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"ModelBasedReflexAgentProgram()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"ModelBasedReflexVacuumAgent","l":"ModelBasedReflexVacuumAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.mdp.impl","c":"ModifiedPolicyEvaluation","l":"ModifiedPolicyEvaluation(int, double)","url":"%3Cinit%3E(int,double)"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"MonteCarloLocalization(IMclMap<P, V, M, R>, Randomizer)","url":"%3Cinit%3E(aima.core.robotics.IMclMap,aima.core.util.Randomizer)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"MOUNT_GAMBIER"},{"p":"aima.gui.swing.framework","c":"PopupShower","l":"mousePressed(MouseEvent)","url":"mousePressed(java.awt.event.MouseEvent)"},{"p":"aima.gui.swing.framework","c":"PopupShower","l":"mouseReleased(MouseEvent)","url":"mouseReleased(java.awt.event.MouseEvent)"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"MOVE_QUEEN"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"moveGapDown()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"moveGapDown()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"moveGapLeft()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"moveGapLeft()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"moveGapRight()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"moveGapRight()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"moveGapUp()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"moveGapUp()"},{"p":"aima.core.logic.propositional.visitors","c":"MoveNotInwards","l":"MoveNotInwards()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.visitors","c":"MoveNotInwards","l":"moveNotsInward(Sentence)","url":"moveNotsInward(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"moveObject(EnvironmentObject, XYLocation.Direction)","url":"moveObject(aima.core.agent.EnvironmentObject,aima.core.util.datastructure.XYLocation.Direction)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"moveObjectToAbsoluteLocation(EnvironmentObject, XYLocation)","url":"moveObjectToAbsoluteLocation(aima.core.agent.EnvironmentObject,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"moveQueen(XYLocation, XYLocation)","url":"moveQueen(aima.core.util.datastructure.XYLocation,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"moveQueenTo(XYLocation)","url":"moveQueenTo(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.map","c":"MoveToAction","l":"MoveToAction(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Selection","l":"MRV"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Selection","l":"MRV_DEG"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"MT_ISA"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"multiply(double)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"multiply(Point2D)","url":"multiply(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"multiply(TransformMatrix2D)","url":"multiply(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"multiplyBy(CategoricalDistribution)","url":"multiplyBy(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"multiplyBy(CategoricalDistribution)","url":"multiplyBy(aima.core.probability.CategoricalDistribution)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"multiplyByPOS(CategoricalDistribution, RandomVariable...)","url":"multiplyByPOS(aima.core.probability.CategoricalDistribution,aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"multiplyByPOS(CategoricalDistribution, RandomVariable...)","url":"multiplyByPOS(aima.core.probability.CategoricalDistribution,aima.core.probability.RandomVariable...)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"mutate(Individual<A>)","url":"mutate(aima.core.search.local.Individual)"},{"p":"aima.core.search.local","c":"GeneticAlgorithmForNumbers","l":"mutate(Individual<Double>)","url":"mutate(aima.core.search.local.Individual)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"mutationProbability"},{"p":"aima.core.learning.framework","c":"Attribute","l":"name()"},{"p":"aima.core.learning.framework","c":"NumericAttribute","l":"name()"},{"p":"aima.core.learning.framework","c":"StringAttribute","l":"name()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"nds"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"NEAMT"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"NEWCASTLE"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"newConjunction(List<? extends Sentence>)","url":"newConjunction(java.util.List)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"newConjunction(Sentence...)","url":"newConjunction(aima.core.logic.propositional.parsing.ast.Sentence...)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"newDisjunction(List<? extends Sentence>)","url":"newDisjunction(java.util.List)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"newDisjunction(Sentence...)","url":"newDisjunction(aima.core.logic.propositional.parsing.ast.Sentence...)"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"newInstance(AtomicSentence)","url":"newInstance(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.fol.kb.data","c":"ReducedLiteral","l":"newInstance(AtomicSentence)","url":"newInstance(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.logic.fol","c":"StandardizeApartIndexicalFactory","l":"newStandardizeApartIndexical(Character)","url":"newStandardizeApartIndexical(java.lang.Character)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"newSymbol(String, int, int, int)","url":"newSymbol(java.lang.String,int,int,int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"newSymbol(String, int, int)","url":"newSymbol(java.lang.String,int,int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"newSymbol(String, int)","url":"newSymbol(java.lang.String,int)"},{"p":"aima.core.util","c":"ArrayIterator","l":"next()"},{"p":"aima.core.util","c":"JavaRandomizer","l":"nextDouble()"},{"p":"aima.core.util","c":"MockRandomizer","l":"nextDouble()"},{"p":"aima.core.util","c":"Randomizer","l":"nextDouble()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"nextGeneration(List<Individual<A>>, FitnessFunction<A>)","url":"nextGeneration(java.util.List,aima.core.search.local.FitnessFunction)"},{"p":"aima.core.logic.common","c":"Lexer","l":"nextToken()"},{"p":"aima.core.logic.fol.parsing","c":"FOLLexer","l":"nextToken()"},{"p":"aima.core.logic.propositional.parsing","c":"PLLexer","l":"nextToken()"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"NNConfig()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"NNConfig(Hashtable<String, Object>)","url":"%3Cinit%3E(java.util.Hashtable)"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"NNDataSet()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"NNExample","l":"NNExample(List<Double>, List<Double>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"aima.core.util","c":"Util","l":"NO"},{"p":"aima.core.agent.impl","c":"NoOpAction","l":"NO_OP"},{"p":"aima.core.search.framework","c":"Node","l":"Node(Object, Node, Action, double)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.framework.Node,aima.core.agent.Action,double)"},{"p":"aima.core.search.framework","c":"Node","l":"Node(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"nodeExpander"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"NodeExpander()","url":"%3Cinit%3E()"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"NondeterministicProblem(Object, ActionsFunction, ResultsFunction, GoalTest, StepCostFunction)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.framework.problem.ActionsFunction,aima.core.search.nondeterministic.ResultsFunction,aima.core.search.framework.problem.GoalTest,aima.core.search.framework.problem.StepCostFunction)"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"NondeterministicProblem(Object, ActionsFunction, ResultsFunction, GoalTest)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.framework.problem.ActionsFunction,aima.core.search.nondeterministic.ResultsFunction,aima.core.search.framework.problem.GoalTest)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"NondeterministicVacuumAgent(PerceptToStateFunction)","url":"%3Cinit%3E(aima.core.search.framework.PerceptToStateFunction)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumEnvironment","l":"NondeterministicVacuumEnvironment()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumEnvironment","l":"NondeterministicVacuumEnvironment(VacuumEnvironment.LocationState, VacuumEnvironment.LocationState)","url":"%3Cinit%3E(aima.core.environment.vacuum.VacuumEnvironment.LocationState,aima.core.environment.vacuum.VacuumEnvironment.LocationState)"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"None"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Inference","l":"NONE"},{"p":"aima.core.util.math","c":"Matrix","l":"norm1()"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"normalize()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"normalize()"},{"p":"aima.core.util","c":"Util","l":"normalize(double[])"},{"p":"aima.core.util","c":"Util","l":"normalize(List<Double>)","url":"normalize(java.util.List)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"normalize(List<Page>)","url":"normalize(java.util.List)"},{"p":"aima.core.probability.hmm","c":"HiddenMarkovModel","l":"normalize(Matrix)","url":"normalize(aima.core.util.math.Matrix)"},{"p":"aima.core.probability.hmm.impl","c":"HMM","l":"normalize(Matrix)","url":"normalize(aima.core.util.math.Matrix)"},{"p":"aima.core.util","c":"Util","l":"normalizeFromMeanAndStdev(List<Double>, double, double)","url":"normalizeFromMeanAndStdev(java.util.List,double,double)"},{"p":"aima.core.util.math","c":"Matrix","l":"normInf()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"NORSEMAN"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"North"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"north()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"NOT"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"NOT"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"NOTCondition","l":"NOTCondition(Condition)","url":"%3Cinit%3E(aima.core.agent.impl.aprog.simplerule.Condition)"},{"p":"aima.core.search.csp.examples","c":"NotEqualConstraint","l":"NotEqualConstraint(Variable, Variable)","url":"%3Cinit%3E(aima.core.search.csp.Variable,aima.core.search.csp.Variable)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"notifier"},{"p":"aima.core.agent","c":"EnvironmentView","l":"notify(String)","url":"notify(java.lang.String)"},{"p":"aima.core.agent.impl","c":"SimpleEnvironmentView","l":"notify(String)","url":"notify(java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentViewActionTracker","l":"notify(String)","url":"notify(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"notify(String)","url":"notify(java.lang.String)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"notifyEnvironmentViews(Agent, Action)","url":"notifyEnvironmentViews(aima.core.agent.Agent,aima.core.agent.Action)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"notifyEnvironmentViews(Agent)","url":"notifyEnvironmentViews(aima.core.agent.Agent)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainAnswerLiteralAddedEvent","l":"notifyListener(FOLDomainListener)","url":"notifyListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainEvent","l":"notifyListener(FOLDomainListener)","url":"notifyListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemConstantAddedEvent","l":"notifyListener(FOLDomainListener)","url":"notifyListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainSkolemFunctionAddedEvent","l":"notifyListener(FOLDomainListener)","url":"notifyListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"notifyNodeListeners(Node)","url":"notifyNodeListeners(aima.core.search.framework.Node)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"notifyViewOfMetrics()"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"notifyViewOfMetrics()"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"notifyViewOfMetrics()"},{"p":"aima.core.agent","c":"Environment","l":"notifyViews(String)","url":"notifyViews(java.lang.String)"},{"p":"aima.core.agent","c":"EnvironmentViewNotifier","l":"notifyViews(String)","url":"notifyViews(java.lang.String)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"notifyViews(String)","url":"notifyViews(java.lang.String)"},{"p":"aima.core.probability.proposition","c":"NotProposition","l":"NotProposition(Proposition)","url":"%3Cinit%3E(aima.core.probability.proposition.Proposition)"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"NotSentence(Sentence)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"NQueensBoard(int, NQueensBoard.Config)","url":"%3Cinit%3E(int,aima.core.environment.nqueens.NQueensBoard.Config)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"NQueensBoard(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.search.csp.examples","c":"NQueensCSP","l":"NQueensCSP(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil.NQueensFitnessFunction","l":"NQueensFitnessFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"NQueensFunctionFactory","l":"NQueensFunctionFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil.NQueensGenAlgoGoalTest","l":"NQueensGenAlgoGoalTest()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"NQueensGenAlgoUtil","l":"NQueensGenAlgoUtil()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"NQueensGoalTest","l":"NQueensGoalTest()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"NSW"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"NT"},{"p":"aima.core.util","c":"Util","l":"ntimes(String, int)","url":"ntimes(java.lang.String,int)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"NUMBER_OF_HIDDEN_NEURONS"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"NUMBER_OF_INPUTS"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"NUMBER_OF_OUTPUTS"},{"p":"aima.core.util","c":"DisjointSets","l":"numberDisjointSets()"},{"p":"aima.core.learning.neural","c":"Layer","l":"numberOfInputs()"},{"p":"aima.core.learning.neural","c":"Layer","l":"numberOfNeurons()"},{"p":"aima.core.learning.framework","c":"NumericAttribute","l":"NumericAttribute(double, NumericAttributeSpecification)","url":"%3Cinit%3E(double,aima.core.learning.framework.NumericAttributeSpecification)"},{"p":"aima.core.learning.framework","c":"NumericAttributeSpecification","l":"NumericAttributeSpecification(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.learning.neural","c":"IrisDataSetNumerizer","l":"numerize(Example)","url":"numerize(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.neural","c":"Numerizer","l":"numerize(Example)","url":"numerize(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.framework","c":"Example","l":"numerize(Hashtable<String, Hashtable<String, Integer>>)","url":"numerize(java.util.Hashtable)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"NYNGAN"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"O"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"ObjectWithDynamicAttributes()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk.ObservedEvidence","l":"ObservedEvidence(RandomVariable[], AssignmentProposition[], BayesianNetwork)","url":"%3Cinit%3E(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"OBSTACLE_ID"},{"p":"aima.core.logic.fol","c":"Unifier","l":"occurCheck(Map<Variable, Term>, Variable, FOLNode)","url":"occurCheck(java.util.Map,aima.core.logic.fol.parsing.ast.Variable,aima.core.logic.fol.parsing.ast.FOLNode)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"OK_TO_MOVE_INTO"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"OnlineDFSAgent(OnlineSearchProblem, PerceptToStateFunction)","url":"%3Cinit%3E(aima.core.search.online.OnlineSearchProblem,aima.core.search.framework.PerceptToStateFunction)"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"OnlineSearchProblem()","url":"%3Cinit%3E()"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"OnlineSearchProblem(ActionsFunction, GoalTest, StepCostFunction)","url":"%3Cinit%3E(aima.core.search.framework.problem.ActionsFunction,aima.core.search.framework.problem.GoalTest,aima.core.search.framework.problem.StepCostFunction)"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"OnlineSearchProblem(ActionsFunction, GoalTest)","url":"%3Cinit%3E(aima.core.search.framework.problem.ActionsFunction,aima.core.search.framework.problem.GoalTest)"},{"p":"aima.core.search.framework","c":"NodeExpander.NodeListener","l":"onNodeExpanded(Node)","url":"onNodeExpanded(aima.core.search.framework.Node)"},{"p":"aima.core.logic.propositional.inference","c":"OptimizedDPLL","l":"OptimizedDPLL()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"Connectors","l":"OR"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"OR"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"ORADEA"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ORCondition","l":"ORCondition(Condition, Condition)","url":"%3Cinit%3E(aima.core.agent.impl.aprog.simplerule.Condition,aima.core.agent.impl.aprog.simplerule.Condition)"},{"p":"aima.core.probability.bayes.exact","c":"EliminationAsk","l":"order(BayesianNetwork, Collection<RandomVariable>)","url":"order(aima.core.probability.bayes.BayesianNetwork,java.util.Collection)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourAIPlayer","l":"orderActions(ConnectFourState, List<Integer>, String, int)","url":"orderActions(aima.core.environment.connectfour.ConnectFourState,java.util.List,java.lang.String,int)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"orderActions(STATE, List<ACTION>, PLAYER, int)","url":"orderActions(STATE,java.util.List,PLAYER,int)"},{"p":"aima.core.search.csp","c":"BacktrackingStrategy","l":"orderDomainValues(Variable, Assignment, CSP)","url":"orderDomainValues(aima.core.search.csp.Variable,aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"orderDomainValues(Variable, Assignment, CSP)","url":"orderDomainValues(aima.core.search.csp.Variable,aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"orSearch(Object, NondeterministicProblem, Path)","url":"orSearch(java.lang.Object,aima.core.search.nondeterministic.NondeterministicProblem,aima.core.search.nondeterministic.Path)"},{"p":"aima.core.nlp.ranking","c":"Page","l":"Page(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"PagesDataset()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"paintComponent(Graphics)","url":"paintComponent(java.awt.Graphics)"},{"p":"aima.core.util.datastructure","c":"Pair","l":"Pair(X, Y)","url":"%3Cinit%3E(X,Y)"},{"p":"aima.core.logic.fol.inference","c":"Paramodulation","l":"Paramodulation()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"TreeCSPSolver","l":"parent"},{"p":"aima.core.logic.common","c":"Parser","l":"parse()"},{"p":"aima.core.logic.propositional.parsing","c":"PLParser","l":"parse()"},{"p":"aima.core.util.math.geom","c":"IGroupParser","l":"parse(InputStream, String)","url":"parse(java.io.InputStream,java.lang.String)"},{"p":"aima.core.util.math.geom","c":"SVGGroupParser","l":"parse(InputStream, String)","url":"parse(java.io.InputStream,java.lang.String)"},{"p":"aima.core.nlp.parsing","c":"CYK","l":"parse(List<String>, ProbCNFGrammar)","url":"parse(java.util.List,aima.core.nlp.parsing.grammars.ProbCNFGrammar)"},{"p":"aima.core.logic.common","c":"Parser","l":"parse(Reader)","url":"parse(java.io.Reader)"},{"p":"aima.core.logic.common","c":"Parser","l":"parse(String)","url":"parse(java.lang.String)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parse(String)","url":"parse(java.lang.String)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parseConstant()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parseFunction()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parseNotSentence()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parsePredicate()"},{"p":"aima.core.logic.common","c":"Parser","l":"Parser()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.common","c":"ParserException","l":"ParserException(String, Throwable, Token...)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable,aima.core.logic.common.Token...)"},{"p":"aima.core.logic.common","c":"ParserException","l":"ParserException(String, Token...)","url":"%3Cinit%3E(java.lang.String,aima.core.logic.common.Token...)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parseTermEquality()"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"parseVariable()"},{"p":"aima.core.probability.bayes.approx","c":"ParticleFiltering","l":"particleFiltering(AssignmentProposition[])","url":"particleFiltering(aima.core.probability.proposition.AssignmentProposition[])"},{"p":"aima.core.probability.bayes.approx","c":"ParticleFiltering","l":"ParticleFiltering(int, DynamicBayesianNetwork, Randomizer)","url":"%3Cinit%3E(int,aima.core.probability.bayes.DynamicBayesianNetwork,aima.core.util.Randomizer)"},{"p":"aima.core.probability.bayes.approx","c":"ParticleFiltering","l":"ParticleFiltering(int, DynamicBayesianNetwork)","url":"%3Cinit%3E(int,aima.core.probability.bayes.DynamicBayesianNetwork)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveADPAgent","l":"PassiveADPAgent(Map<S, A>, Set<S>, S, ActionsFunction<S, A>, PolicyEvaluation<S, A>)","url":"%3Cinit%3E(java.util.Map,java.util.Set,S,aima.core.probability.mdp.ActionsFunction,aima.core.probability.mdp.PolicyEvaluation)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveTDAgent","l":"PassiveTDAgent(Map<S, A>, double, double)","url":"%3Cinit%3E(java.util.Map,double,double)"},{"p":"aima.core.search.nondeterministic","c":"Path","l":"Path()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.evalfunc","c":"PathCostFunction","l":"PathCostFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PERCEPT_BREEZE"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PERCEPT_BUMP"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PERCEPT_GLITTER"},{"p":"aima.core.environment.map","c":"DynAttributeNames","l":"PERCEPT_IN"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PERCEPT_SCREAM"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PERCEPT_STENCH"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"Perceptron(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"performanceMeasures"},{"p":"aima.core.robotics","c":"IMclRobot","l":"performMove()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"PERTH"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"PIT"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"PITESTI"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"PLACE_QUEEN"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"plan"},{"p":"aima.core.search.nondeterministic","c":"Plan","l":"Plan()","url":"%3Cinit%3E()"},{"p":"aima.core.search.nondeterministic","c":"Plan","l":"Plan(Object...)","url":"%3Cinit%3E(java.lang.Object...)"},{"p":"aima.core.environment.wumpusworld","c":"HybridWumpusAgent","l":"planRoute(AgentPosition, Set<Room>, Set<Room>)","url":"planRoute(aima.core.environment.wumpusworld.AgentPosition,java.util.Set,java.util.Set)"},{"p":"aima.core.environment.wumpusworld","c":"HybridWumpusAgent","l":"planShot(AgentPosition, Set<Room>, Set<Room>)","url":"planShot(aima.core.environment.wumpusworld.AgentPosition,java.util.Set,java.util.Set)"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"PLFCEntails()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"PLFCEntails","l":"plfcEntails(KnowledgeBase, PropositionSymbol)","url":"plfcEntails(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.logic.propositional.parsing","c":"PLLexer","l":"PLLexer()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.parsing","c":"PLLexer","l":"PLLexer(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing","c":"PLParser","l":"PLParser()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"PLResolution()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"PLResolution(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"plResolution(KnowledgeBase, Sentence)","url":"plResolution(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"plResolve(Clause, Clause)","url":"plResolve(aima.core.logic.propositional.kb.data.Clause,aima.core.logic.propositional.kb.data.Clause)"},{"p":"aima.core.util.math","c":"Matrix","l":"plus(Matrix)","url":"plus(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Vector","l":"plus(Vector)","url":"plus(aima.core.util.math.Vector)"},{"p":"aima.core.util.math","c":"Matrix","l":"plusEquals(Matrix)","url":"plusEquals(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"Point2D(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"aima.core.probability","c":"Factor","l":"pointwiseProduct(Factor)","url":"pointwiseProduct(aima.core.probability.Factor)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"pointwiseProduct(Factor)","url":"pointwiseProduct(aima.core.probability.Factor)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"pointwiseProduct(ProbabilityTable)","url":"pointwiseProduct(aima.core.probability.util.ProbabilityTable)"},{"p":"aima.core.probability","c":"Factor","l":"pointwiseProductPOS(Factor, RandomVariable...)","url":"pointwiseProductPOS(aima.core.probability.Factor,aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"pointwiseProductPOS(Factor, RandomVariable...)","url":"pointwiseProductPOS(aima.core.probability.Factor,aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"pointwiseProductPOS(ProbabilityTable, RandomVariable...)","url":"pointwiseProductPOS(aima.core.probability.util.ProbabilityTable,aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.mdp.search","c":"PolicyIteration","l":"policyIteration(MarkovDecisionProcess<S, A>)","url":"policyIteration(aima.core.probability.mdp.MarkovDecisionProcess)"},{"p":"aima.core.probability.mdp.search","c":"PolicyIteration","l":"PolicyIteration(PolicyEvaluation<S, A>)","url":"%3Cinit%3E(aima.core.probability.mdp.PolicyEvaluation)"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"Polyline2D(Point2D[], boolean)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D[],boolean)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"POPULATION_SIZE"},{"p":"aima.gui.swing.framework","c":"PopupShower","l":"PopupShower(JPopupMenu)","url":"%3Cinit%3E(javax.swing.JPopupMenu)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"PORT_AUGUSTA"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"PORT_HEDLAND"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"PORT_LINCOLN"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"PORT_MACQUARIE"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"possibleAttributeValues()"},{"p":"aima.core.probability","c":"ProbabilityModel","l":"posterior(Proposition, Proposition...)","url":"posterior(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"posterior(Proposition, Proposition...)","url":"posterior(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"posterior(Proposition, Proposition...)","url":"posterior(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability","c":"FiniteProbabilityModel","l":"posteriorDistribution(Proposition, Proposition...)","url":"posteriorDistribution(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"posteriorDistribution(Proposition, Proposition...)","url":"posteriorDistribution(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"posteriorDistribution(Proposition, Proposition...)","url":"posteriorDistribution(aima.core.probability.proposition.Proposition,aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk.ObservedEvidence","l":"posteriorForParents(RandomVariable)","url":"posteriorForParents(aima.core.probability.RandomVariable)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"PREDICATE"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"Predicate(String, List<Term>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"PredicateCollector()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.framework","c":"Learner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.inductive","c":"DecisionList","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.learners","c":"AdaBoostLearner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.learners","c":"CurrentBestLearner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.learners","c":"MajorityLearner","l":"predict(Example)","url":"predict(aima.core.learning.framework.Example)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"predict(NNExample)","url":"predict(aima.core.learning.neural.NNExample)"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"predict(NNExample)","url":"predict(aima.core.learning.neural.NNExample)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"prepare(String)","url":"prepare(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"prepare(String)","url":"prepare(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"prepare(String)","url":"prepare(java.lang.String)"},{"p":"aima.core.search.nondeterministic","c":"Plan","l":"prepend(Action)","url":"prepend(aima.core.agent.Action)"},{"p":"aima.core.search.nondeterministic","c":"Path","l":"prepend(Object)","url":"prepend(java.lang.Object)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"print()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"print()"},{"p":"aima.core.util.math","c":"Matrix","l":"print(int, int)","url":"print(int,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"print(NumberFormat, int)","url":"print(java.text.NumberFormat,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"print(PrintWriter, int, int)","url":"print(java.io.PrintWriter,int,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"print(PrintWriter, NumberFormat, int)","url":"print(java.io.PrintWriter,java.text.NumberFormat,int)"},{"p":"aima.core.logic.fol.inference","c":"InferenceResultPrinter","l":"printInferenceResult(InferenceResult)","url":"printInferenceResult(aima.core.logic.fol.inference.InferenceResult)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"printMessage(String)","url":"printMessage(java.lang.String)"},{"p":"aima.core.nlp.parsing","c":"CYK","l":"printProbTable(float[][][], List<String>, ProbUnrestrictedGrammar)","url":"printProbTable(float[][][],java.util.List,aima.core.nlp.parsing.grammars.ProbUnrestrictedGrammar)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofPrinter","l":"printProof(Proof)","url":"printProof(aima.core.logic.fol.inference.proof.Proof)"},{"p":"aima.core.probability","c":"ProbabilityModel","l":"prior(Proposition...)","url":"prior(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"prior(Proposition...)","url":"prior(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"prior(Proposition...)","url":"prior(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability","c":"FiniteProbabilityModel","l":"priorDistribution(Proposition...)","url":"priorDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"priorDistribution(Proposition...)","url":"priorDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.probability.full","c":"FullJointDistributionModel","l":"priorDistribution(Proposition...)","url":"priorDistribution(aima.core.probability.proposition.Proposition...)"},{"p":"aima.core.search.framework","c":"PrioritySearch","l":"PrioritySearch(QueueSearch, Comparator<Node>)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch,java.util.Comparator)"},{"p":"aima.core.probability.bayes.approx","c":"PriorSample","l":"PriorSample()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"PriorSample","l":"priorSample(BayesianNetwork)","url":"priorSample(aima.core.probability.bayes.BayesianNetwork)"},{"p":"aima.core.probability.bayes.approx","c":"PriorSample","l":"PriorSample(Randomizer)","url":"%3Cinit%3E(aima.core.util.Randomizer)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"PROB"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"PROB_CONTEXT_FREE"},{"p":"aima.core.probability.mdp","c":"TransitionProbabilityFunction","l":"probability(S, S, A)","url":"probability(S,S,A)"},{"p":"aima.core.probability.bayes.impl","c":"CPT","l":"probabilityFor(Object...)","url":"probabilityFor(java.lang.Object...)"},{"p":"aima.core.util","c":"FrequencyCounter","l":"probabilityOf(T)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"probabilityOfAcceptance(double, double)","url":"probabilityOfAcceptance(double,double)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"ProbabilityTable(Collection<RandomVariable>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"ProbabilityTable(double[], RandomVariable...)","url":"%3Cinit%3E(double[],aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"ProbabilityTable(RandomVariable...)","url":"%3Cinit%3E(aima.core.probability.RandomVariable...)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbCNFGrammar","l":"ProbCNFGrammar()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbCNFGrammar","l":"ProbCNFGrammar(ProbCNFGrammar)","url":"%3Cinit%3E(aima.core.nlp.parsing.grammars.ProbCNFGrammar)"},{"p":"aima.core.nlp.data.grammars","c":"ProbCNFGrammarExamples","l":"ProbCNFGrammarExamples()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.data.grammars","c":"ProbContextFreeExamples","l":"ProbContextFreeExamples()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextFreeGrammar","l":"ProbContextFreeGrammar()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextSensitiveGrammar","l":"ProbContextSensitiveGrammar()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"Problem()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"Problem(Object, ActionsFunction, ResultFunction, GoalTest, StepCostFunction)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.framework.problem.ActionsFunction,aima.core.search.framework.problem.ResultFunction,aima.core.search.framework.problem.GoalTest,aima.core.search.framework.problem.StepCostFunction)"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"Problem(Object, ActionsFunction, ResultFunction, GoalTest)","url":"%3Cinit%3E(java.lang.Object,aima.core.search.framework.problem.ActionsFunction,aima.core.search.framework.problem.ResultFunction,aima.core.search.framework.problem.GoalTest)"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"ProblemSolvingAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"ProbUnrestrictedGrammar()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"ProbUtil()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"processError(FeedForwardNeuralNetwork, Vector)","url":"processError(aima.core.learning.neural.FeedForwardNeuralNetwork,aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"NNTrainingScheme","l":"processError(FeedForwardNeuralNetwork, Vector)","url":"processError(aima.core.learning.neural.FeedForwardNeuralNetwork,aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"processError(Vector)","url":"processError(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FunctionApproximator","l":"processError(Vector)","url":"processError(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"processError(Vector)","url":"processError(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"processInput(FeedForwardNeuralNetwork, Vector)","url":"processInput(aima.core.learning.neural.FeedForwardNeuralNetwork,aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"NNTrainingScheme","l":"processInput(FeedForwardNeuralNetwork, Vector)","url":"processInput(aima.core.learning.neural.FeedForwardNeuralNetwork,aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"processInput(Vector)","url":"processInput(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"FunctionApproximator","l":"processInput(Vector)","url":"processInput(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"processInput(Vector)","url":"processInput(aima.core.util.math.Vector)"},{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"program"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofFinal","l":"ProofFinal(ProofStep, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.inference.proof.ProofStep,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofPrinter","l":"ProofPrinter()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"ProofStepBwChGoal(Clause, Literal, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Literal,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainCancellation","l":"ProofStepChainCancellation(Chain, Chain, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Chain,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainContrapositive","l":"ProofStepChainContrapositive(Chain, Chain)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Chain)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainDropped","l":"ProofStepChainDropped(Chain, Chain)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Chain)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainFromClause","l":"ProofStepChainFromClause(Chain, Clause)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepChainReduction","l":"ProofStepChainReduction(Chain, Chain, Chain, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.kb.data.Chain,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseBinaryResolvent","l":"ProofStepClauseBinaryResolvent(Clause, Literal, Literal, Clause, Clause, Map<Variable, Term>, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Literal,aima.core.logic.fol.kb.data.Literal,aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,java.util.Map,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseClausifySentence","l":"ProofStepClauseClausifySentence(Clause, Sentence)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseDemodulation","l":"ProofStepClauseDemodulation(Clause, Clause, TermEquality)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.parsing.ast.TermEquality)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseFactor","l":"ProofStepClauseFactor(Clause, Clause, Literal, Literal, Map<Variable, Term>, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Literal,aima.core.logic.fol.kb.data.Literal,java.util.Map,java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepClauseParamodulation","l":"ProofStepClauseParamodulation(Clause, Clause, Clause, TermEquality)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.parsing.ast.TermEquality)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAlreadyAFact","l":"ProofStepFoChAlreadyAFact(Literal)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepFoChAssertFact","l":"ProofStepFoChAssertFact(Clause, Literal, Map<Variable, Term>, ProofStep)","url":"%3Cinit%3E(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Literal,java.util.Map,aima.core.logic.fol.inference.proof.ProofStep)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepGoal","l":"ProofStepGoal(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepPremise","l":"ProofStepPremise(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepRenaming","l":"ProofStepRenaming(Object, ProofStep)","url":"%3Cinit%3E(java.lang.Object,aima.core.logic.fol.inference.proof.ProofStep)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"PropositionSymbol(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.learning.neural","c":"PureLinearActivationFunction","l":"PureLinearActivationFunction()","url":"%3Cinit%3E()"},{"p":"aima.core.util.datastructure","c":"TwoKeyHashMap","l":"put(K1, K2, V)","url":"put(K1,K2,V)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"Q"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"QLearningAgent(ActionsFunction<S, A>, A, double, double, int, double)","url":"%3Cinit%3E(aima.core.probability.mdp.ActionsFunction,A,double,double,int,double)"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"QuantifiedSentence(String, List<Variable>, Sentence)","url":"%3Cinit%3E(java.lang.String,java.util.List,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"QUANTIFIER"},{"p":"aima.core.logic.fol","c":"Quantifiers","l":"Quantifiers()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard.Config","l":"QUEEN_IN_EVERY_COL"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"QueenAction(String, XYLocation)","url":"%3Cinit%3E(java.lang.String,aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"queenExistsAt(XYLocation)","url":"queenExistsAt(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard.Config","l":"QUEENS_IN_FIRST_ROW"},{"p":"aima.core.search.framework","c":"QueueFactory","l":"QueueFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"QueueSearch(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.learning.neural","c":"RabbitEyeDataSet","l":"RabbitEyeDataSet()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"RAIN_RV"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"RAIN_t_RV"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"RAIN_tm1_RV"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"random"},{"p":"aima.core.util.math","c":"Matrix","l":"random(int, int)","url":"random(int,int)"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"randomAssignmentToSymbolsInClauses(Set<Clause>)","url":"randomAssignmentToSymbolsInClauses(java.util.Set)"},{"p":"aima.core.util","c":"Util","l":"randomBoolean()"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"randomlyGenerateDestination()"},{"p":"aima.core.environment.map","c":"Map","l":"randomlyGenerateDestination()"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"randomlySelectFalseClause(Set<Clause>, Model)","url":"randomlySelectFalseClause(java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"randomlySelectSymbolFromClause(Clause)","url":"randomlySelectSymbolFromClause(aima.core.logic.propositional.kb.data.Clause)"},{"p":"aima.core.util","c":"Util","l":"randomNumberBetween(int, int)","url":"randomNumberBetween(int,int)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"randomOffset(int)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"randomPoint()"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"randomPoint()"},{"p":"aima.core.robotics","c":"IMclMap","l":"randomPose()"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"randomPose()"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"randomSample(Node, Map<RandomVariable, Object>, Randomizer)","url":"randomSample(aima.core.probability.bayes.Node,java.util.Map,aima.core.util.Randomizer)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"randomSelection(List<Individual<A>>, FitnessFunction<A>)","url":"randomSelection(java.util.List,aima.core.search.local.FitnessFunction)"},{"p":"aima.core.probability.util","c":"RandVar","l":"RandVar(String, Domain)","url":"%3Cinit%3E(java.lang.String,aima.core.probability.domain.Domain)"},{"p":"aima.core.util.math.geom.shapes","c":"Ray2D","l":"Ray2D(double, double, double, double)","url":"%3Cinit%3E(double,double,double,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Ray2D","l":"Ray2D(Point2D, Vector2D)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.robotics","c":"IMclMap","l":"rayCast(P)"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"rayCast(P)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"rayCast(Ray2D)","url":"rayCast(aima.core.util.math.geom.shapes.Ray2D)"},{"p":"aima.core.util.math","c":"Matrix","l":"read(BufferedReader)","url":"read(java.io.BufferedReader)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"recreate(Object)","url":"recreate(java.lang.Object)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"Rect2D(double, double, double, double)","url":"%3Cinit%3E(double,double,double,double)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"Rect2D(Point2D, Point2D)","url":"%3Cinit%3E(aima.core.util.math.geom.shapes.Point2D,aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"RecursiveBestFirstSearch(EvaluationFunction, boolean, NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.EvaluationFunction,boolean,aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"RecursiveBestFirstSearch(EvaluationFunction, boolean)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.EvaluationFunction,boolean)"},{"p":"aima.core.search.informed","c":"RecursiveBestFirstSearch","l":"RecursiveBestFirstSearch(EvaluationFunction)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.EvaluationFunction)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"RED"},{"p":"aima.core.logic.fol.kb.data","c":"ReducedLiteral","l":"ReducedLiteral(AtomicSentence, boolean)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.AtomicSentence,boolean)"},{"p":"aima.core.logic.fol.kb.data","c":"ReducedLiteral","l":"ReducedLiteral(AtomicSentence)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.AtomicSentence)"},{"p":"aima.core.search.csp","c":"AC3Strategy","l":"reduceDomains(CSP)","url":"reduceDomains(aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"AC3Strategy","l":"reduceDomains(Variable, Object, CSP)","url":"reduceDomains(aima.core.search.csp.Variable,java.lang.Object,aima.core.search.csp.CSP)"},{"p":"aima.core.environment.vacuum","c":"ReflexVacuumAgent","l":"ReflexVacuumAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"refreshDataset()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"REGULAR"},{"p":"aima.core.learning.reinforcement.agent","c":"ReinforcementAgent","l":"ReinforcementAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"RejectionSampling","l":"RejectionSampling()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.approx","c":"RejectionSampling","l":"RejectionSampling(PriorSample)","url":"%3Cinit%3E(aima.core.probability.bayes.approx.PriorSample)"},{"p":"aima.core.probability.bayes.approx","c":"RejectionSampling","l":"rejectionSampling(RandomVariable[], AssignmentProposition[], BayesianNetwork, int)","url":"rejectionSampling(aima.core.probability.RandomVariable[],aima.core.probability.proposition.AssignmentProposition[],aima.core.probability.bayes.BayesianNetwork,int)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"relevantPages(String)","url":"relevantPages(java.lang.String)"},{"p":"aima.core.environment.nqueens","c":"QueenAction","l":"REMOVE_QUEEN"},{"p":"aima.core.util","c":"ArrayIterator","l":"remove()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"remove(PropositionSymbol)","url":"remove(aima.core.logic.propositional.parsing.ast.PropositionSymbol)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"remove(VertexLabelType, VertexLabelType)","url":"remove(VertexLabelType,VertexLabelType)"},{"p":"aima.core.agent","c":"Environment","l":"removeAgent(Agent)","url":"removeAgent(aima.core.agent.Agent)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"removeAgent(Agent)","url":"removeAgent(aima.core.agent.Agent)"},{"p":"aima.core.search.csp","c":"Assignment","l":"removeAssignment(Variable)","url":"removeAssignment(aima.core.search.csp.Variable)"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"removeAttribute(Object)","url":"removeAttribute(java.lang.Object)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"removeBidirectionalLink(String, String)","url":"removeBidirectionalLink(java.lang.String,java.lang.String)"},{"p":"aima.core.environment.cellworld","c":"CellWorld","l":"removeCell(int, int)","url":"removeCell(int,int)"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"removeCSPStateListener(CSPStateListener)","url":"removeCSPStateListener(aima.core.search.csp.CSPStateListener)"},{"p":"aima.core.logic.fol.inference.otter","c":"LightestClauseHeuristic","l":"removedClauseFromSOS(Clause)","url":"removedClauseFromSOS(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultLightestClauseHeuristic","l":"removedClauseFromSOS(Clause)","url":"removedClauseFromSOS(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.agent","c":"Environment","l":"removeEnvironmentObject(EnvironmentObject)","url":"removeEnvironmentObject(aima.core.agent.EnvironmentObject)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"removeEnvironmentObject(EnvironmentObject)","url":"removeEnvironmentObject(aima.core.agent.EnvironmentObject)"},{"p":"aima.core.agent","c":"Environment","l":"removeEnvironmentView(EnvironmentView)","url":"removeEnvironmentView(aima.core.agent.EnvironmentView)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"removeEnvironmentView(EnvironmentView)","url":"removeEnvironmentView(aima.core.agent.EnvironmentView)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"removeExample(Example)","url":"removeExample(aima.core.learning.framework.Example)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomain","l":"removeFOLDomainListener(FOLDomainListener)","url":"removeFOLDomainListener(aima.core.logic.fol.domain.FOLDomainListener)"},{"p":"aima.core.util","c":"Util","l":"removeFrom(List<T>, T)","url":"removeFrom(java.util.List,T)"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"removeFromFrontier()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearch","l":"removeFromFrontier()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchBFS","l":"removeFromFrontier()"},{"p":"aima.core.search.framework.qsearch","c":"GraphSearchReducedFrontier","l":"removeFromFrontier()"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"removeFromFrontier()"},{"p":"aima.core.search.framework.qsearch","c":"TreeSearch","l":"removeFromFrontier()"},{"p":"aima.core.util.datastructure","c":"TwoKeyHashMap","l":"removeKey(K1, K2)","url":"removeKey(K1,K2)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"removeQueenFrom(XYLocation)","url":"removeQueenFrom(aima.core.util.datastructure.XYLocation)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"removeUnidirectionalLink(String, String)","url":"removeUnidirectionalLink(java.lang.String,java.lang.String)"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"removeValueAt(int)"},{"p":"aima.core.search.csp","c":"CSP","l":"removeValueFromDomain(Variable, Object)","url":"removeValueFromDomain(aima.core.search.csp.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"replace(AtomicSentence, Term, Term)","url":"replace(aima.core.logic.fol.parsing.ast.AtomicSentence,aima.core.logic.fol.parsing.ast.Term,aima.core.logic.fol.parsing.ast.Term)"},{"p":"aima.core.logic.fol.inference.proof","c":"Proof","l":"replaceAnswerBindings(Map<Variable, Term>)","url":"replaceAnswerBindings(java.util.Map)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofFinal","l":"replaceAnswerBindings(Map<Variable, Term>)","url":"replaceAnswerBindings(java.util.Map)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"ReplaceMatchingTerm()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"report(List<Page>)","url":"report(java.util.List)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"reproduce(Individual<A>, Individual<A>)","url":"reproduce(aima.core.search.local.Individual,aima.core.search.local.Individual)"},{"p":"aima.core.search.local","c":"GeneticAlgorithmForNumbers","l":"reproduce(Individual<Double>, Individual<Double>)","url":"reproduce(aima.core.search.local.Individual,aima.core.search.local.Individual)"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveADPAgent","l":"reset()"},{"p":"aima.core.learning.reinforcement.agent","c":"PassiveTDAgent","l":"reset()"},{"p":"aima.core.learning.reinforcement.agent","c":"QLearningAgent","l":"reset()"},{"p":"aima.core.learning.reinforcement.agent","c":"ReinforcementAgent","l":"reset()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironmentState","l":"reset()"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLModelEliminationTracer","l":"reset()"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"resetCounter()"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"resolvePositiveWithNegative(Clause, Clause, Set<Clause>)","url":"resolvePositiveWithNegative(aima.core.logic.propositional.kb.data.Clause,aima.core.logic.propositional.kb.data.Clause,java.util.Set)"},{"p":"aima.core.util","c":"Util","l":"rest(List<T>)","url":"rest(java.util.List)"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"restoreDomains(CSP)","url":"restoreDomains(aima.core.search.csp.CSP)"},{"p":"aima.core.environment.cellworld","c":"CellWorld","l":"result(Cell<C>, CellWorldAction)","url":"result(aima.core.environment.cellworld.Cell,aima.core.environment.cellworld.CellWorldAction)"},{"p":"aima.core.search.framework.problem","c":"ResultFunction","l":"result(Object, Action)","url":"result(java.lang.Object,aima.core.agent.Action)"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"resultFunction"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"resultFunction"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldResults","l":"results(Object, Action)","url":"results(java.lang.Object,aima.core.agent.Action)"},{"p":"aima.core.search.nondeterministic","c":"ResultsFunction","l":"results(Object, Action)","url":"results(java.lang.Object,aima.core.agent.Action)"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"resultsFunction"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"retrieveBestIndividual(Collection<Individual<A>>, FitnessFunction<A>)","url":"retrieveBestIndividual(java.util.Collection,aima.core.search.local.FitnessFunction)"},{"p":"aima.core.learning.reinforcement","c":"RewardPercept","l":"reward()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldPercept","l":"reward()"},{"p":"aima.core.probability.mdp","c":"MarkovDecisionProcess","l":"reward(S)"},{"p":"aima.core.probability.mdp","c":"RewardFunction","l":"reward(S)"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"reward(S)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"rhs"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"Right"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"RIGHT"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"RIGHT"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"right()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"RIMNICU_VILCEA"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"ringOfThievesDomain()"},{"p":"aima.core.robotics.datatypes","c":"RobotException","l":"RobotException()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"ROCKHAMPTON"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"Room(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"rootNodes"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"rotate(double)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"RPAREN"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"RSQRBRACKET"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"Rule(Condition, Action)","url":"%3Cinit%3E(aima.core.agent.impl.aprog.simplerule.Condition,aima.core.agent.Action)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"Rule(List<String>, float)","url":"%3Cinit%3E(java.util.List,float)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"Rule(List<String>, List<String>, float)","url":"%3Cinit%3E(java.util.List,java.util.List,float)"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"Rule(String, String, float)","url":"%3Cinit%3E(java.lang.String,java.lang.String,float)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"ruleAction(Rule)","url":"ruleAction(aima.core.agent.impl.aprog.simplerule.Rule)"},{"p":"aima.core.agent.impl.aprog","c":"SimpleReflexAgentProgram","l":"ruleAction(Rule)","url":"ruleAction(aima.core.agent.impl.aprog.simplerule.Rule)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"ruleMatch(DynamicState, Set<Rule>)","url":"ruleMatch(aima.core.agent.impl.DynamicState,java.util.Set)"},{"p":"aima.core.agent.impl.aprog","c":"SimpleReflexAgentProgram","l":"ruleMatch(ObjectWithDynamicAttributes, Set<Rule>)","url":"ruleMatch(aima.core.agent.impl.ObjectWithDynamicAttributes,java.util.Set)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"rules"},{"p":"aima.gui.swing.framework","c":"SimulationThread","l":"run()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"run(MessageLogger)","url":"run(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"run(MessageLogger)","url":"run(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"run(MessageLogger)","url":"run(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.core.nlp.parsing","c":"RunCYK","l":"RunCYK()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.ranking","c":"RunHITS","l":"RunHITS()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"SA"},{"p":"aima.core.probability.util","c":"ProbUtil","l":"sample(double, RandomVariable, double[])","url":"sample(double,aima.core.probability.RandomVariable,double[])"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"satisfies(Set<Clause>)","url":"satisfies(java.util.Set)"},{"p":"aima.core.logic.propositional.inference","c":"SATPlan","l":"satPlan(SATPlan.Describe, SATPlan.Describe, SATPlan.Describe, int)","url":"satPlan(aima.core.logic.propositional.inference.SATPlan.Describe,aima.core.logic.propositional.inference.SATPlan.Describe,aima.core.logic.propositional.inference.SATPlan.Describe,int)"},{"p":"aima.core.logic.propositional.inference","c":"SATPlan","l":"SATPlan(SATSolver, SATPlan.SolutionExtractor)","url":"%3Cinit%3E(aima.core.logic.propositional.inference.SATSolver,aima.core.logic.propositional.inference.SATPlan.SolutionExtractor)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"scale(double, double)","url":"scale(double,double)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"scale(int)"},{"p":"aima.core.environment.map","c":"Scenario","l":"Scenario(MapEnvironment, Map, String)","url":"%3Cinit%3E(aima.core.environment.map.MapEnvironment,aima.core.environment.map.Map,java.lang.String)"},{"p":"aima.core.search.local","c":"Scheduler","l":"Scheduler()","url":"%3Cinit%3E()"},{"p":"aima.core.search.local","c":"Scheduler","l":"Scheduler(int, double, int)","url":"%3Cinit%3E(int,double,int)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"SEARCH_ALGOS"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp","l":"SEARCH_NAMES"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleFrame","l":"SEARCH_SEL"},{"p":"aima.core.search.nondeterministic","c":"AndOrSearch","l":"search(NondeterministicProblem)","url":"search(aima.core.search.nondeterministic.NondeterministicProblem)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"search(Problem)","url":"search(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"search(Problem)","url":"search(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"search(Problem)","url":"search(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"search(Problem)","url":"search(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"SearchAgent","l":"SearchAgent(Problem, SearchForActions)","url":"%3Cinit%3E(aima.core.search.framework.problem.Problem,aima.core.search.framework.SearchForActions)"},{"p":"aima.core.search.local","c":"HillClimbingSearch","l":"searchNode(Problem)","url":"searchNode(aima.core.search.framework.problem.Problem)"},{"p":"aima.core.search.framework","c":"SearchUtils","l":"SearchUtils()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"selectionChanged(String)","url":"selectionChanged(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"SelectionState(String[])","url":"%3Cinit%3E(java.lang.String[])"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"selectionStrategy"},{"p":"aima.core.util","c":"Util","l":"selectRandomlyFromList(List<T>)","url":"selectRandomlyFromList(java.util.List)"},{"p":"aima.core.search.csp","c":"BacktrackingStrategy","l":"selectUnassignedVariable(Assignment, CSP)","url":"selectUnassignedVariable(aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"selectUnassignedVariable(Assignment, CSP)","url":"selectUnassignedVariable(aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.learning.neural","c":"LayerSensitivity","l":"sensitivityMatrixFromErrorMatrix(Vector)","url":"sensitivityMatrixFromErrorMatrix(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"LayerSensitivity","l":"sensitivityMatrixFromSucceedingLayer(LayerSensitivity)","url":"sensitivityMatrixFromSucceedingLayer(aima.core.learning.neural.LayerSensitivity)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Sentence","l":"Sentence()","url":"%3Cinit%3E()"},{"p":"aima.core.util.math","c":"Matrix","l":"set(int, int, double)","url":"set(int,int,double)"},{"p":"aima.core.util.datastructure","c":"Table","l":"set(RowHeaderType, ColumnHeaderType, ValueType)","url":"set(RowHeaderType,ColumnHeaderType,ValueType)"},{"p":"aima.core.search.framework","c":"Metrics","l":"set(String, double)","url":"set(java.lang.String,double)"},{"p":"aima.core.search.framework","c":"Metrics","l":"set(String, int)","url":"set(java.lang.String,int)"},{"p":"aima.core.search.framework","c":"Metrics","l":"set(String, long)","url":"set(java.lang.String,long)"},{"p":"aima.core.util.datastructure","c":"LabeledGraph","l":"set(VertexLabelType, VertexLabelType, EdgeLabelType)","url":"set(VertexLabelType,VertexLabelType,EdgeLabelType)"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"setAdaptee(BayesSampleInference)","url":"setAdaptee(aima.core.probability.bayes.approx.BayesSampleInference)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldEnvironmentState","l":"setAgentLocation(Agent, Cell<Double>)","url":"setAgentLocation(aima.core.agent.Agent,aima.core.environment.cellworld.Cell)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"setAgentLocation(Agent, String)","url":"setAgentLocation(aima.core.agent.Agent,java.lang.String)"},{"p":"aima.core.environment.map","c":"MapEnvironmentState","l":"setAgentLocationAndTravelDistance(Agent, String, Double)","url":"setAgentLocationAndTravelDistance(aima.core.agent.Agent,java.lang.String,java.lang.Double)"},{"p":"aima.core.agent","c":"Agent","l":"setAlive(boolean)"},{"p":"aima.core.agent.impl","c":"AbstractAgent","l":"setAlive(boolean)"},{"p":"aima.core.search.csp","c":"Assignment","l":"setAssignment(Variable, Object)","url":"setAssignment(aima.core.search.csp.Variable,java.lang.Object)"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"setAttribute(Object, Object)","url":"setAttribute(java.lang.Object,java.lang.Object)"},{"p":"aima.core.probability.bayes.model","c":"FiniteBayesModel","l":"setBayesInference(BayesInference)","url":"setBayesInference(aima.core.probability.bayes.BayesInference)"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"setBoard(List<XYLocation>)","url":"setBoard(java.util.List)"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"setBoard(List<XYLocation>)","url":"setBoard(java.util.List)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"setBoard(List<XYLocation>)","url":"setBoard(java.util.List)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"setBorder(int, int, int, int)","url":"setBorder(int,int,int,int)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"setBreeze(boolean)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"setBump(boolean)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"setCaveXDimension(int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"setCaveYDimension(int)"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldPercept","l":"setCell(Cell<Double>)","url":"setCell(aima.core.environment.cellworld.Cell)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"setClauseFilter(ClauseFilter)","url":"setClauseFilter(aima.core.logic.fol.inference.otter.ClauseFilter)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"setClauseSimplifier(ClauseSimplifier)","url":"setClauseSimplifier(aima.core.logic.fol.inference.otter.ClauseSimplifier)"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"setConfig(String, Double)","url":"setConfig(java.lang.String,java.lang.Double)"},{"p":"aima.core.learning.neural","c":"NNConfig","l":"setConfig(String, int)","url":"setConfig(java.lang.String,int)"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"setContent(C)"},{"p":"aima.core.nlp.ranking","c":"Page","l":"setContent(String)","url":"setContent(java.lang.String)"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"setController(AgentAppController)","url":"setController(aima.gui.swing.framework.AgentAppController)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setController(AgentAppController)","url":"setController(aima.gui.swing.framework.AgentAppController)"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"setCurrentValueFor(int[])"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setDefaultSelection()"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"setDiscardTautologies(boolean)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"setDistAndDirToRefLocation(String, double, int)","url":"setDistAndDirToRefLocation(java.lang.String,double,int)"},{"p":"aima.core.search.csp","c":"CSP","l":"setDomain(Variable, Domain)","url":"setDomain(aima.core.search.csp.Variable,aima.core.search.csp.Domain)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"setEarlyGoalTest(boolean)"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"setEmptyDomainFound(boolean)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"setEnvironment(Environment)","url":"setEnvironment(aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"setEnvironment(Environment)","url":"setEnvironment(aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"setEnvironment(Environment)","url":"setEnvironment(aima.core.agent.Environment)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setEnvView(AgentAppEnvironmentView)","url":"setEnvView(aima.gui.swing.framework.AgentAppEnvironmentView)"},{"p":"aima.core.probability.bayes.exact","c":"EnumerationAsk.ObservedEvidence","l":"setExtendedValue(RandomVariable, Object)","url":"setExtendedValue(aima.core.probability.RandomVariable,java.lang.Object)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"setFrame(AgentAppFrame)","url":"setFrame(aima.gui.swing.framework.AgentAppFrame)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"setGlitter(boolean)"},{"p":"aima.core.search.informed","c":"HeuristicEvaluationFunction","l":"setHeuristicFunction(HeuristicFunction)","url":"setHeuristicFunction(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"setHeuristicFunction(HeuristicFunction)","url":"setHeuristicFunction(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"setImmutable()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"setIndexical(int)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"setInference(ImprovedBacktrackingStrategy.Inference)","url":"setInference(aima.core.search.csp.ImprovedBacktrackingStrategy.Inference)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"setInferenceProcedure(InferenceProcedure)","url":"setInferenceProcedure(aima.core.logic.fol.inference.InferenceProcedure)"},{"p":"aima.core.logic.common","c":"Lexer","l":"setInput(Reader)","url":"setInput(java.io.Reader)"},{"p":"aima.core.logic.common","c":"Lexer","l":"setInput(String)","url":"setInput(java.lang.String)"},{"p":"aima.core.learning.neural","c":"Layer","l":"setLastBiasUpdateVector(Vector)","url":"setLastBiasUpdateVector(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"Layer","l":"setLastWeightUpdateMatrix(Matrix)","url":"setLastWeightUpdateMatrix(aima.core.util.math.Matrix)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"setLightestClauseHeuristic(LightestClauseHeuristic)","url":"setLightestClauseHeuristic(aima.core.logic.fol.inference.otter.LightestClauseHeuristic)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"setLocationState(String, VacuumEnvironment.LocationState)","url":"setLocationState(java.lang.String,aima.core.environment.vacuum.VacuumEnvironment.LocationState)"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"setLogEnabled(boolean)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"setLogLater(boolean)"},{"p":"aima.core.util.math","c":"Interval","l":"setLower(Comparable<C>)","url":"setLower(java.lang.Comparable)"},{"p":"aima.core.util.math","c":"Interval","l":"setLowerExclusive(boolean)"},{"p":"aima.core.util.math","c":"Interval","l":"setLowerInclusive(boolean)"},{"p":"aima.core.util.math","c":"Matrix","l":"setMatrix(int, int, int, int, Matrix)","url":"setMatrix(int,int,int,int,aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"setMatrix(int, int, int[], Matrix)","url":"setMatrix(int,int,int[],aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"setMatrix(int[], int, int, Matrix)","url":"setMatrix(int[],int,int,aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"setMatrix(int[], int[], Matrix)","url":"setMatrix(int[],int[],aima.core.util.math.Matrix)"},{"p":"aima.core.logic.fol.inference","c":"FOLModelElimination","l":"setMaxQueryTime(long)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"setMaxQueryTime(long)"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"setMaxQueryTime(long)"},{"p":"aima.gui.swing.framework","c":"AgentAppEnvironmentView","l":"setMessageLogger(MessageLogger)","url":"setMessageLogger(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"setModel(Model)","url":"setModel(aima.core.agent.Model)"},{"p":"aima.core.probability.bayes.approx","c":"BayesInferenceApproxAdapter","l":"setN(int)"},{"p":"aima.core.learning.neural","c":"BackPropLearning","l":"setNeuralNetwork(FunctionApproximator)","url":"setNeuralNetwork(aima.core.learning.neural.FunctionApproximator)"},{"p":"aima.core.learning.neural","c":"NNTrainingScheme","l":"setNeuralNetwork(FunctionApproximator)","url":"setNeuralNetwork(aima.core.learning.neural.FunctionApproximator)"},{"p":"aima.core.logic.propositional.inference","c":"PLResolution","l":"setOfClausesInTheCNFRepresentationOfKBAndNotAlpha(KnowledgeBase, Sentence)","url":"setOfClausesInTheCNFRepresentationOfKBAndNotAlpha(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.util","c":"SetOps","l":"SetOps()","url":"%3Cinit%3E()"},{"p":"aima.core.learning.neural","c":"Layer","l":"setPenultimateBiasUpdateVector(Vector)","url":"setPenultimateBiasUpdateVector(aima.core.util.math.Vector)"},{"p":"aima.core.learning.neural","c":"Layer","l":"setPenultimateWeightUpdateMatrix(Matrix)","url":"setPenultimateWeightUpdateMatrix(aima.core.util.math.Matrix)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"setPerceptToStateFunction(PerceptToStateFunction)","url":"setPerceptToStateFunction(aima.core.search.framework.PerceptToStateFunction)"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"setPerceptToStateFunction(PerceptToStateFunction)","url":"setPerceptToStateFunction(aima.core.search.framework.PerceptToStateFunction)"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"setPerceptToStateFunction(PerceptToStateFunction)","url":"setPerceptToStateFunction(aima.core.search.framework.PerceptToStateFunction)"},{"p":"aima.core.environment.map","c":"ExtendableMap","l":"setPosition(String, double, double)","url":"setPosition(java.lang.String,double,double)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStepBwChGoal","l":"setPredecessor(ProofStep)","url":"setPredecessor(aima.core.logic.fol.inference.proof.ProofStep)"},{"p":"aima.core.environment.vacuum","c":"NondeterministicVacuumAgent","l":"setProblem(NondeterministicProblem)","url":"setProblem(aima.core.search.nondeterministic.NondeterministicProblem)"},{"p":"aima.core.search.online","c":"LRTAStarAgent","l":"setProblem(OnlineSearchProblem)","url":"setProblem(aima.core.search.online.OnlineSearchProblem)"},{"p":"aima.core.search.online","c":"OnlineDFSAgent","l":"setProblem(OnlineSearchProblem)","url":"setProblem(aima.core.search.online.OnlineSearchProblem)"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"setProofStep(ProofStep)","url":"setProofStep(aima.core.logic.fol.inference.proof.ProofStep)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"setProofStep(ProofStep)","url":"setProofStep(aima.core.logic.fol.inference.proof.ProofStep)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"setRayRange(double)"},{"p":"aima.core.search.framework.qsearch","c":"BidirectionalSearch","l":"setReverseActionTestEnabled(boolean)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"setRules(Set<Rule>)","url":"setRules(java.util.Set)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"setScream(boolean)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setSelectorItems(String, Object[], int)","url":"setSelectorItems(java.lang.String,java.lang.Object[],int)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setSelectors(String[], String[])","url":"setSelectors(java.lang.String[],java.lang.String[])"},{"p":"aima.core.robotics.impl.map","c":"MclCartesianPlot2D","l":"setSensorRange(double)"},{"p":"aima.core.util.math.geom","c":"CartesianPlot2D","l":"setShapes(ArrayList<IGeometric2D>)","url":"setShapes(java.util.ArrayList)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setSimulationThread(SimulationThread)","url":"setSimulationThread(aima.gui.swing.framework.SimulationThread)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"setSpecification(DataSetSpecification)","url":"setSpecification(aima.core.learning.framework.DataSetSpecification)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setSplitPaneResizeWeight(double)"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"setStandardizedApartCheckNotRequired()"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"setState(DynamicState)","url":"setState(aima.core.agent.impl.DynamicState)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"setStatus(String)","url":"setStatus(java.lang.String)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"setStench(boolean)"},{"p":"aima.core.logic.fol.inference.proof","c":"AbstractProofStep","l":"setStepNumber(int)"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofStep","l":"setStepNumber(int)"},{"p":"aima.core.learning.framework","c":"DataSetSpecification","l":"setTarget(String)","url":"setTarget(java.lang.String)"},{"p":"aima.core.learning.neural","c":"IrisNNDataSet","l":"setTargetColumns()"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"setTargetColumns()"},{"p":"aima.core.learning.neural","c":"RabbitEyeDataSet","l":"setTargetColumns()"},{"p":"aima.core.logic.fol.inference","c":"FOLTFMResolution","l":"setTracer(FOLTFMResolutionTracer)","url":"setTracer(aima.core.logic.fol.inference.trace.FOLTFMResolutionTracer)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"setTrainingScheme(NNTrainingScheme)","url":"setTrainingScheme(aima.core.learning.neural.NNTrainingScheme)"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"setUIColors()"},{"p":"aima.core.util.math","c":"Interval","l":"setUpper(Comparable<C>)","url":"setUpper(java.lang.Comparable)"},{"p":"aima.core.util.math","c":"Interval","l":"setUpperExclusive(boolean)"},{"p":"aima.core.util.math","c":"Interval","l":"setUpperInclusive(boolean)"},{"p":"aima.core.logic.fol.parsing","c":"FOLParser","l":"setUpToParse(String)","url":"setUpToParse(java.lang.String)"},{"p":"aima.core.logic.fol.inference","c":"FOLOTTERLikeTheoremProver","l":"setUseParamodulation(boolean)"},{"p":"aima.core.probability","c":"CategoricalDistribution","l":"setValue(int, double)","url":"setValue(int,double)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"setValue(int, double)","url":"setValue(int,double)"},{"p":"aima.core.util.math","c":"Vector","l":"setValue(int, double)","url":"setValue(int,double)"},{"p":"aima.core.probability.proposition","c":"AssignmentProposition","l":"setValue(Object)","url":"setValue(java.lang.Object)"},{"p":"aima.gui.swing.framework.util","c":"ListTableModel","l":"setValueAt(int, String)","url":"setValueAt(int,java.lang.String)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"setVariableSelection(ImprovedBacktrackingStrategy.Selection)","url":"setVariableSelection(aima.core.search.csp.ImprovedBacktrackingStrategy.Selection)"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"setWeightCutOff(double)"},{"p":"aima.core.environment.wumpusworld.action","c":"Shoot","l":"SHOOT_ACTION_NAME"},{"p":"aima.core.environment.wumpusworld.action","c":"Shoot","l":"Shoot()","url":"%3Cinit%3E()"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"showMessageBox(String, boolean)","url":"showMessageBox(java.lang.String,boolean)"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"showMessageBox(String)","url":"showMessageBox(java.lang.String)"},{"p":"aima.gui.swing.framework.util","c":"GuiBase","l":"showOKButtonMessageBox()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"showState()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"SIBIU"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"SimpleAgentApp()","url":"%3Cinit%3E()"},{"p":"aima.core.agent.impl","c":"SimpleEnvironmentView","l":"SimpleEnvironmentView()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"SimpleMapAgent(Map, EnvironmentViewNotifier, SearchForActions, int)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.agent.EnvironmentViewNotifier,aima.core.search.framework.SearchForActions,int)"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"SimpleMapAgent(Map, EnvironmentViewNotifier, SearchForActions, String[])","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.agent.EnvironmentViewNotifier,aima.core.search.framework.SearchForActions,java.lang.String[])"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"SimpleMapAgent(Map, EnvironmentViewNotifier, SearchForActions)","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.agent.EnvironmentViewNotifier,aima.core.search.framework.SearchForActions)"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"SimpleMapAgent(Map, SearchForActions, String[])","url":"%3Cinit%3E(aima.core.environment.map.Map,aima.core.search.framework.SearchForActions,java.lang.String[])"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"SimpleProblemSolvingAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"SimpleProblemSolvingAgent(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.agent.impl.aprog","c":"SimpleReflexAgentProgram","l":"SimpleReflexAgentProgram(Set<Rule>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"aima.core.environment.vacuum","c":"SimpleReflexVacuumAgent","l":"SimpleReflexVacuumAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"SimplifiedRoadMapOfAustralia()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"SimplifiedRoadMapOfPartOfRomania()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.inference.otter","c":"ClauseSimplifier","l":"simplify(Clause)","url":"simplify(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.otter.defaultimpl","c":"DefaultClauseSimplifier","l":"simplify(Clause)","url":"simplify(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"SimulatedAnnealingSearch(HeuristicFunction, Scheduler, NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction,aima.core.search.local.Scheduler,aima.core.search.framework.NodeExpander)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"SimulatedAnnealingSearch(HeuristicFunction, Scheduler)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction,aima.core.search.local.Scheduler)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch","l":"SimulatedAnnealingSearch(HeuristicFunction)","url":"%3Cinit%3E(aima.core.search.framework.evalfunc.HeuristicFunction)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"simulationPaused()"},{"p":"aima.gui.swing.framework","c":"SimulationThread","l":"SimulationThread(AgentAppFrame, AgentAppController, boolean)","url":"%3Cinit%3E(aima.gui.swing.framework.AgentAppFrame,aima.gui.swing.framework.AgentAppController,boolean)"},{"p":"aima.core.learning.framework","c":"DataSet","l":"size()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"size()"},{"p":"aima.core.probability.domain","c":"AbstractContinuousDomain","l":"size()"},{"p":"aima.core.probability.domain","c":"AbstractDiscreteDomain","l":"size()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"size()"},{"p":"aima.core.probability.domain","c":"ArbitraryTokenDomain","l":"size()"},{"p":"aima.core.probability.domain","c":"BooleanDomain","l":"size()"},{"p":"aima.core.probability.domain","c":"Domain","l":"size()"},{"p":"aima.core.probability.domain","c":"FiniteIntegerDomain","l":"size()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"size()"},{"p":"aima.core.search.csp","c":"Domain","l":"size()"},{"p":"aima.core.util.math","c":"Vector","l":"size()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"size()"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainListener","l":"skolemConstantAdded(FOLDomainSkolemConstantAddedEvent)","url":"skolemConstantAdded(aima.core.logic.fol.domain.FOLDomainSkolemConstantAddedEvent)"},{"p":"aima.core.logic.fol.domain","c":"FOLDomainListener","l":"skolemFunctionAdded(FOLDomainSkolemFunctionAddedEvent)","url":"skolemFunctionAdded(aima.core.logic.fol.domain.FOLDomainSkolemFunctionAddedEvent)"},{"p":"aima.core.search.local","c":"HillClimbingSearch.SearchOutcome","l":"SOLUTION_FOUND"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch.SearchOutcome","l":"SOLUTION_FOUND"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"SolutionStrategy()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp","c":"BacktrackingStrategy","l":"solve(CSP)","url":"solve(aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy","l":"solve(CSP)","url":"solve(aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"MinConflictsStrategy","l":"solve(CSP)","url":"solve(aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"SolutionStrategy","l":"solve(CSP)","url":"solve(aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"TreeCSPSolver","l":"solve(CSP)","url":"solve(aima.core.search.csp.CSP)"},{"p":"aima.core.util.math","c":"LUDecomposition","l":"solve(Matrix)","url":"solve(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"solve(Matrix)","url":"solve(aima.core.util.math.Matrix)"},{"p":"aima.core.logic.propositional.inference","c":"SATSolver","l":"solve(Set<Clause>)","url":"solve(java.util.Set)"},{"p":"aima.core.util.math","c":"Matrix","l":"solveTranspose(Matrix)","url":"solveTranspose(aima.core.util.math.Matrix)"},{"p":"aima.core.logic.propositional.inference","c":"DPLLSatisfiable","l":"someClauseFalse(Set<Clause>, Model)","url":"someClauseFalse(java.util.Set,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"sortAuthority(List<Page>)","url":"sortAuthority(java.util.List)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"sortHub(List<Page>)","url":"sortHub(java.util.List)"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"South"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"south()"},{"p":"aima.core.learning.framework","c":"DataSet","l":"specification"},{"p":"aima.core.learning.framework","c":"DataSet","l":"splitByAttribute(String)","url":"splitByAttribute(java.lang.String)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"SPRINKLER_RV"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleView","l":"squareButtons"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"StandardizeApart()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"StandardizeApartInPlace","l":"standardizeApart(Chain, int)","url":"standardizeApart(aima.core.logic.fol.kb.data.Chain,int)"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"standardizeApart(Chain, StandardizeApartIndexical)","url":"standardizeApart(aima.core.logic.fol.kb.data.Chain,aima.core.logic.fol.StandardizeApartIndexical)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"standardizeApart(Chain)","url":"standardizeApart(aima.core.logic.fol.kb.data.Chain)"},{"p":"aima.core.logic.fol","c":"StandardizeApartInPlace","l":"standardizeApart(Clause, int)","url":"standardizeApart(aima.core.logic.fol.kb.data.Clause,int)"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"standardizeApart(Clause, StandardizeApartIndexical)","url":"standardizeApart(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.StandardizeApartIndexical)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"standardizeApart(Clause)","url":"standardizeApart(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"standardizeApart(List<Literal>, List<Literal>, StandardizeApartIndexical)","url":"standardizeApart(java.util.List,java.util.List,aima.core.logic.fol.StandardizeApartIndexical)"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"standardizeApart(Sentence, StandardizeApartIndexical)","url":"standardizeApart(aima.core.logic.fol.parsing.ast.Sentence,aima.core.logic.fol.StandardizeApartIndexical)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"standardizeApart(Sentence)","url":"standardizeApart(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol","c":"StandardizeApart","l":"StandardizeApart(VariableCollector, SubstVisitor)","url":"%3Cinit%3E(aima.core.logic.fol.VariableCollector,aima.core.logic.fol.SubstVisitor)"},{"p":"aima.core.logic.fol","c":"StandardizeApartIndexicalFactory","l":"StandardizeApartIndexicalFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"StandardizeApartInPlace","l":"StandardizeApartInPlace()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol","c":"StandardizeApartResult","l":"StandardizeApartResult(Sentence, Sentence, Map<Variable, Term>, Map<Variable, Term>)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.Sentence,aima.core.logic.fol.parsing.ast.Sentence,java.util.Map,java.util.Map)"},{"p":"aima.gui.swing.framework","c":"SimpleAgentApp","l":"startApplication()"},{"p":"aima.core.environment.map","c":"MapAgent","l":"state"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"state"},{"p":"aima.core.learning.reinforcement","c":"PerceptStateReward","l":"state()"},{"p":"aima.core.learning.reinforcement.example","c":"CellWorldPercept","l":"state()"},{"p":"aima.core.search.csp","c":"CSPStateListener","l":"stateChanged(Assignment, CSP)","url":"stateChanged(aima.core.search.csp.Assignment,aima.core.search.csp.CSP)"},{"p":"aima.core.search.csp","c":"CSPStateListener","l":"stateChanged(CSP)","url":"stateChanged(aima.core.search.csp.CSP)"},{"p":"aima.core.probability.mdp","c":"MarkovDecisionProcess","l":"states()"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"states()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"STENCH"},{"p":"aima.core.agent","c":"Environment","l":"step()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"step()"},{"p":"aima.core.agent","c":"Environment","l":"step(int)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"step(int)"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"step(MessageLogger)","url":"step(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"step(MessageLogger)","url":"step(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"step(MessageLogger)","url":"step(aima.gui.swing.framework.MessageLogger)"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"stepButton"},{"p":"aima.core.search.framework.problem","c":"Problem","l":"stepCostFunction"},{"p":"aima.core.search.nondeterministic","c":"NondeterministicProblem","l":"stepCostFunction"},{"p":"aima.core.search.online","c":"OnlineSearchProblem","l":"stepCostFunction"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLTFMResolutionTracer","l":"stepFinished(Set<Clause>, InferenceResult)","url":"stepFinished(java.util.Set,aima.core.logic.fol.inference.InferenceResult)"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLTFMResolutionTracer","l":"stepInnerFor(Clause, Clause)","url":"stepInnerFor(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLTFMResolutionTracer","l":"stepOuterFor(Clause)","url":"stepOuterFor(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLTFMResolutionTracer","l":"stepResolved(Clause, Clause, Set<Clause>)","url":"stepResolved(aima.core.logic.fol.kb.data.Clause,aima.core.logic.fol.kb.data.Clause,java.util.Set)"},{"p":"aima.core.logic.fol.inference.trace","c":"FOLTFMResolutionTracer","l":"stepStartWhile(Set<Clause>, int, int)","url":"stepStartWhile(java.util.Set,int,int)"},{"p":"aima.core.agent","c":"Environment","l":"stepUntilDone()"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"stepUntilDone()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"STIFF_NECK_RV"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"storeDomainFor(Variable, Domain)","url":"storeDomainFor(aima.core.search.csp.Variable,aima.core.search.csp.Domain)"},{"p":"aima.core.learning.framework","c":"StringAttribute","l":"StringAttribute(String, StringAttributeSpecification)","url":"%3Cinit%3E(java.lang.String,aima.core.learning.framework.StringAttributeSpecification)"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"StringAttributeSpecification(String, List<String>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"aima.core.learning.framework","c":"StringAttributeSpecification","l":"StringAttributeSpecification(String, String[])","url":"%3Cinit%3E(java.lang.String,java.lang.String[])"},{"p":"aima.core.learning.learners","c":"StumpLearner","l":"StumpLearner(DecisionTree, String)","url":"%3Cinit%3E(aima.core.learning.inductive.DecisionTree,java.lang.String)"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"sub(Vector2D)","url":"sub(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"sub(Vector2D)","url":"sub(aima.core.util.math.geom.shapes.Vector2D)"},{"p":"aima.core.probability.proposition","c":"SubsetProposition","l":"SubsetProposition(String, FiniteDomain, RandomVariable)","url":"%3Cinit%3E(java.lang.String,aima.core.probability.domain.FiniteDomain,aima.core.probability.RandomVariable)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"subst(Map<Variable, Term>, Function)","url":"subst(java.util.Map,aima.core.logic.fol.parsing.ast.Function)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"subst(Map<Variable, Term>, Literal)","url":"subst(java.util.Map,aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"subst(Map<Variable, Term>, Literal)","url":"subst(java.util.Map,aima.core.logic.fol.kb.data.Literal)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"subst(Map<Variable, Term>, Sentence)","url":"subst(java.util.Map,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"subst(Map<Variable, Term>, Sentence)","url":"subst(java.util.Map,aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"subst(Map<Variable, Term>, Term)","url":"subst(java.util.Map,aima.core.logic.fol.parsing.ast.Term)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"subst(Map<Variable, Term>, Term)","url":"subst(java.util.Map,aima.core.logic.fol.parsing.ast.Term)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"substVisitor"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"SubstVisitor()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"subsumes(Clause)","url":"subsumes(aima.core.logic.fol.kb.data.Clause)"},{"p":"aima.core.logic.fol","c":"SubsumptionElimination","l":"SubsumptionElimination()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"SumInlinkHubScore(Page)","url":"SumInlinkHubScore(aima.core.nlp.ranking.Page)"},{"p":"aima.core.util","c":"Util","l":"sumOfSquares(List<T>)","url":"sumOfSquares(java.util.List)"},{"p":"aima.core.probability","c":"Factor","l":"sumOut(RandomVariable...)","url":"sumOut(aima.core.probability.RandomVariable...)"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"sumOut(RandomVariable...)","url":"sumOut(aima.core.probability.RandomVariable...)"},{"p":"aima.core.nlp.ranking","c":"HITS","l":"SumOutlinkAuthorityScore(Page)","url":"SumOutlinkAuthorityScore(aima.core.nlp.ranking.Page)"},{"p":"aima.core.util.math.geom","c":"SVGGroupParser","l":"SVGGroupParser()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"SYDNEY"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"SYMBOL"},{"p":"aima.core.logic.propositional.visitors","c":"SymbolCollector","l":"SymbolCollector()","url":"%3Cinit%3E()"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"T"},{"p":"aima.core.util.datastructure","c":"Table","l":"Table(List<RowHeaderType>, List<ColumnHeaderType>)","url":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"aima.core.agent.impl.aprog","c":"TableDrivenAgentProgram","l":"TableDrivenAgentProgram(Map<List<Percept>, Action>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"aima.core.environment.vacuum","c":"TableDrivenVacuumAgent","l":"TableDrivenVacuumAgent()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"TAMWORTH"},{"p":"aima.core.learning.neural","c":"NNDataSet","l":"targetColumnNumbers"},{"p":"aima.core.learning.framework","c":"Example","l":"targetValue()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"tell(List<? extends Sentence>)","url":"tell(java.util.List)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"tell(Sentence)","url":"tell(aima.core.logic.fol.parsing.ast.Sentence)"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"tell(Sentence)","url":"tell(aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"tell(String)","url":"tell(java.lang.String)"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"tell(String)","url":"tell(java.lang.String)"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"tellAll(String[])","url":"tellAll(java.lang.String[])"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"tellTemporalPhysicsSentences(int)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"TENNANT_CREEK"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"TermEquality(Term, Term)","url":"%3Cinit%3E(aima.core.logic.fol.parsing.ast.Term,aima.core.logic.fol.parsing.ast.Term)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"terminals"},{"p":"aima.core.learning.framework","c":"Learner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"AdaBoostLearner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"CurrentBestLearner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"MajorityLearner","l":"test(DataSet)","url":"test(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"testOn(DataSet)","url":"testOn(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"testOnDataSet(NNDataSet)","url":"testOnDataSet(aima.core.learning.neural.NNDataSet)"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"testOnDataSet(NNDataSet)","url":"testOnDataSet(aima.core.learning.neural.NNDataSet)"},{"p":"aima.gui.swing.framework","c":"MessageLoggerPanel","l":"textArea"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeGame","l":"TicTacToeGame()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"TicTacToeState()","url":"%3Cinit%3E()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"TIME_IN_MILLISECONDS"},{"p":"aima.core.util.math","c":"Matrix","l":"times(double)"},{"p":"aima.core.util.math","c":"Matrix","l":"times(Matrix)","url":"times(aima.core.util.math.Matrix)"},{"p":"aima.core.util.math","c":"Matrix","l":"timesEquals(double)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"TIMISOARA"},{"p":"aima.core.logic.common","c":"Token","l":"Token(int, String, int)","url":"%3Cinit%3E(int,java.lang.String,int)"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"TOOTHACHE_RV"},{"p":"aima.core.search.csp","c":"TreeCSPSolver","l":"topologicalSort(CSP, List<Variable>, Variable)","url":"topologicalSort(aima.core.search.csp.CSP,java.util.List,aima.core.search.csp.Variable)"},{"p":"aima.core.agent.impl","c":"ObjectWithDynamicAttributes","l":"toString()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ANDCondition","l":"toString()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"EQUALCondition","l":"toString()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"NOTCondition","l":"toString()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"ORCondition","l":"toString()"},{"p":"aima.core.agent.impl.aprog.simplerule","c":"Rule","l":"toString()"},{"p":"aima.core.environment.cellworld","c":"Cell","l":"toString()"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"toString()"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"toString()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard","l":"toString()"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"toString()"},{"p":"aima.core.environment.vacuum","c":"LocalVacuumEnvironmentPercept","l":"toString()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"toString()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPercept","l":"toString()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition","l":"toString()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"toString()"},{"p":"aima.core.environment.wumpusworld","c":"Room","l":"toString()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"toString()"},{"p":"aima.core.learning.framework","c":"Example","l":"toString()"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"toString()"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"toString()"},{"p":"aima.core.learning.inductive","c":"DecisionList","l":"toString()"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"toString()"},{"p":"aima.core.learning.knowledge","c":"FOLExample","l":"toString()"},{"p":"aima.core.logic.common","c":"Token","l":"toString()"},{"p":"aima.core.logic.fol.inference.proof","c":"ProofFinal","l":"toString()"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"toString()"},{"p":"aima.core.logic.fol.kb.data","c":"CNF","l":"toString()"},{"p":"aima.core.logic.fol.kb.data","c":"Chain","l":"toString()"},{"p":"aima.core.logic.fol.kb.data","c":"Clause","l":"toString()"},{"p":"aima.core.logic.fol.kb.data","c":"Literal","l":"toString()"},{"p":"aima.core.logic.fol.kb.data","c":"ReducedLiteral","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"ConnectedSentence","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Constant","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Function","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"NotSentence","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Predicate","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"QuantifiedSentence","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"TermEquality","l":"toString()"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"toString()"},{"p":"aima.core.logic.propositional.kb","c":"KnowledgeBase","l":"toString()"},{"p":"aima.core.logic.propositional.kb.data","c":"Clause","l":"toString()"},{"p":"aima.core.logic.propositional.kb.data","c":"ConjunctionOfClauses","l":"toString()"},{"p":"aima.core.logic.propositional.kb.data","c":"Literal","l":"toString()"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"toString()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"ComplexSentence","l":"toString()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"toString()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"toString()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"toString()"},{"p":"aima.core.nlp.parsing.grammars","c":"Rule","l":"toString()"},{"p":"aima.core.probability.bayes.impl","c":"AbstractNode","l":"toString()"},{"p":"aima.core.probability.domain","c":"AbstractFiniteDomain","l":"toString()"},{"p":"aima.core.probability.proposition","c":"AssignmentProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"ConjunctiveProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"DisjunctiveProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"EquivalentProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"IntegerSumProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"NotProposition","l":"toString()"},{"p":"aima.core.probability.proposition","c":"SubsetProposition","l":"toString()"},{"p":"aima.core.probability.util","c":"ProbabilityTable","l":"toString()"},{"p":"aima.core.probability.util","c":"RandVar","l":"toString()"},{"p":"aima.core.robotics.impl.datatypes","c":"AbstractRangeReading","l":"toString()"},{"p":"aima.core.search.csp","c":"Assignment","l":"toString()"},{"p":"aima.core.search.csp","c":"Domain","l":"toString()"},{"p":"aima.core.search.csp","c":"DomainRestoreInfo","l":"toString()"},{"p":"aima.core.search.csp","c":"Variable","l":"toString()"},{"p":"aima.core.search.framework","c":"Metrics","l":"toString()"},{"p":"aima.core.search.framework","c":"Node","l":"toString()"},{"p":"aima.core.search.local","c":"Individual","l":"toString()"},{"p":"aima.core.search.nondeterministic","c":"IfStateThenPlan","l":"toString()"},{"p":"aima.core.search.nondeterministic","c":"Plan","l":"toString()"},{"p":"aima.core.util","c":"FrequencyCounter","l":"toString()"},{"p":"aima.core.util.datastructure","c":"Pair","l":"toString()"},{"p":"aima.core.util.datastructure","c":"Table","l":"toString()"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"toString()"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"toString()"},{"p":"aima.core.util.math","c":"Interval","l":"toString()"},{"p":"aima.core.util.math","c":"Matrix","l":"toString()"},{"p":"aima.core.util.math","c":"MixedRadixNumber","l":"toString()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame.SelectionState","l":"toString()"},{"p":"aima.core.learning.inductive","c":"ConstantDecisonTree","l":"toString(int, StringBuffer)","url":"toString(int,java.lang.StringBuffer)"},{"p":"aima.core.learning.inductive","c":"DecisionTree","l":"toString(int, StringBuffer)","url":"toString(int,java.lang.StringBuffer)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"TOWNSVILLE"},{"p":"aima.core.util.math","c":"Matrix","l":"trace()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm.ProgressTracer","l":"traceProgress(int, Collection<Individual<A>>)","url":"traceProgress(int,java.util.Collection)"},{"p":"aima.core.learning.framework","c":"Learner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"AdaBoostLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"CurrentBestLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"DecisionListLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"DecisionTreeLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"MajorityLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.learners","c":"StumpLearner","l":"train(DataSet)","url":"train(aima.core.learning.framework.DataSet)"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"trainOn(NNDataSet, int)","url":"trainOn(aima.core.learning.neural.NNDataSet,int)"},{"p":"aima.core.learning.neural","c":"Perceptron","l":"trainOn(NNDataSet, int)","url":"trainOn(aima.core.learning.neural.NNDataSet,int)"},{"p":"aima.gui.swing.framework.util","c":"GraphicsTransfer2D","l":"transfer(IGeometric2D)","url":"transfer(aima.core.util.math.geom.shapes.IGeometric2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Circle2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Ellipse2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"IGeometric2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Line2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Polyline2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Ray2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.util.math.geom.shapes","c":"Rect2D","l":"transform(TransformMatrix2D)","url":"transform(aima.core.util.math.geom.shapes.TransformMatrix2D)"},{"p":"aima.core.probability.mdp","c":"MarkovDecisionProcess","l":"transitionProbability(S, S, A)","url":"transitionProbability(S,S,A)"},{"p":"aima.core.probability.mdp.impl","c":"MDP","l":"transitionProbability(S, S, A)","url":"transitionProbability(S,S,A)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"translate(double, double)","url":"translate(double,double)"},{"p":"aima.core.logic.propositional.inference","c":"SATPlan","l":"translateToSAT(SATPlan.Describe, SATPlan.Describe, SATPlan.Describe, int)","url":"translateToSAT(aima.core.logic.propositional.inference.SATPlan.Describe,aima.core.logic.propositional.inference.SATPlan.Describe,aima.core.logic.propositional.inference.SATPlan.Describe,int)"},{"p":"aima.core.util.math","c":"Matrix","l":"transpose()"},{"p":"aima.core.search.csp","c":"TreeCSPSolver","l":"TreeCSPSolver()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"TreeSearch","l":"TreeSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.framework.qsearch","c":"TreeSearch","l":"TreeSearch(NodeExpander)","url":"%3Cinit%3E(aima.core.search.framework.NodeExpander)"},{"p":"aima.core.util.datastructure","c":"Triplet","l":"Triplet(X, Y, Z)","url":"%3Cinit%3E(X,Y,Z)"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"TRUE"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"TRUE"},{"p":"aima.core.logic.propositional.parsing.ast","c":"PropositionSymbol","l":"TRUE_SYMBOL"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"tryWithAnotherGoal()"},{"p":"aima.core.logic.propositional.inference","c":"TTEntails","l":"ttCheckAll(KnowledgeBase, Sentence, List<PropositionSymbol>, Model)","url":"ttCheckAll(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence,java.util.List,aima.core.logic.propositional.kb.data.Model)"},{"p":"aima.core.logic.propositional.inference","c":"TTEntails","l":"TTEntails()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"TTEntails","l":"ttEntails(KnowledgeBase, Sentence)","url":"ttEntails(aima.core.logic.propositional.kb.KnowledgeBase,aima.core.logic.propositional.parsing.ast.Sentence)"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnLeft","l":"TURN_LEFT_ACTION_NAME"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnRight","l":"TURN_RIGHT_ACTION_NAME"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnLeft","l":"TurnLeft(AgentPosition.Orientation)","url":"%3Cinit%3E(aima.core.environment.wumpusworld.AgentPosition.Orientation)"},{"p":"aima.core.environment.wumpusworld.action","c":"TurnRight","l":"TurnRight(AgentPosition.Orientation)","url":"%3Cinit%3E(aima.core.environment.wumpusworld.AgentPosition.Orientation)"},{"p":"aima.core.util.datastructure","c":"TwoKeyHashMap","l":"TwoKeyHashMap()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"type"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"UMBREALLA_t_RV"},{"p":"aima.core.util.math","c":"Matrix","l":"uminus()"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"unifier"},{"p":"aima.core.logic.fol","c":"Unifier","l":"Unifier()","url":"%3Cinit%3E()"},{"p":"aima.core.search.uninformed","c":"UniformCostSearch","l":"UniformCostSearch()","url":"%3Cinit%3E()"},{"p":"aima.core.search.uninformed","c":"UniformCostSearch","l":"UniformCostSearch(QueueSearch)","url":"%3Cinit%3E(aima.core.search.framework.qsearch.QueueSearch)"},{"p":"aima.core.logic.fol","c":"Unifier","l":"unify(FOLNode, FOLNode, Map<Variable, Term>)","url":"unify(aima.core.logic.fol.parsing.ast.FOLNode,aima.core.logic.fol.parsing.ast.FOLNode,java.util.Map)"},{"p":"aima.core.logic.fol","c":"Unifier","l":"unify(FOLNode, FOLNode)","url":"unify(aima.core.logic.fol.parsing.ast.FOLNode,aima.core.logic.fol.parsing.ast.FOLNode)"},{"p":"aima.core.logic.fol.kb","c":"FOLKnowledgeBase","l":"unify(FOLNode, FOLNode)","url":"unify(aima.core.logic.fol.parsing.ast.FOLNode,aima.core.logic.fol.parsing.ast.FOLNode)"},{"p":"aima.core.logic.fol","c":"Unifier","l":"unify(List<? extends FOLNode>, List<? extends FOLNode>, Map<Variable, Term>)","url":"unify(java.util.List,java.util.List,java.util.Map)"},{"p":"aima.core.util","c":"DisjointSets","l":"union(E, E)","url":"union(E,E)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"union(PropositionSymbol, boolean)","url":"union(aima.core.logic.propositional.parsing.ast.PropositionSymbol,boolean)"},{"p":"aima.core.util","c":"SetOps","l":"union(Set<T>, Set<T>)","url":"union(java.util.Set,java.util.Set)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"unionInPlace(PropositionSymbol, boolean)","url":"unionInPlace(aima.core.logic.propositional.parsing.ast.PropositionSymbol,boolean)"},{"p":"aima.core.util.math.geom.shapes","c":"TransformMatrix2D","l":"UNITY_MATRIX"},{"p":"aima.core.learning.inductive","c":"DLTest","l":"unmatchedExamples(DataSet)","url":"unmatchedExamples(aima.core.learning.framework.DataSet)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"UNRESTRICTED"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"Up"},{"p":"aima.core.environment.eightpuzzle","c":"EightPuzzleBoard","l":"UP"},{"p":"aima.core.environment.fifteenpuzzle","c":"FifteenPuzzleBoard","l":"UP"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"up()"},{"p":"aima.gui.swing.applications.search.games","c":"FifteenPuzzleApp.FifteenPuzzleController","l":"update(SimulationThread)","url":"update(aima.gui.swing.framework.SimulationThread)"},{"p":"aima.gui.swing.framework","c":"AgentAppController","l":"update(SimulationThread)","url":"update(aima.gui.swing.framework.SimulationThread)"},{"p":"aima.gui.swing.framework","c":"DemoController","l":"update(SimulationThread)","url":"update(aima.gui.swing.framework.SimulationThread)"},{"p":"aima.core.learning.neural","c":"Layer","l":"updateBiases()"},{"p":"aima.gui.swing.framework","c":"AgentAppFrame","l":"updateEnabledState()"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"updateMetrics(Collection<Individual<A>>, int, long)","url":"updateMetrics(java.util.Collection,int,long)"},{"p":"aima.core.search.framework.qsearch","c":"QueueSearch","l":"updateMetrics(int)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"updatePerformanceMeasure(Agent, double)","url":"updatePerformanceMeasure(aima.core.agent.Agent,double)"},{"p":"aima.core.agent.impl.aprog","c":"ModelBasedReflexAgentProgram","l":"updateState(DynamicState, Action, Percept, Model)","url":"updateState(aima.core.agent.impl.DynamicState,aima.core.agent.Action,aima.core.agent.Percept,aima.core.agent.Model)"},{"p":"aima.core.environment.map","c":"MapAgent","l":"updateState(Percept)","url":"updateState(aima.core.agent.Percept)"},{"p":"aima.core.environment.map","c":"SimpleMapAgent","l":"updateState(Percept)","url":"updateState(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"ProblemSolvingAgent","l":"updateState(Percept)","url":"updateState(aima.core.agent.Percept)"},{"p":"aima.core.search.framework","c":"SimpleProblemSolvingAgent","l":"updateState(Percept)","url":"updateState(aima.core.agent.Percept)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"updateVarsAndTerminals()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"updateVarsAndTerminals()"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"updateVarsAndTerminals(Rule)","url":"updateVarsAndTerminals(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"updateVarsAndTerminals(Rule)","url":"updateVarsAndTerminals(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.learning.neural","c":"Layer","l":"updateWeights()"},{"p":"aima.core.learning.neural","c":"FeedForwardNeuralNetwork","l":"UPPER_LIMIT_WEIGHTS"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"URZICENI"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"useParentLinks"},{"p":"aima.core.search.framework","c":"NodeExpander","l":"useParentLinks(boolean)"},{"p":"aima.core.util","c":"Util","l":"Util()","url":"%3Cinit%3E()"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"utilMax"},{"p":"aima.core.search.adversarial","c":"IterativeDeepeningAlphaBetaSearch","l":"utilMin"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"V"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"VacuumEnvironment()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment","l":"VacuumEnvironment(VacuumEnvironment.LocationState, VacuumEnvironment.LocationState)","url":"%3Cinit%3E(aima.core.environment.vacuum.VacuumEnvironment.LocationState,aima.core.environment.vacuum.VacuumEnvironment.LocationState)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"VacuumEnvironmentState()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentState","l":"VacuumEnvironmentState(VacuumEnvironment.LocationState, VacuumEnvironment.LocationState)","url":"%3Cinit%3E(aima.core.environment.vacuum.VacuumEnvironment.LocationState,aima.core.environment.vacuum.VacuumEnvironment.LocationState)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironmentViewActionTracker","l":"VacuumEnvironmentViewActionTracker(StringBuilder)","url":"%3Cinit%3E(java.lang.StringBuilder)"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldActions","l":"VacuumWorldActions()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldGoalTest","l":"VacuumWorldGoalTest(Agent)","url":"%3Cinit%3E(aima.core.agent.Agent)"},{"p":"aima.core.environment.vacuum","c":"VacuumWorldResults","l":"VacuumWorldResults(Agent)","url":"%3Cinit%3E(aima.core.agent.Agent)"},{"p":"aima.core.search.local","c":"GeneticAlgorithm","l":"validatePopulation(Collection<Individual<A>>)","url":"validatePopulation(java.util.Collection)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"validateRuleProbabilities(List<Rule>)","url":"validateRuleProbabilities(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"validateRuleProbabilities(List<Rule>)","url":"validateRuleProbabilities(java.util.List)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbCNFGrammar","l":"validRule(Rule)","url":"validRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextFreeGrammar","l":"validRule(Rule)","url":"validRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbContextSensitiveGrammar","l":"validRule(Rule)","url":"validRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"validRule(Rule)","url":"validRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbabilisticGrammar","l":"validRule(Rule)","url":"validRule(aima.core.nlp.parsing.grammars.Rule)"},{"p":"aima.core.learning.framework","c":"NumericAttribute","l":"valueAsDouble()"},{"p":"aima.core.learning.framework","c":"Attribute","l":"valueAsString()"},{"p":"aima.core.learning.framework","c":"NumericAttribute","l":"valueAsString()"},{"p":"aima.core.learning.framework","c":"StringAttribute","l":"valueAsString()"},{"p":"aima.core.probability.mdp.search","c":"ValueIteration","l":"ValueIteration(double)","url":"%3Cinit%3E(double)"},{"p":"aima.core.probability.mdp.search","c":"ValueIteration","l":"valueIteration(MarkovDecisionProcess<S, A>, double)","url":"valueIteration(aima.core.probability.mdp.MarkovDecisionProcess,double)"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard.Config","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment.LocationState","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Inference","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Selection","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.search.local","c":"HillClimbingSearch.SearchOutcome","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch.SearchOutcome","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"aima.core.environment.cellworld","c":"CellWorldAction","l":"values()"},{"p":"aima.core.environment.nqueens","c":"NQueensBoard.Config","l":"values()"},{"p":"aima.core.environment.vacuum","c":"VacuumEnvironment.LocationState","l":"values()"},{"p":"aima.core.environment.wumpusworld","c":"AgentPosition.Orientation","l":"values()"},{"p":"aima.core.logic.propositional.parsing.ast","c":"Connective","l":"values()"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Inference","l":"values()"},{"p":"aima.core.search.csp","c":"ImprovedBacktrackingStrategy.Selection","l":"values()"},{"p":"aima.core.search.local","c":"HillClimbingSearch.SearchOutcome","l":"values()"},{"p":"aima.core.search.local","c":"SimulatedAnnealingSearch.SearchOutcome","l":"values()"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"values()"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"VARIABLE"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"Variable(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"aima.core.logic.fol.parsing.ast","c":"Variable","l":"Variable(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.search.csp","c":"Variable","l":"Variable(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation","l":"variableCollector"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"VariableCollector()","url":"%3Cinit%3E()"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"variables"},{"p":"aima.core.nlp.parsing.grammars","c":"ProbUnrestrictedGrammar","l":"vars"},{"p":"aima.core.probability.bayes.impl","c":"BayesNet","l":"varToNodeMap"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"VASLUI"},{"p":"aima.core.util.math.geom.shapes","c":"Point2D","l":"vec(Point2D)","url":"vec(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util.math","c":"Vector","l":"Vector(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.util.math","c":"Vector","l":"Vector(List<Double>)","url":"%3Cinit%3E(java.util.List)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"Vector2D(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"aima.core.agent.impl","c":"AbstractEnvironment","l":"views"},{"p":"aima.core.logic.propositional.parsing","c":"AbstractPLVisitor","l":"visitBinarySentence(ComplexSentence, A)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,A)"},{"p":"aima.core.logic.propositional.parsing","c":"PLVisitor","l":"visitBinarySentence(ComplexSentence, A)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,A)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"visitBinarySentence(ComplexSentence, Boolean)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Boolean)"},{"p":"aima.core.logic.propositional.visitors","c":"BiconditionalElimination","l":"visitBinarySentence(ComplexSentence, Object)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Object)"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeAndOverOr","l":"visitBinarySentence(ComplexSentence, Object)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Object)"},{"p":"aima.core.logic.propositional.visitors","c":"DistributeOrOverAnd","l":"visitBinarySentence(ComplexSentence, Object)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Object)"},{"p":"aima.core.logic.propositional.visitors","c":"ImplicationElimination","l":"visitBinarySentence(ComplexSentence, Object)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Object)"},{"p":"aima.core.logic.propositional.visitors","c":"ClauseCollector","l":"visitBinarySentence(ComplexSentence, Set<Clause>)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.util.Set)"},{"p":"aima.core.logic.propositional.visitors","c":"BasicGatherer","l":"visitBinarySentence(ComplexSentence, Set<T>)","url":"visitBinarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.util.Set)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitConnectedSentence(ConnectedSentence, Object)","url":"visitConnectedSentence(aima.core.logic.fol.parsing.ast.ConnectedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitConstant(Constant, Object)","url":"visitConstant(aima.core.logic.fol.parsing.ast.Constant,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitFunction(Function, Object)","url":"visitFunction(aima.core.logic.fol.parsing.ast.Function,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitNotSentence(NotSentence, Object)","url":"visitNotSentence(aima.core.logic.fol.parsing.ast.NotSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitPredicate(Predicate, Object)","url":"visitPredicate(aima.core.logic.fol.parsing.ast.Predicate,java.lang.Object)"},{"p":"aima.core.logic.propositional.parsing","c":"AbstractPLVisitor","l":"visitPropositionSymbol(PropositionSymbol, A)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,A)"},{"p":"aima.core.logic.propositional.parsing","c":"PLVisitor","l":"visitPropositionSymbol(PropositionSymbol, A)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,A)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"visitPropositionSymbol(PropositionSymbol, Boolean)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,java.lang.Boolean)"},{"p":"aima.core.logic.propositional.visitors","c":"ClauseCollector","l":"visitPropositionSymbol(PropositionSymbol, Set<Clause>)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,java.util.Set)"},{"p":"aima.core.logic.propositional.visitors","c":"SymbolCollector","l":"visitPropositionSymbol(PropositionSymbol, Set<PropositionSymbol>)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,java.util.Set)"},{"p":"aima.core.logic.propositional.visitors","c":"BasicGatherer","l":"visitPropositionSymbol(PropositionSymbol, Set<T>)","url":"visitPropositionSymbol(aima.core.logic.propositional.parsing.ast.PropositionSymbol,java.util.Set)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitQuantifiedSentence(QuantifiedSentence, Object)","url":"visitQuantifiedSentence(aima.core.logic.fol.parsing.ast.QuantifiedSentence,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitTermEquality(TermEquality, Object)","url":"visitTermEquality(aima.core.logic.fol.parsing.ast.TermEquality,java.lang.Object)"},{"p":"aima.core.logic.propositional.parsing","c":"AbstractPLVisitor","l":"visitUnarySentence(ComplexSentence, A)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,A)"},{"p":"aima.core.logic.propositional.parsing","c":"PLVisitor","l":"visitUnarySentence(ComplexSentence, A)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,A)"},{"p":"aima.core.logic.propositional.kb.data","c":"Model","l":"visitUnarySentence(ComplexSentence, Boolean)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Boolean)"},{"p":"aima.core.logic.propositional.visitors","c":"MoveNotInwards","l":"visitUnarySentence(ComplexSentence, Object)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.lang.Object)"},{"p":"aima.core.logic.propositional.visitors","c":"ClauseCollector","l":"visitUnarySentence(ComplexSentence, Set<Clause>)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.util.Set)"},{"p":"aima.core.logic.propositional.visitors","c":"BasicGatherer","l":"visitUnarySentence(ComplexSentence, Set<T>)","url":"visitUnarySentence(aima.core.logic.propositional.parsing.ast.ComplexSentence,java.util.Set)"},{"p":"aima.core.logic.fol","c":"PredicateCollector","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"SubstVisitor","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol","c":"VariableCollector","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.IdentifyCandidateMatchingTerm","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol.inference","c":"AbstractModulation.ReplaceMatchingTerm","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"AbstractFOLVisitor","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.logic.fol.parsing","c":"FOLVisitor","l":"visitVariable(Variable, Object)","url":"visitVariable(aima.core.logic.fol.parsing.ast.Variable,java.lang.Object)"},{"p":"aima.core.search.csp.examples","c":"MapCSP","l":"WA"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"WAGGA_WAGGA"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"WalkSAT()","url":"%3Cinit%3E()"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"WalkSAT(Random)","url":"%3Cinit%3E(java.util.Random)"},{"p":"aima.core.logic.propositional.inference","c":"WalkSAT","l":"walkSAT(Set<Clause>, double, int)","url":"walkSAT(java.util.Set,double,int)"},{"p":"aima.core.environment.xyenv","c":"Wall","l":"Wall()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"WARNAMBOOL"},{"p":"aima.core.logic.fol.domain","c":"DomainFactory","l":"weaponsDomain()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"WEATHER_RV"},{"p":"aima.core.probability.bayes.approx","c":"LikelihoodWeighting","l":"weightedSample(BayesianNetwork, AssignmentProposition[])","url":"weightedSample(aima.core.probability.bayes.BayesianNetwork,aima.core.probability.proposition.AssignmentProposition[])"},{"p":"aima.core.robotics","c":"MonteCarloLocalization","l":"weightSamples(Set<P>, R[])","url":"weightSamples(java.util.Set,R[])"},{"p":"aima.core.util.datastructure","c":"XYLocation.Direction","l":"West"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"west()"},{"p":"aima.core.probability.example","c":"ExampleRV","l":"WET_GRASS_RV"},{"p":"aima.core.logic.common","c":"LogicTokenTypes","l":"WHITESPACE"},{"p":"aima.core.nlp.ranking","c":"WikiLinkFinder","l":"WikiLinkFinder()","url":"%3Cinit%3E()"},{"p":"aima.core.nlp.ranking","c":"PagesDataset","l":"wikiPageFromFile(File, File)","url":"wikiPageFromFile(java.io.File,java.io.File)"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"winPositions1"},{"p":"aima.core.environment.connectfour","c":"ConnectFourState","l":"winPositions2"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"WUMPUS"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"WUMPUS_ALIVE"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"WumpusCave()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"WumpusCave(int, int, Set<AgentPosition>)","url":"%3Cinit%3E(int,int,java.util.Set)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusCave","l":"WumpusCave(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusFunctionFactory","l":"WumpusFunctionFactory()","url":"%3Cinit%3E()"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"WumpusKnowledgeBase(DPLL, int)","url":"%3Cinit%3E(aima.core.logic.propositional.inference.DPLL,int)"},{"p":"aima.core.environment.wumpusworld","c":"WumpusKnowledgeBase","l":"WumpusKnowledgeBase(int)","url":"%3Cinit%3E(int)"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfAustralia","l":"WYNDHAM"},{"p":"aima.core.environment.tictactoe","c":"TicTacToeState","l":"X"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"X_VECTOR"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"x(double)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"x(Point2D)","url":"x(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.environment.xyenv","c":"XYEnvironment","l":"XYEnvironment(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.util.datastructure","c":"XYLocation","l":"XYLocation(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"Y_VECTOR"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"y(double)"},{"p":"aima.gui.swing.framework","c":"EmptyEnvironmentView","l":"y(Point2D)","url":"y(aima.core.util.math.geom.shapes.Point2D)"},{"p":"aima.core.util","c":"Util","l":"YES"},{"p":"aima.core.util","c":"Util","l":"yesno()"},{"p":"aima.core.environment.map","c":"SimplifiedRoadMapOfPartOfRomania","l":"ZERIND"},{"p":"aima.core.robotics.impl.datatypes","c":"Angle","l":"ZERO_ANGLE"},{"p":"aima.core.util.math.geom.shapes","c":"Vector2D","l":"ZERO_VECTOR"}]